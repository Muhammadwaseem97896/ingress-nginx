<?xml version="1.0" encoding="UTF-8"?>
  <testsuites tests="421" disabled="6" errors="0" failures="0" time="2380.302049359">
      <testsuite name="nginx-ingress-controller e2e suite" package="/" tests="421" disabled="0" skipped="6" errors="0" failures="0" time="2380.302049359" timestamp="2023-03-16T06:37:32">
          <properties>
              <property name="SuiteSucceeded" value="true"></property>
              <property name="SuiteHasProgrammaticFocus" value="false"></property>
              <property name="SpecialSuiteFailureReason" value=""></property>
              <property name="SuiteLabels" value="[]"></property>
              <property name="RandomSeed" value="1678948652"></property>
              <property name="RandomizeAllSpecs" value="true"></property>
              <property name="LabelFilter" value=""></property>
              <property name="FocusStrings" value=""></property>
              <property name="SkipStrings" value="\[Memory Leak\]"></property>
              <property name="FocusFiles" value=""></property>
              <property name="SkipFiles" value=""></property>
              <property name="FailOnPending" value="false"></property>
              <property name="FailFast" value="true"></property>
              <property name="FlakeAttempts" value="2"></property>
              <property name="DryRun" value="false"></property>
              <property name="ParallelTotal" value="7"></property>
              <property name="OutputInterceptorMode" value=""></property>
          </properties>
          <testcase name="[It] [Annotations] canary-* when canary is created should route requests to the correct upstream if mainline ingress is created after the canary ingress" classname="nginx-ingress-controller e2e suite" status="passed" time="81.214993057">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:37:32.303&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:37:40.206 (7.903s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 03/16/23 06:37:40.206&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 03/16/23 06:38:36.248 (56.042s)&#xA;&gt; Enter [It] should route requests to the correct upstream if mainline ingress is created after the canary ingress - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:206 @ 03/16/23 06:38:36.248&#xA;STEP: routing requests destined for the mainline ingress to the mainelin upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:231 @ 03/16/23 06:38:53.341&#xA;STEP: routing requests destined for the canary ingress to the canary upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:240 @ 03/16/23 06:38:53.344&#xA;&lt; Exit [It] should route requests to the correct upstream if mainline ingress is created after the canary ingress - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:206 @ 03/16/23 06:38:53.346 (17.098s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:38:53.346&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:38:53.518 (171ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] ingress-class With watch-ingress-without-class flag should watch Ingress with no class and ignore ingress with a different class" classname="nginx-ingress-controller e2e suite" status="passed" time="35.100961463">
              <system-err>&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:38:53.518&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:39:02.343 (8.825s)&#xA;&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 03/16/23 06:39:02.343&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 03/16/23 06:39:04.361 (2.018s)&#xA;&gt; Enter [BeforeEach] With watch-ingress-without-class flag - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:462 @ 03/16/23 06:39:04.361&#xA;&lt; Exit [BeforeEach] With watch-ingress-without-class flag - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:462 @ 03/16/23 06:39:11.377 (7.016s)&#xA;&gt; Enter [It] should watch Ingress with no class and ignore ingress with a different class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:482 @ 03/16/23 06:39:11.377&#xA;&lt; Exit [It] should watch Ingress with no class and ignore ingress with a different class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:482 @ 03/16/23 06:39:28.484 (17.107s)&#xA;&gt; Enter [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:39:28.484&#xA;&lt; Exit [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:39:28.619 (136ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* canary affinity behavior always routes traffic to canary if first request was affinitized to canary (explicit sticky behavior)" classname="nginx-ingress-controller e2e suite" status="passed" time="36.587528952">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:39:28.62&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:39:35.415 (6.796s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 03/16/23 06:39:35.415&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 03/16/23 06:39:39.452 (4.036s)&#xA;&gt; Enter [It] always routes traffic to canary if first request was affinitized to canary (explicit sticky behavior) - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:973 @ 03/16/23 06:39:39.452&#xA;&lt; Exit [It] always routes traffic to canary if first request was affinitized to canary (explicit sticky behavior) - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:973 @ 03/16/23 06:40:05.01 (25.558s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:40:05.01&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:40:05.207 (197ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] ingress-class With ingress-class-by-name flag should watch Ingress that uses the class name even if spec is different" classname="nginx-ingress-controller e2e suite" status="passed" time="43.173644571">
              <system-err>&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:40:05.208&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:40:12.03 (6.822s)&#xA;&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 03/16/23 06:40:12.03&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 03/16/23 06:40:16.052 (4.022s)&#xA;&gt; Enter [BeforeEach] With ingress-class-by-name flag - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:518 @ 03/16/23 06:40:16.052&#xA;&lt; Exit [BeforeEach] With ingress-class-by-name flag - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:518 @ 03/16/23 06:40:24.069 (8.017s)&#xA;&gt; Enter [It] should watch Ingress that uses the class name even if spec is different - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:539 @ 03/16/23 06:40:24.069&#xA;&lt; Exit [It] should watch Ingress that uses the class name even if spec is different - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:539 @ 03/16/23 06:40:48.241 (24.173s)&#xA;&gt; Enter [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:40:48.241&#xA;&lt; Exit [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:40:48.381 (140ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] client-body-buffer-size should set client_body_buffer_size to 1M" classname="nginx-ingress-controller e2e suite" status="passed" time="21.13771837">
              <system-err>&gt; Enter [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:40:48.382&#xA;&lt; Exit [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:40:55.23 (6.848s)&#xA;&gt; Enter [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:31 @ 03/16/23 06:40:55.23&#xA;&lt; Exit [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:31 @ 03/16/23 06:40:59.25 (4.02s)&#xA;&gt; Enter [It] should set client_body_buffer_size to 1M - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:123 @ 03/16/23 06:40:59.25&#xA;&lt; Exit [It] should set client_body_buffer_size to 1M - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:123 @ 03/16/23 06:41:09.36 (10.11s)&#xA;&gt; Enter [AfterEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:41:09.36&#xA;&lt; Exit [AfterEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:41:09.519 (160ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should not allow - unmatching origin with wildcard origin (2 subdomains)" classname="nginx-ingress-controller e2e suite" status="passed" time="22.153003223">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:41:09.52&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:41:18.421 (8.901s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 03/16/23 06:41:18.421&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 03/16/23 06:41:24.463 (6.042s)&#xA;&gt; Enter [It] should not allow - unmatching origin with wildcard origin (2 subdomains) - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:468 @ 03/16/23 06:41:24.463&#xA;&lt; Exit [It] should not allow - unmatching origin with wildcard origin (2 subdomains) - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:468 @ 03/16/23 06:41:31.478 (7.015s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:41:31.478&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:41:31.673 (195ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should allow correct origins - single origin for multiple cors values" classname="nginx-ingress-controller e2e suite" status="passed" time="18.124359522">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:41:31.673&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:41:38.569 (6.896s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 03/16/23 06:41:38.569&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 03/16/23 06:41:42.604 (4.035s)&#xA;&gt; Enter [It] should allow correct origins - single origin for multiple cors values - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:216 @ 03/16/23 06:41:42.604&#xA;&lt; Exit [It] should allow correct origins - single origin for multiple cors values - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:216 @ 03/16/23 06:41:49.623 (7.019s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:41:49.623&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:41:49.798 (174ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* should set cache_key when external auth cache is configured" classname="nginx-ingress-controller e2e suite" status="passed" time="23.264809763">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:41:49.798&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:41:58.77 (8.972s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 06:41:58.77&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 06:42:02.794 (4.024s)&#xA;&gt; Enter [It] should set cache_key when external auth cache is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:322 @ 03/16/23 06:42:02.794&#xA;&lt; Exit [It] should set cache_key when external auth cache is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:322 @ 03/16/23 06:42:12.913 (10.119s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:42:12.913&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:42:13.063 (150ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] backend-protocol should set backend protocol to https:// and use proxy_pass" classname="nginx-ingress-controller e2e suite" status="passed" time="23.162066177">
              <system-err>&gt; Enter [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:42:13.063&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:42:21.92 (8.856s)&#xA;&gt; Enter [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:30 @ 03/16/23 06:42:21.92&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:30 @ 03/16/23 06:42:25.947 (4.027s)&#xA;&gt; Enter [It] should set backend protocol to https:// and use proxy_pass - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:34 @ 03/16/23 06:42:25.947&#xA;&lt; Exit [It] should set backend protocol to https:// and use proxy_pass - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:34 @ 03/16/23 06:42:36.044 (10.097s)&#xA;&gt; Enter [AfterEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:42:36.044&#xA;&lt; Exit [AfterEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:42:36.225 (181ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] mirror-* should disable mirror-request-body" classname="nginx-ingress-controller e2e suite" status="passed" time="22.176446112">
              <system-err>&gt; Enter [BeforeEach] [Annotations] mirror-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:42:36.226&#xA;&lt; Exit [BeforeEach] [Annotations] mirror-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:42:44.111 (7.886s)&#xA;&gt; Enter [BeforeEach] [Annotations] mirror-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/mirror.go:32 @ 03/16/23 06:42:44.111&#xA;&lt; Exit [BeforeEach] [Annotations] mirror-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/mirror.go:32 @ 03/16/23 06:42:48.135 (4.024s)&#xA;&gt; Enter [It] should disable mirror-request-body - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/mirror.go:67 @ 03/16/23 06:42:48.135&#xA;&lt; Exit [It] should disable mirror-request-body - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/mirror.go:67 @ 03/16/23 06:42:58.242 (10.107s)&#xA;&gt; Enter [AfterEach] [Annotations] mirror-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:42:58.242&#xA;&lt; Exit [AfterEach] [Annotations] mirror-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:42:58.402 (161ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] nginx-configuration fails when using alias directive" classname="nginx-ingress-controller e2e suite" status="passed" time="62.031573261">
              <system-err>&gt; Enter [BeforeEach] [Setting] nginx-configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:98 @ 03/16/23 06:42:58.403&#xA;&lt; Exit [BeforeEach] [Setting] nginx-configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:98 @ 03/16/23 06:43:00.407 (2.004s)&#xA;&gt; Enter [It] fails when using alias directive - /go/src/k8s.io/ingress-nginx/test/e2e/nginx/nginx.go:115 @ 03/16/23 06:43:00.407&#xA;&lt; Exit [It] fails when using alias directive - /go/src/k8s.io/ingress-nginx/test/e2e/nginx/nginx.go:115 @ 03/16/23 06:44:00.433 (1m0.025s)&#xA;&gt; Enter [AfterEach] [Setting] nginx-configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:99 @ 03/16/23 06:44:00.433&#xA;&lt; Exit [AfterEach] [Setting] nginx-configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:99 @ 03/16/23 06:44:00.434 (2ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] enable-multi-accept should be enabled by default" classname="nginx-ingress-controller e2e suite" status="passed" time="10.103954487">
              <system-err>&gt; Enter [BeforeEach] [Setting] enable-multi-accept - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:44:00.435&#xA;&lt; Exit [BeforeEach] [Setting] enable-multi-accept - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:44:07.246 (6.811s)&#xA;&gt; Enter [It] should be enabled by default - /go/src/k8s.io/ingress-nginx/test/e2e/settings/multi_accept.go:31 @ 03/16/23 06:44:07.246&#xA;&lt; Exit [It] should be enabled by default - /go/src/k8s.io/ingress-nginx/test/e2e/settings/multi_accept.go:31 @ 03/16/23 06:44:10.372 (3.126s)&#xA;&gt; Enter [AfterEach] [Setting] enable-multi-accept - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:44:10.372&#xA;&lt; Exit [AfterEach] [Setting] enable-multi-accept - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:44:10.539 (166ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] log-format-* Check log-format-upstream with log-format-escape-json and log-format-escape-none log-format default escape" classname="nginx-ingress-controller e2e suite" status="passed" time="31.19912001">
              <system-err>&gt; Enter [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:44:10.539&#xA;&lt; Exit [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:44:17.439 (6.9s)&#xA;&gt; Enter [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:33 @ 03/16/23 06:44:17.439&#xA;&lt; Exit [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:33 @ 03/16/23 06:44:28.463 (11.024s)&#xA;&gt; Enter [It] log-format default escape - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:105 @ 03/16/23 06:44:28.463&#xA;&lt; Exit [It] log-format default escape - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:105 @ 03/16/23 06:44:41.578 (13.115s)&#xA;&gt; Enter [AfterEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:44:41.578&#xA;&lt; Exit [AfterEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:44:41.738 (160ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] gzip should set gzip_types to application/javascript" classname="nginx-ingress-controller e2e suite" status="passed" time="24.332445985">
              <system-err>&gt; Enter [BeforeEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:44:41.738&#xA;&lt; Exit [BeforeEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:44:48.71 (6.972s)&#xA;&gt; Enter [It] should set gzip_types to application/javascript - /go/src/k8s.io/ingress-nginx/test/e2e/settings/gzip.go:89 @ 03/16/23 06:44:48.71&#xA;&lt; Exit [It] should set gzip_types to application/javascript - /go/src/k8s.io/ingress-nginx/test/e2e/settings/gzip.go:89 @ 03/16/23 06:45:05.844 (17.134s)&#xA;&gt; Enter [AfterEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:45:05.844&#xA;&lt; Exit [AfterEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:45:06.071 (226ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Ingress] DeepInspection should drop whole ingress if one path matches invalid regex" classname="nginx-ingress-controller e2e suite" status="passed" time="28.154449472">
              <system-err>&gt; Enter [BeforeEach] [Ingress] DeepInspection - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:45:06.072&#xA;&lt; Exit [BeforeEach] [Ingress] DeepInspection - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:45:12.885 (6.813s)&#xA;&gt; Enter [BeforeEach] [Ingress] DeepInspection - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/deep_inspection.go:30 @ 03/16/23 06:45:12.885&#xA;&lt; Exit [BeforeEach] [Ingress] DeepInspection - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/deep_inspection.go:30 @ 03/16/23 06:45:16.907 (4.022s)&#xA;&gt; Enter [It] should drop whole ingress if one path matches invalid regex - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/deep_inspection.go:34 @ 03/16/23 06:45:16.907&#xA;&lt; Exit [It] should drop whole ingress if one path matches invalid regex - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/deep_inspection.go:34 @ 03/16/23 06:45:34.074 (17.167s)&#xA;&gt; Enter [AfterEach] [Ingress] DeepInspection - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:45:34.074&#xA;&lt; Exit [AfterEach] [Ingress] DeepInspection - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:45:34.226 (152ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] stream-snippet should add stream-snippet and drop annotations per admin config" classname="nginx-ingress-controller e2e suite" status="passed" time="40.152448312">
              <system-err>&gt; Enter [BeforeEach] [Setting] stream-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:45:34.227&#xA;&lt; Exit [BeforeEach] [Setting] stream-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:45:41.079 (6.852s)&#xA;&gt; Enter [BeforeEach] [Setting] stream-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/streamsnippet.go:37 @ 03/16/23 06:45:41.079&#xA;&lt; Exit [BeforeEach] [Setting] stream-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/streamsnippet.go:37 @ 03/16/23 06:45:45.105 (4.026s)&#xA;&gt; Enter [It] should add stream-snippet and drop annotations per admin config - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/streamsnippet.go:85 @ 03/16/23 06:45:45.105&#xA;&lt; Exit [It] should add stream-snippet and drop annotations per admin config - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/streamsnippet.go:85 @ 03/16/23 06:46:14.215 (29.11s)&#xA;&gt; Enter [AfterEach] [Setting] stream-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:46:14.215&#xA;&lt; Exit [AfterEach] [Setting] stream-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:46:14.379 (164ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Service] Type ExternalName works with external name set to incomplete fqdn" classname="nginx-ingress-controller e2e suite" status="passed" time="22.171635122">
              <system-err>&gt; Enter [BeforeEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:46:14.38&#xA;&lt; Exit [BeforeEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:46:22.202 (7.823s)&#xA;&gt; Enter [It] works with external name set to incomplete fqdn - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_externalname.go:62 @ 03/16/23 06:46:22.202&#xA;&lt; Exit [It] works with external name set to incomplete fqdn - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_externalname.go:62 @ 03/16/23 06:46:36.353 (14.151s)&#xA;&gt; Enter [AfterEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:46:36.353&#xA;&lt; Exit [AfterEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:46:36.551 (198ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] proxy-* should change the default proxy HTTP version" classname="nginx-ingress-controller e2e suite" status="passed" time="19.091428942">
              <system-err>&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:46:36.553&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:46:43.374 (6.821s)&#xA;&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 03/16/23 06:46:43.374&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 03/16/23 06:46:45.394 (2.02s)&#xA;&gt; Enter [It] should change the default proxy HTTP version - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:233 @ 03/16/23 06:46:45.394&#xA;&lt; Exit [It] should change the default proxy HTTP version - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:233 @ 03/16/23 06:46:55.497 (10.103s)&#xA;&gt; Enter [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:46:55.497&#xA;&lt; Exit [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:46:55.644 (148ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* when canaried by header with no value should route requests to the correct upstream" classname="nginx-ingress-controller e2e suite" status="passed" time="30.127004507">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:46:55.645&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:47:02.458 (6.813s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 03/16/23 06:47:02.458&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 03/16/23 06:47:08.501 (6.043s)&#xA;&gt; Enter [It] should route requests to the correct upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:372 @ 03/16/23 06:47:08.501&#xA;STEP: routing requests to the canary upstream when header is set to &#39;always&#39; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:395 @ 03/16/23 06:47:25.596&#xA;STEP: routing requests to the mainline upstream when header is set to &#39;never&#39; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:404 @ 03/16/23 06:47:25.599&#xA;STEP: routing requests to the mainline upstream when header is set to anything else - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:414 @ 03/16/23 06:47:25.603&#xA;&lt; Exit [It] should route requests to the correct upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:372 @ 03/16/23 06:47:25.605 (17.104s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:47:25.605&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:47:25.772 (166ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Service] backend status code 503 should return 503 when all backend service endpoints are unavailable" classname="nginx-ingress-controller e2e suite" status="passed" time="17.125486132">
              <system-err>&gt; Enter [BeforeEach] [Service] backend status code 503 - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:47:25.772&#xA;&lt; Exit [BeforeEach] [Service] backend status code 503 - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:47:32.635 (6.863s)&#xA;&gt; Enter [It] should return 503 when all backend service endpoints are unavailable - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_backend.go:54 @ 03/16/23 06:47:32.635&#xA;&lt; Exit [It] should return 503 when all backend service endpoints are unavailable - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_backend.go:54 @ 03/16/23 06:47:42.734 (10.1s)&#xA;&gt; Enter [AfterEach] [Service] backend status code 503 - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:47:42.734&#xA;&lt; Exit [AfterEach] [Service] backend status code 503 - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:47:42.897 (163ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* when external authentication is configured should not create additional upstream block when auth-keepalive is negative" classname="nginx-ingress-controller e2e suite" status="passed" time="48.225269219">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:47:42.898&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:47:49.694 (6.796s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 06:47:49.694&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 06:47:53.712 (4.018s)&#xA;&gt; Enter [BeforeEach] when external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:458 @ 03/16/23 06:47:53.712&#xA;&lt; Exit [BeforeEach] when external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:458 @ 03/16/23 06:48:07.839 (14.127s)&#xA;&gt; Enter [It] should not create additional upstream block when auth-keepalive is negative - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:590 @ 03/16/23 06:48:07.839&#xA;&lt; Exit [It] should not create additional upstream block when auth-keepalive is negative - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:590 @ 03/16/23 06:48:30.971 (23.132s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:48:30.971&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:48:31.123 (152ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] hash size Check server names hash size should set server_names_hash_bucket_size" classname="nginx-ingress-controller e2e suite" status="passed" time="28.112363405">
              <system-err>&gt; Enter [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:48:31.123&#xA;&lt; Exit [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:48:37.951 (6.827s)&#xA;&gt; Enter [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:32 @ 03/16/23 06:48:37.951&#xA;&lt; Exit [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:32 @ 03/16/23 06:48:48.972 (11.021s)&#xA;&gt; Enter [It] should set server_names_hash_bucket_size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:40 @ 03/16/23 06:48:48.972&#xA;&lt; Exit [It] should set server_names_hash_bucket_size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:40 @ 03/16/23 06:48:59.084 (10.112s)&#xA;&gt; Enter [AfterEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:48:59.084&#xA;&lt; Exit [AfterEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:48:59.236 (152ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] log-format-* Check log-format-escape-json and log-format-escape-none should disable the log-format-escape-json" classname="nginx-ingress-controller e2e suite" status="passed" time="29.080570193">
              <system-err>&gt; Enter [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:48:59.236&#xA;&lt; Exit [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:49:07.071 (7.835s)&#xA;&gt; Enter [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:33 @ 03/16/23 06:49:07.071&#xA;&lt; Exit [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:33 @ 03/16/23 06:49:18.1 (11.029s)&#xA;&gt; Enter [It] should disable the log-format-escape-json - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:55 @ 03/16/23 06:49:18.1&#xA;&lt; Exit [It] should disable the log-format-escape-json - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:55 @ 03/16/23 06:49:28.188 (10.088s)&#xA;&gt; Enter [AfterEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:49:28.188&#xA;&lt; Exit [AfterEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:49:28.317 (129ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] default-backend when default backend annotation is enabled should use a custom default backend as upstream" classname="nginx-ingress-controller e2e suite" status="passed" time="20.091222526">
              <system-err>&gt; Enter [BeforeEach] [Annotations] default-backend - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:49:28.317&#xA;&lt; Exit [BeforeEach] [Annotations] default-backend - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:49:36.168 (7.85s)&#xA;&gt; Enter [BeforeEach] [Annotations] default-backend - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/default_backend.go:32 @ 03/16/23 06:49:36.168&#xA;&lt; Exit [BeforeEach] [Annotations] default-backend - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/default_backend.go:32 @ 03/16/23 06:49:38.186 (2.018s)&#xA;&gt; Enter [It] should use a custom default backend as upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/default_backend.go:37 @ 03/16/23 06:49:38.186&#xA;&lt; Exit [It] should use a custom default backend as upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/default_backend.go:37 @ 03/16/23 06:49:48.268 (10.083s)&#xA;&gt; Enter [AfterEach] [Annotations] default-backend - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:49:48.268&#xA;&lt; Exit [AfterEach] [Annotations] default-backend - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:49:48.408 (140ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Default Backend] enables access logging for default backend" classname="nginx-ingress-controller e2e suite" status="skipped" time="7.03602457">
              <skipped message="skipped - enable-access-log-for-default-backend"></skipped>
              <system-err>&gt; Enter [BeforeEach] [Default Backend] - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:49:48.409&#xA;&lt; Exit [BeforeEach] [Default Backend] - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:49:55.237 (6.828s)&#xA;&gt; Enter [It] enables access logging for default backend - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:88 @ 03/16/23 06:49:55.237&#xA;[SKIPPED] enable-access-log-for-default-backend&#xA;In [It] at: /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:90 @ 03/16/23 06:49:55.237&#xA;&lt; Exit [It] enables access logging for default backend - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:88 @ 03/16/23 06:49:55.237 (0s)&#xA;&gt; Enter [AfterEach] [Default Backend] - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:49:55.237&#xA;&lt; Exit [AfterEach] [Default Backend] - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:49:55.445 (208ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] add-headers Add multiple custom headers" classname="nginx-ingress-controller e2e suite" status="passed" time="26.119311717">
              <system-err>&gt; Enter [BeforeEach] [Setting] add-headers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:49:55.445&#xA;&lt; Exit [BeforeEach] [Setting] add-headers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:50:02.252 (6.807s)&#xA;&gt; Enter [BeforeEach] [Setting] add-headers - /go/src/k8s.io/ingress-nginx/test/e2e/settings/custom_header.go:34 @ 03/16/23 06:50:02.252&#xA;&lt; Exit [BeforeEach] [Setting] add-headers - /go/src/k8s.io/ingress-nginx/test/e2e/settings/custom_header.go:34 @ 03/16/23 06:50:11.29 (9.038s)&#xA;&gt; Enter [It] Add multiple custom headers - /go/src/k8s.io/ingress-nginx/test/e2e/settings/custom_header.go:65 @ 03/16/23 06:50:11.29&#xA;&lt; Exit [It] Add multiple custom headers - /go/src/k8s.io/ingress-nginx/test/e2e/settings/custom_header.go:65 @ 03/16/23 06:50:21.392 (10.102s)&#xA;&gt; Enter [AfterEach] [Setting] add-headers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:50:21.392&#xA;&lt; Exit [AfterEach] [Setting] add-headers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:50:21.564 (172ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] proxy-* should turn on proxy-buffering" classname="nginx-ingress-controller e2e suite" status="passed" time="19.052512987">
              <system-err>&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:50:21.565&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:50:28.369 (6.804s)&#xA;&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 03/16/23 06:50:28.369&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 03/16/23 06:50:30.386 (2.017s)&#xA;&gt; Enter [It] should turn on proxy-buffering - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:157 @ 03/16/23 06:50:30.386&#xA;&lt; Exit [It] should turn on proxy-buffering - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:157 @ 03/16/23 06:50:40.477 (10.091s)&#xA;&gt; Enter [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:50:40.477&#xA;&lt; Exit [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:50:40.617 (141ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] log-format-* Check log-format-upstream with log-format-escape-json and log-format-escape-none log-format-escape-none enabled" classname="nginx-ingress-controller e2e suite" status="passed" time="31.145294575">
              <system-err>&gt; Enter [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:50:40.618&#xA;&lt; Exit [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:50:47.44 (6.822s)&#xA;&gt; Enter [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:33 @ 03/16/23 06:50:47.44&#xA;&lt; Exit [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:33 @ 03/16/23 06:50:58.472 (11.032s)&#xA;&gt; Enter [It] log-format-escape-none enabled - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:128 @ 03/16/23 06:50:58.472&#xA;&lt; Exit [It] log-format-escape-none enabled - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:128 @ 03/16/23 06:51:11.584 (13.113s)&#xA;&gt; Enter [AfterEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:51:11.584&#xA;&lt; Exit [AfterEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:51:11.763 (179ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] configuration-snippet set snippet &#34;more_set_headers &#34;Foo1: Bar1&#34;;&#34; in all locations&#34;" classname="nginx-ingress-controller e2e suite" status="passed" time="21.097975078">
              <system-err>&gt; Enter [BeforeEach] [Annotations] configuration-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:51:11.763&#xA;&lt; Exit [BeforeEach] [Annotations] configuration-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:51:18.561 (6.798s)&#xA;&gt; Enter [BeforeEach] [Annotations] configuration-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/snippet.go:31 @ 03/16/23 06:51:18.561&#xA;&lt; Exit [BeforeEach] [Annotations] configuration-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/snippet.go:31 @ 03/16/23 06:51:22.582 (4.021s)&#xA;&gt; Enter [It] set snippet &#34;more_set_headers &#34;Foo1: Bar1&#34;;&#34; in all locations&#34; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/snippet.go:35 @ 03/16/23 06:51:22.582&#xA;&lt; Exit [It] set snippet &#34;more_set_headers &#34;Foo1: Bar1&#34;;&#34; in all locations&#34; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/snippet.go:35 @ 03/16/23 06:51:32.679 (10.098s)&#xA;&gt; Enter [AfterEach] [Annotations] configuration-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:51:32.679&#xA;&lt; Exit [AfterEach] [Annotations] configuration-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:51:32.861 (182ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* when canary is created should response with a 200 status from the mainline upstream when requests are made to the mainline ingress" classname="nginx-ingress-controller e2e suite" status="passed" time="32.684027614">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:51:32.862&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:51:40.266 (7.404s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 03/16/23 06:51:40.266&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 03/16/23 06:51:48.298 (8.032s)&#xA;&gt; Enter [It] should response with a 200 status from the mainline upstream when requests are made to the mainline ingress - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:48 @ 03/16/23 06:51:48.298&#xA;&lt; Exit [It] should response with a 200 status from the mainline upstream when requests are made to the mainline ingress - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:48 @ 03/16/23 06:52:05.409 (17.111s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:52:05.409&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:52:05.546 (137ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Lua] dynamic configuration when only backends change handles endpoints only changes" classname="nginx-ingress-controller e2e suite" status="passed" time="31.318577036">
              <system-err>&gt; Enter [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:52:05.546&#xA;&lt; Exit [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:52:12.391 (6.845s)&#xA;&gt; Enter [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:45 @ 03/16/23 06:52:12.391&#xA;&lt; Exit [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:45 @ 03/16/23 06:52:26.5 (14.109s)&#xA;&gt; Enter [It] handles endpoints only changes - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:62 @ 03/16/23 06:52:26.5&#xA;&lt; Exit [It] handles endpoints only changes - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:62 @ 03/16/23 06:52:36.731 (10.231s)&#xA;&gt; Enter [AfterEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:52:36.731&#xA;&lt; Exit [AfterEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:52:36.865 (134ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log disable-stream-access-log set access_log off" classname="nginx-ingress-controller e2e suite" status="passed" time="28.156223328">
              <system-err>&gt; Enter [BeforeEach] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:52:36.865&#xA;&lt; Exit [BeforeEach] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:52:43.711 (6.846s)&#xA;&gt; Enter [BeforeEach] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/disableaccesslog.go:31 @ 03/16/23 06:52:43.711&#xA;&lt; Exit [BeforeEach] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/disableaccesslog.go:31 @ 03/16/23 06:52:47.736 (4.026s)&#xA;&gt; Enter [It] disable-stream-access-log set access_log off - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/disableaccesslog.go:71 @ 03/16/23 06:52:47.736&#xA;&lt; Exit [It] disable-stream-access-log set access_log off - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/disableaccesslog.go:71 @ 03/16/23 06:53:04.837 (17.1s)&#xA;&gt; Enter [AfterEach] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:53:04.837&#xA;&lt; Exit [AfterEach] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:53:05.021 (185ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] permanent-redirect permanent-redirect-code should respond with a standard redirect code" classname="nginx-ingress-controller e2e suite" status="passed" time="17.112756675">
              <system-err>&gt; Enter [BeforeEach] [Annotations] permanent-redirect permanent-redirect-code - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:53:05.022&#xA;&lt; Exit [BeforeEach] [Annotations] permanent-redirect permanent-redirect-code - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:53:11.887 (6.865s)&#xA;&gt; Enter [It] should respond with a standard redirect code - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/redirect.go:33 @ 03/16/23 06:53:11.887&#xA;STEP: setting permanent-redirect annotation - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/redirect.go:34 @ 03/16/23 06:53:11.887&#xA;STEP: sending request to redirected URL path - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/redirect.go:52 @ 03/16/23 06:53:21.997&#xA;&lt; Exit [It] should respond with a standard redirect code - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/redirect.go:33 @ 03/16/23 06:53:21.999 (10.112s)&#xA;&gt; Enter [AfterEach] [Annotations] permanent-redirect permanent-redirect-code - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:53:21.999&#xA;&lt; Exit [AfterEach] [Annotations] permanent-redirect permanent-redirect-code - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:53:22.134 (135ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] custom HTTP and HTTPS ports with a TLS enabled ingress when external authentication is configured should set the X-Forwarded-Port header to 443" classname="nginx-ingress-controller e2e suite" status="passed" time="39.254098913">
              <system-err>&gt; Enter [BeforeEach] [Flag] custom HTTP and HTTPS ports - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:53:22.135&#xA;&lt; Exit [BeforeEach] [Flag] custom HTTP and HTTPS ports - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:53:35.965 (13.83s)&#xA;&gt; Enter [BeforeEach] [Flag] custom HTTP and HTTPS ports - /go/src/k8s.io/ingress-nginx/test/e2e/settings/listen_nondefault_ports.go:38 @ 03/16/23 06:53:35.965&#xA;&lt; Exit [BeforeEach] [Flag] custom HTTP and HTTPS ports - /go/src/k8s.io/ingress-nginx/test/e2e/settings/listen_nondefault_ports.go:38 @ 03/16/23 06:53:43.077 (7.112s)&#xA;&gt; Enter [It] should set the X-Forwarded-Port header to 443 - /go/src/k8s.io/ingress-nginx/test/e2e/settings/listen_nondefault_ports.go:100 @ 03/16/23 06:53:43.077&#xA;Mar 16 06:53:56.174: INFO: Unexpected TLS error: tls: failed to verify certificate: x509: certificate is valid for ingress.local, not forwarded-headers&#xA;&lt; Exit [It] should set the X-Forwarded-Port header to 443 - /go/src/k8s.io/ingress-nginx/test/e2e/settings/listen_nondefault_ports.go:100 @ 03/16/23 06:54:01.254 (18.177s)&#xA;&gt; Enter [AfterEach] [Flag] custom HTTP and HTTPS ports - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:54:01.254&#xA;&lt; Exit [AfterEach] [Flag] custom HTTP and HTTPS ports - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:54:01.389 (135ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] main-snippet should add value of main-snippet setting to nginx config" classname="nginx-ingress-controller e2e suite" status="passed" time="17.089248258">
              <system-err>&gt; Enter [BeforeEach] [Setting] main-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:54:01.389&#xA;&lt; Exit [BeforeEach] [Setting] main-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:54:08.198 (6.808s)&#xA;&gt; Enter [It] should add value of main-snippet setting to nginx config - /go/src/k8s.io/ingress-nginx/test/e2e/settings/main_snippet.go:31 @ 03/16/23 06:54:08.198&#xA;&lt; Exit [It] should add value of main-snippet setting to nginx config - /go/src/k8s.io/ingress-nginx/test/e2e/settings/main_snippet.go:31 @ 03/16/23 06:54:18.321 (10.123s)&#xA;&gt; Enter [AfterEach] [Setting] main-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:54:18.321&#xA;&lt; Exit [AfterEach] [Setting] main-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:54:18.478 (158ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* should return status code 401 when authentication is configured and Authorization header is sent with invalid credentials" classname="nginx-ingress-controller e2e suite" status="passed" time="20.162406749">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:54:18.479&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:54:25.299 (6.821s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 06:54:25.299&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 06:54:27.33 (2.031s)&#xA;&gt; Enter [It] should return status code 401 when authentication is configured and Authorization header is sent with invalid credentials - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:116 @ 03/16/23 06:54:27.33&#xA;&lt; Exit [It] should return status code 401 when authentication is configured and Authorization header is sent with invalid credentials - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:116 @ 03/16/23 06:54:38.475 (11.145s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:54:38.475&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:54:38.641 (167ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] backend-protocol - FastCGI should add fastcgi_index in the configuration file" classname="nginx-ingress-controller e2e suite" status="passed" time="18.134404903">
              <system-err>&gt; Enter [BeforeEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:54:38.643&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:54:45.498 (6.855s)&#xA;&gt; Enter [BeforeEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fastcgi.go:33 @ 03/16/23 06:54:45.498&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fastcgi.go:33 @ 03/16/23 06:54:46.512 (1.014s)&#xA;&gt; Enter [It] should add fastcgi_index in the configuration file - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fastcgi.go:54 @ 03/16/23 06:54:46.512&#xA;&lt; Exit [It] should add fastcgi_index in the configuration file - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fastcgi.go:54 @ 03/16/23 06:54:56.604 (10.091s)&#xA;&gt; Enter [AfterEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:54:56.604&#xA;&lt; Exit [AfterEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:54:56.778 (174ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* when canaried by cookie respects always and never values" classname="nginx-ingress-controller e2e suite" status="passed" time="63.407116324">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:54:56.778&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:55:04.631 (7.852s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 03/16/23 06:55:04.631&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 03/16/23 06:55:14.671 (10.04s)&#xA;&gt; Enter [It] respects always and never values - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:643 @ 03/16/23 06:55:14.671&#xA;STEP: routing requests to the canary upstream when cookie is set to &#39;always&#39; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:667 @ 03/16/23 06:55:31.786&#xA;STEP: routing requests to the mainline upstream when cookie is set to &#39;never&#39; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:678 @ 03/16/23 06:55:39.985&#xA;STEP: routing requests to the mainline upstream when cookie is set to anything else - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:689 @ 03/16/23 06:55:49.985&#xA;&lt; Exit [It] respects always and never values - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:643 @ 03/16/23 06:55:59.986 (45.315s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:55:59.986&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:56:00.185 (200ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] service-upstream when enabling in the configmap and disabling in the annotations should not use the Service Cluster IP and Port" classname="nginx-ingress-controller e2e suite" status="passed" time="28.216135212">
              <system-err>&gt; Enter [BeforeEach] [Annotations] service-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:56:00.186&#xA;&lt; Exit [BeforeEach] [Annotations] service-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:56:06.989 (6.803s)&#xA;&gt; Enter [BeforeEach] [Annotations] service-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serviceupstream.go:36 @ 03/16/23 06:56:06.989&#xA;&lt; Exit [BeforeEach] [Annotations] service-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serviceupstream.go:36 @ 03/16/23 06:56:11.006 (4.017s)&#xA;&gt; Enter [It] should not use the Service Cluster IP and Port - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serviceupstream.go:99 @ 03/16/23 06:56:11.006&#xA;STEP: checking if the service is reached - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serviceupstream.go:113 @ 03/16/23 06:56:28.124&#xA;STEP: checking if the Service Cluster IP and Port are not used - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serviceupstream.go:120 @ 03/16/23 06:56:28.128&#xA;&lt; Exit [It] should not use the Service Cluster IP and Port - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serviceupstream.go:99 @ 03/16/23 06:56:28.244 (17.238s)&#xA;&gt; Enter [AfterEach] [Annotations] service-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:56:28.244&#xA;&lt; Exit [AfterEach] [Annotations] service-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:56:28.402 (158ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] proxy-send-timeout should not set invalid proxy send timeouts using configmap values" classname="nginx-ingress-controller e2e suite" status="passed" time="28.107187459">
              <system-err>&gt; Enter [BeforeEach] [Setting] proxy-send-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:56:28.402&#xA;&lt; Exit [BeforeEach] [Setting] proxy-send-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:56:35.223 (6.821s)&#xA;&gt; Enter [BeforeEach] [Setting] proxy-send-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_send_timeout.go:32 @ 03/16/23 06:56:35.223&#xA;&lt; Exit [BeforeEach] [Setting] proxy-send-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_send_timeout.go:32 @ 03/16/23 06:56:39.242 (4.019s)&#xA;&gt; Enter [It] should not set invalid proxy send timeouts using configmap values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_send_timeout.go:52 @ 03/16/23 06:56:39.242&#xA;&lt; Exit [It] should not set invalid proxy send timeouts using configmap values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_send_timeout.go:52 @ 03/16/23 06:56:56.361 (17.118s)&#xA;&gt; Enter [AfterEach] [Setting] proxy-send-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:56:56.361&#xA;&lt; Exit [AfterEach] [Setting] proxy-send-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:56:56.51 (149ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* with invalid auth-url should deny whole location should return 503 (location was denied)" classname="nginx-ingress-controller e2e suite" status="passed" time="21.111345449">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:56:56.51&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:57:03.341 (6.831s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 06:57:03.341&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 06:57:07.36 (4.019s)&#xA;&gt; Enter [BeforeEach] with invalid auth-url should deny whole location - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:866 @ 03/16/23 06:57:07.36&#xA;&lt; Exit [BeforeEach] with invalid auth-url should deny whole location - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:866 @ 03/16/23 06:57:17.457 (10.097s)&#xA;&gt; Enter [It] should return 503 (location was denied) - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:879 @ 03/16/23 06:57:17.457&#xA;&lt; Exit [It] should return 503 (location was denied) - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:879 @ 03/16/23 06:57:17.459 (2ms)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:57:17.459&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:57:17.621 (162ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Security] global-auth-url when global external authentication is configured should return status code 200 when request whitelisted (via ingress annotation) service and 401 when request protected service" classname="nginx-ingress-controller e2e suite" status="passed" time="52.445013434">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:57:17.622&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:57:25.433 (7.811s)&#xA;&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 03/16/23 06:57:25.433&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 03/16/23 06:57:35.498 (10.065s)&#xA;&gt; Enter [BeforeEach] when global external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:58 @ 03/16/23 06:57:35.498&#xA;STEP: Adding an ingress rule for /foo - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:61 @ 03/16/23 06:57:35.498&#xA;STEP: Adding an ingress rule for /bar - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:69 @ 03/16/23 06:57:45.6&#xA;STEP: Adding a global-auth-url to configMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:77 @ 03/16/23 06:57:55.709&#xA;&lt; Exit [BeforeEach] when global external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:58 @ 03/16/23 06:58:05.817 (30.319s)&#xA;&gt; Enter [It] should return status code 200 when request whitelisted (via ingress annotation) service and 401 when request protected service - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:126 @ 03/16/23 06:58:05.817&#xA;STEP: Adding an ingress rule for /bar with annotation enable-global-auth = false - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:128 @ 03/16/23 06:58:05.817&#xA;STEP: Sending a request to protected service /foo - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:140 @ 03/16/23 06:58:09.914&#xA;STEP: Sending a request to whitelisted service /bar - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:147 @ 03/16/23 06:58:09.919&#xA;&lt; Exit [It] should return status code 200 when request whitelisted (via ingress annotation) service and 401 when request protected service - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:126 @ 03/16/23 06:58:09.921 (4.104s)&#xA;&gt; Enter [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:58:09.921&#xA;&lt; Exit [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:58:10.067 (145ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* should return status code 200 when authentication is configured and Authorization header is sent" classname="nginx-ingress-controller e2e suite" status="passed" time="23.218167187">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:58:10.067&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:58:16.969 (6.902s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 06:58:16.969&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 06:58:20.987 (4.018s)&#xA;&gt; Enter [It] should return status code 200 when authentication is configured and Authorization header is sent - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:172 @ 03/16/23 06:58:20.987&#xA;&lt; Exit [It] should return status code 200 when authentication is configured and Authorization header is sent - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:172 @ 03/16/23 06:58:33.151 (12.164s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:58:33.151&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:58:33.285 (134ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should allow correct origins - missing subdomain + origin with wildcard origin and correct origin" classname="nginx-ingress-controller e2e suite" status="passed" time="19.007542303">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:58:33.286&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:58:41.112 (7.826s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 03/16/23 06:58:41.112&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 03/16/23 06:58:45.132 (4.02s)&#xA;&gt; Enter [It] should allow correct origins - missing subdomain + origin with wildcard origin and correct origin - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:535 @ 03/16/23 06:58:45.132&#xA;&lt; Exit [It] should allow correct origins - missing subdomain + origin with wildcard origin and correct origin - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:535 @ 03/16/23 06:58:52.149 (7.016s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:58:52.149&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:58:52.293 (145ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] access-log access-log-path use the default configuration" classname="nginx-ingress-controller e2e suite" status="passed" time="11.151519835">
              <system-err>&gt; Enter [BeforeEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:58:52.295&#xA;&lt; Exit [BeforeEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:59:00.165 (7.87s)&#xA;&gt; Enter [It] use the default configuration - /go/src/k8s.io/ingress-nginx/test/e2e/settings/access_log.go:32 @ 03/16/23 06:59:00.165&#xA;&lt; Exit [It] use the default configuration - /go/src/k8s.io/ingress-nginx/test/e2e/settings/access_log.go:32 @ 03/16/23 06:59:03.264 (3.098s)&#xA;&gt; Enter [AfterEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:59:03.264&#xA;&lt; Exit [AfterEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:59:03.447 (183ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] server-tokens should not exists Server header in the response" classname="nginx-ingress-controller e2e suite" status="passed" time="28.07718096">
              <system-err>&gt; Enter [BeforeEach] [Setting] server-tokens - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:59:03.447&#xA;&lt; Exit [BeforeEach] [Setting] server-tokens - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:59:10.258 (6.81s)&#xA;&gt; Enter [BeforeEach] [Setting] server-tokens - /go/src/k8s.io/ingress-nginx/test/e2e/settings/server_tokens.go:34 @ 03/16/23 06:59:10.258&#xA;&lt; Exit [BeforeEach] [Setting] server-tokens - /go/src/k8s.io/ingress-nginx/test/e2e/settings/server_tokens.go:34 @ 03/16/23 06:59:14.279 (4.021s)&#xA;&gt; Enter [It] should not exists Server header in the response - /go/src/k8s.io/ingress-nginx/test/e2e/settings/server_tokens.go:38 @ 03/16/23 06:59:14.279&#xA;&lt; Exit [It] should not exists Server header in the response - /go/src/k8s.io/ingress-nginx/test/e2e/settings/server_tokens.go:38 @ 03/16/23 06:59:31.384 (17.105s)&#xA;&gt; Enter [AfterEach] [Setting] server-tokens - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:59:31.384&#xA;&lt; Exit [AfterEach] [Setting] server-tokens - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:59:31.525 (141ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* when canaried by header with value and pattern should route requests to the correct upstream" classname="nginx-ingress-controller e2e suite" status="passed" time="32.1429162">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:59:31.525&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:59:38.335 (6.81s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 03/16/23 06:59:38.335&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 03/16/23 06:59:46.367 (8.032s)&#xA;&gt; Enter [It] should route requests to the correct upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:532 @ 03/16/23 06:59:46.367&#xA;STEP: routing requests to the mainline upstream when header is set to &#39;DoCananry&#39; and header-value is &#39;DoCanary&#39; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:557 @ 03/16/23 07:00:03.49&#xA;&lt; Exit [It] should route requests to the correct upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:532 @ 03/16/23 07:00:03.492 (17.125s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:00:03.492&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:00:03.668 (175ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] force-ssl-redirect should redirect to https" classname="nginx-ingress-controller e2e suite" status="passed" time="15.984337736">
              <system-err>&gt; Enter [BeforeEach] [Annotations] force-ssl-redirect - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:00:03.668&#xA;&lt; Exit [BeforeEach] [Annotations] force-ssl-redirect - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:00:10.472 (6.803s)&#xA;&gt; Enter [BeforeEach] [Annotations] force-ssl-redirect - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/forcesslredirect.go:30 @ 03/16/23 07:00:10.472&#xA;&lt; Exit [BeforeEach] [Annotations] force-ssl-redirect - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/forcesslredirect.go:30 @ 03/16/23 07:00:12.495 (2.023s)&#xA;&gt; Enter [It] should redirect to https - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/forcesslredirect.go:34 @ 03/16/23 07:00:12.495&#xA;&lt; Exit [It] should redirect to https - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/forcesslredirect.go:34 @ 03/16/23 07:00:19.504 (7.008s)&#xA;&gt; Enter [AfterEach] [Annotations] force-ssl-redirect - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:00:19.504&#xA;&lt; Exit [AfterEach] [Annotations] force-ssl-redirect - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:00:19.652 (149ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should set cors methods to only allow POST, GET" classname="nginx-ingress-controller e2e suite" status="passed" time="21.149444807">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:00:19.653&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:00:26.471 (6.818s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 03/16/23 07:00:26.471&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 03/16/23 07:00:30.49 (4.019s)&#xA;&gt; Enter [It] should set cors methods to only allow POST, GET - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:62 @ 03/16/23 07:00:30.49&#xA;&lt; Exit [It] should set cors methods to only allow POST, GET - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:62 @ 03/16/23 07:00:40.583 (10.093s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:00:40.584&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:00:40.802 (219ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] proxy-read-timeout should set valid proxy read timeouts using configmap values" classname="nginx-ingress-controller e2e suite" status="passed" time="28.214475354">
              <system-err>&gt; Enter [BeforeEach] [Setting] proxy-read-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:00:40.803&#xA;&lt; Exit [BeforeEach] [Setting] proxy-read-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:00:47.652 (6.849s)&#xA;&gt; Enter [BeforeEach] [Setting] proxy-read-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_read_timeout.go:32 @ 03/16/23 07:00:47.652&#xA;&lt; Exit [BeforeEach] [Setting] proxy-read-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_read_timeout.go:32 @ 03/16/23 07:00:51.703 (4.051s)&#xA;&gt; Enter [It] should set valid proxy read timeouts using configmap values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_read_timeout.go:36 @ 03/16/23 07:00:51.703&#xA;&lt; Exit [It] should set valid proxy read timeouts using configmap values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_read_timeout.go:36 @ 03/16/23 07:01:08.825 (17.122s)&#xA;&gt; Enter [AfterEach] [Setting] proxy-read-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:01:08.825&#xA;&lt; Exit [AfterEach] [Setting] proxy-read-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:01:09.017 (192ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] proxy-send-timeout should set valid proxy send timeouts using configmap values" classname="nginx-ingress-controller e2e suite" status="passed" time="28.226716589">
              <system-err>&gt; Enter [BeforeEach] [Setting] proxy-send-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:01:09.018&#xA;&lt; Exit [BeforeEach] [Setting] proxy-send-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:01:15.961 (6.943s)&#xA;&gt; Enter [BeforeEach] [Setting] proxy-send-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_send_timeout.go:32 @ 03/16/23 07:01:15.961&#xA;&lt; Exit [BeforeEach] [Setting] proxy-send-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_send_timeout.go:32 @ 03/16/23 07:01:19.992 (4.031s)&#xA;&gt; Enter [It] should set valid proxy send timeouts using configmap values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_send_timeout.go:36 @ 03/16/23 07:01:19.992&#xA;&lt; Exit [It] should set valid proxy send timeouts using configmap values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_send_timeout.go:36 @ 03/16/23 07:01:37.104 (17.112s)&#xA;&gt; Enter [AfterEach] [Setting] proxy-send-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:01:37.104&#xA;&lt; Exit [AfterEach] [Setting] proxy-send-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:01:37.244 (141ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Lua] dynamic certificates given an ingress with TLS correctly configured removes HTTPS configuration when we delete TLS spec" classname="nginx-ingress-controller e2e suite" status="passed" time="42.413195531">
              <system-err>&gt; Enter [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:01:37.245&#xA;&lt; Exit [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:01:45.172 (7.927s)&#xA;&gt; Enter [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:41 @ 03/16/23 07:01:45.172&#xA;&lt; Exit [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:41 @ 03/16/23 07:01:49.19 (4.018s)&#xA;&gt; Enter [BeforeEach] given an ingress with TLS correctly configured - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:113 @ 03/16/23 07:01:49.19&#xA;STEP: configuring certificate_by_lua and skipping Nginx configuration of the new certificate - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:128 @ 03/16/23 07:02:06.402&#xA;STEP: serving the configured certificate on HTTPS endpoint - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:136 @ 03/16/23 07:02:14.484&#xA;&lt; Exit [BeforeEach] given an ingress with TLS correctly configured - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:113 @ 03/16/23 07:02:14.491 (25.301s)&#xA;&gt; Enter [It] removes HTTPS configuration when we delete TLS spec - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:233 @ 03/16/23 07:02:14.491&#xA;&lt; Exit [It] removes HTTPS configuration when we delete TLS spec - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:233 @ 03/16/23 07:02:19.497 (5.006s)&#xA;&gt; Enter [AfterEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:02:19.497&#xA;&lt; Exit [AfterEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:02:19.658 (161ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] x-forwarded-prefix should not add X-Forwarded-Prefix if the annotation value is empty" classname="nginx-ingress-controller e2e suite" status="passed" time="21.106736898">
              <system-err>&gt; Enter [BeforeEach] [Annotations] x-forwarded-prefix - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:02:19.658&#xA;&lt; Exit [BeforeEach] [Annotations] x-forwarded-prefix - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:02:26.472 (6.813s)&#xA;&gt; Enter [BeforeEach] [Annotations] x-forwarded-prefix - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/xforwardedprefix.go:31 @ 03/16/23 07:02:26.472&#xA;&lt; Exit [BeforeEach] [Annotations] x-forwarded-prefix - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/xforwardedprefix.go:31 @ 03/16/23 07:02:30.489 (4.018s)&#xA;&gt; Enter [It] should not add X-Forwarded-Prefix if the annotation value is empty - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/xforwardedprefix.go:57 @ 03/16/23 07:02:30.489&#xA;&lt; Exit [It] should not add X-Forwarded-Prefix if the annotation value is empty - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/xforwardedprefix.go:57 @ 03/16/23 07:02:40.58 (10.091s)&#xA;&gt; Enter [AfterEach] [Annotations] x-forwarded-prefix - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:02:40.58&#xA;&lt; Exit [AfterEach] [Annotations] x-forwarded-prefix - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:02:40.765 (185ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Security] global-auth-url when global external authentication is configured should return status code 401 when request any protected service" classname="nginx-ingress-controller e2e suite" status="passed" time="47.354968801">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:02:40.766&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:02:49.585 (8.819s)&#xA;&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 03/16/23 07:02:49.585&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 03/16/23 07:02:57.617 (8.033s)&#xA;&gt; Enter [BeforeEach] when global external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:58 @ 03/16/23 07:02:57.617&#xA;STEP: Adding an ingress rule for /foo - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:61 @ 03/16/23 07:02:57.617&#xA;STEP: Adding an ingress rule for /bar - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:69 @ 03/16/23 07:03:07.709&#xA;STEP: Adding a global-auth-url to configMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:77 @ 03/16/23 07:03:17.813&#xA;&lt; Exit [BeforeEach] when global external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:58 @ 03/16/23 07:03:27.923 (30.305s)&#xA;&gt; Enter [It] should return status code 401 when request any protected service - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:85 @ 03/16/23 07:03:27.923&#xA;STEP: Sending a request to protected service /foo - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:87 @ 03/16/23 07:03:27.923&#xA;STEP: Sending a request to protected service /bar - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:94 @ 03/16/23 07:03:27.926&#xA;&lt; Exit [It] should return status code 401 when request any protected service - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:85 @ 03/16/23 07:03:27.929 (6ms)&#xA;&gt; Enter [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:03:27.929&#xA;&lt; Exit [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:03:28.121 (192ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should not allow - single origin for multiple cors values" classname="nginx-ingress-controller e2e suite" status="passed" time="18.059494855">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:03:28.121&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:03:34.951 (6.83s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 03/16/23 07:03:34.951&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 03/16/23 07:03:38.972 (4.021s)&#xA;&gt; Enter [It] should not allow - single origin for multiple cors values - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:196 @ 03/16/23 07:03:38.972&#xA;&lt; Exit [It] should not allow - single origin for multiple cors values - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:196 @ 03/16/23 07:03:45.985 (7.013s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:03:45.985&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:03:46.181 (196ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* Single canary Ingress should not use canary with domain as a server" classname="nginx-ingress-controller e2e suite" status="passed" time="28.081675373">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:03:46.181&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:03:52.998 (6.817s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 03/16/23 07:03:52.998&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 03/16/23 07:03:57.039 (4.04s)&#xA;&gt; Enter [It] should not use canary with domain as a server - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:864 @ 03/16/23 07:03:57.039&#xA;&lt; Exit [It] should not use canary with domain as a server - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:864 @ 03/16/23 07:04:14.132 (17.093s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:04:14.132&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:04:14.263 (130ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] disable-sync-events should not create sync events" classname="nginx-ingress-controller e2e suite" status="passed" time="31.594850109">
              <system-err>&gt; Enter [BeforeEach] [Flag] disable-sync-events - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:04:14.263&#xA;&lt; Exit [BeforeEach] [Flag] disable-sync-events - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:04:22.574 (8.311s)&#xA;&gt; Enter [It] should not create sync events - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_sync_events.go:80 @ 03/16/23 07:04:22.574&#xA;&lt; Exit [It] should not create sync events - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_sync_events.go:80 @ 03/16/23 07:04:45.702 (23.128s)&#xA;&gt; Enter [AfterEach] [Flag] disable-sync-events - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:04:45.702&#xA;&lt; Exit [AfterEach] [Flag] disable-sync-events - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:04:45.858 (156ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] configuration-snippet drops snippet &#34;more_set_headers &#34;Foo1: Bar1&#34;;&#34; in all locations if disabled by admin&#34;" classname="nginx-ingress-controller e2e suite" status="passed" time="42.086054396">
              <system-err>&gt; Enter [BeforeEach] [Annotations] configuration-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:04:45.858&#xA;&lt; Exit [BeforeEach] [Annotations] configuration-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:04:54.691 (8.833s)&#xA;&gt; Enter [BeforeEach] [Annotations] configuration-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/snippet.go:31 @ 03/16/23 07:04:54.691&#xA;&lt; Exit [BeforeEach] [Annotations] configuration-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/snippet.go:31 @ 03/16/23 07:04:58.709 (4.017s)&#xA;&gt; Enter [It] drops snippet &#34;more_set_headers &#34;Foo1: Bar1&#34;;&#34; in all locations if disabled by admin&#34; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/snippet.go:58 @ 03/16/23 07:04:58.709&#xA;&lt; Exit [It] drops snippet &#34;more_set_headers &#34;Foo1: Bar1&#34;;&#34; in all locations if disabled by admin&#34; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/snippet.go:58 @ 03/16/23 07:05:27.801 (29.093s)&#xA;&gt; Enter [AfterEach] [Annotations] configuration-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:05:27.801&#xA;&lt; Exit [AfterEach] [Annotations] configuration-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:05:27.944 (143ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Ingress] definition without host should set ingress details variables for ingresses with host without IngressRuleValue, only Backend" classname="nginx-ingress-controller e2e suite" status="passed" time="21.084926064">
              <system-err>&gt; Enter [BeforeEach] [Ingress] definition without host - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:05:27.945&#xA;&lt; Exit [BeforeEach] [Ingress] definition without host - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:05:34.785 (6.841s)&#xA;&gt; Enter [It] should set ingress details variables for ingresses with host without IngressRuleValue, only Backend - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/without_host.go:55 @ 03/16/23 07:05:34.785&#xA;&lt; Exit [It] should set ingress details variables for ingresses with host without IngressRuleValue, only Backend - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/without_host.go:55 @ 03/16/23 07:05:48.88 (14.095s)&#xA;&gt; Enter [AfterEach] [Ingress] definition without host - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:05:48.88&#xA;&lt; Exit [AfterEach] [Ingress] definition without host - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:05:49.029 (149ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Service] Type ExternalName should return 200 for service type=ExternalName with a port defined" classname="nginx-ingress-controller e2e suite" status="passed" time="17.745339201">
              <system-err>&gt; Enter [BeforeEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:05:49.03&#xA;&lt; Exit [BeforeEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:05:55.829 (6.8s)&#xA;&gt; Enter [It] should return 200 for service type=ExternalName with a port defined - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_externalname.go:129 @ 03/16/23 07:05:55.829&#xA;&lt; Exit [It] should return 200 for service type=ExternalName with a port defined - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_externalname.go:129 @ 03/16/23 07:06:06.626 (10.797s)&#xA;&gt; Enter [AfterEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:06:06.626&#xA;&lt; Exit [AfterEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:06:06.775 (149ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] enable-ssl-passthrough With enable-ssl-passthrough enabled should pass unknown traffic to default backend and handle known traffic" classname="nginx-ingress-controller e2e suite" status="passed" time="50.587270419">
              <system-err>&gt; Enter [BeforeEach] [Flag] enable-ssl-passthrough - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:06:06.775&#xA;&lt; Exit [BeforeEach] [Flag] enable-ssl-passthrough - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:06:13.624 (6.848s)&#xA;&gt; Enter [BeforeEach] [Flag] enable-ssl-passthrough - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ssl_passthrough.go:39 @ 03/16/23 07:06:13.624&#xA;&lt; Exit [BeforeEach] [Flag] enable-ssl-passthrough - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ssl_passthrough.go:39 @ 03/16/23 07:06:24.732 (11.108s)&#xA;&gt; Enter [It] should pass unknown traffic to default backend and handle known traffic - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ssl_passthrough.go:79 @ 03/16/23 07:06:24.732&#xA;&lt; Exit [It] should pass unknown traffic to default backend and handle known traffic - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ssl_passthrough.go:79 @ 03/16/23 07:06:57.206 (32.474s)&#xA;&gt; Enter [AfterEach] [Flag] enable-ssl-passthrough - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:06:57.206&#xA;&lt; Exit [AfterEach] [Flag] enable-ssl-passthrough - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:06:57.363 (156ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should allow - single origin for multiple cors values" classname="nginx-ingress-controller e2e suite" status="passed" time="20.043369085">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:06:57.363&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:07:04.237 (6.874s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 03/16/23 07:07:04.237&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 03/16/23 07:07:10.259 (6.023s)&#xA;&gt; Enter [It] should allow - single origin for multiple cors values - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:169 @ 03/16/23 07:07:10.259&#xA;&lt; Exit [It] should allow - single origin for multiple cors values - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:169 @ 03/16/23 07:07:17.275 (7.015s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:07:17.275&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:07:17.406 (132ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* when canaried by weight should route requests split between mainline and canary if canary weight is 50" classname="nginx-ingress-controller e2e suite" status="passed" time="70.495701247">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:07:17.407&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:07:24.371 (6.964s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 03/16/23 07:07:24.371&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 03/16/23 07:07:32.404 (8.033s)&#xA;&gt; Enter [It] should route requests split between mainline and canary if canary weight is 50 - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:808 @ 03/16/23 07:07:32.404&#xA;&lt; Exit [It] should route requests split between mainline and canary if canary weight is 50 - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:808 @ 03/16/23 07:08:27.701 (55.297s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:08:27.701&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:08:27.902 (201ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] custom-http-errors configures Nginx correctly" classname="nginx-ingress-controller e2e suite" status="passed" time="43.388379914">
              <system-err>&gt; Enter [BeforeEach] [Annotations] custom-http-errors - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:08:27.903&#xA;&lt; Exit [BeforeEach] [Annotations] custom-http-errors - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:08:34.751 (6.848s)&#xA;&gt; Enter [BeforeEach] [Annotations] custom-http-errors - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/customhttperrors.go:37 @ 03/16/23 07:08:34.751&#xA;&lt; Exit [BeforeEach] [Annotations] custom-http-errors - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/customhttperrors.go:37 @ 03/16/23 07:08:38.769 (4.018s)&#xA;&gt; Enter [It] configures Nginx correctly - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/customhttperrors.go:41 @ 03/16/23 07:08:38.769&#xA;STEP: turning on proxy_intercept_errors directive - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/customhttperrors.go:59 @ 03/16/23 07:08:48.832&#xA;STEP: configuring error_page directive - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/customhttperrors.go:62 @ 03/16/23 07:08:48.832&#xA;STEP: creating error locations - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/customhttperrors.go:67 @ 03/16/23 07:08:48.832&#xA;STEP: updating configuration when only custom-http-error value changes - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/customhttperrors.go:72 @ 03/16/23 07:08:48.832&#xA;STEP: ignoring duplicate values (503 in this case) per server - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/customhttperrors.go:90 @ 03/16/23 07:08:52.945&#xA;STEP: using the custom default-backend from annotation for upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/customhttperrors.go:102 @ 03/16/23 07:09:03.054&#xA;&lt; Exit [It] configures Nginx correctly - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/customhttperrors.go:41 @ 03/16/23 07:09:11.152 (32.383s)&#xA;&gt; Enter [AfterEach] [Annotations] custom-http-errors - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:09:11.152&#xA;&lt; Exit [AfterEach] [Annotations] custom-http-errors - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:09:11.291 (140ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Admission] admission controller should not return an error for an invalid Ingress when it has unknown class" classname="nginx-ingress-controller e2e suite" status="passed" time="43.780970478">
              <system-err>&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:09:38.473&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:10:13.959 (35.485s)&#xA;&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 03/16/23 07:10:13.959&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 03/16/23 07:10:22.007 (8.048s)&#xA;&gt; Enter [It] should not return an error for an invalid Ingress when it has unknown class - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:207 @ 03/16/23 07:10:22.007&#xA;&lt; Exit [It] should not return an error for an invalid Ingress when it has unknown class - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:207 @ 03/16/23 07:10:22.096 (89ms)&#xA;&gt; Enter [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:10:22.096&#xA;&lt; Exit [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:10:22.254 (159ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Admission] admission controller reject ingress with global-rate-limit annotations when memcached is not configured" classname="nginx-ingress-controller e2e suite" status="passed" time="47.145454484">
              <system-err>&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:10:22.255&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:10:49.044 (26.789s)&#xA;&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 03/16/23 07:10:49.044&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 03/16/23 07:10:57.093 (8.049s)&#xA;&gt; Enter [It] reject ingress with global-rate-limit annotations when memcached is not configured - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:43 @ 03/16/23 07:10:57.093&#xA;STEP: rejects ingress when memcached is not configured - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:52 @ 03/16/23 07:10:57.093&#xA;STEP: accepts ingress when memcached is not configured - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:57 @ 03/16/23 07:10:57.103&#xA;&lt; Exit [It] reject ingress with global-rate-limit annotations when memcached is not configured - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:43 @ 03/16/23 07:11:09.24 (12.148s)&#xA;&gt; Enter [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:11:09.24&#xA;&lt; Exit [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:11:09.4 (160ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Admission] admission controller should return an error if the Ingress V1 definition contains invalid annotations" classname="nginx-ingress-controller e2e suite" status="passed" time="23.968806792">
              <system-err>&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:11:09.4&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:11:27.105 (17.705s)&#xA;&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 03/16/23 07:11:27.105&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 03/16/23 07:11:33.146 (6.042s)&#xA;&gt; Enter [It] should return an error if the Ingress V1 definition contains invalid annotations - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:196 @ 03/16/23 07:11:33.146&#xA;&lt; Exit [It] should return an error if the Ingress V1 definition contains invalid annotations - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:196 @ 03/16/23 07:11:33.241 (94ms)&#xA;&gt; Enter [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:11:33.241&#xA;&lt; Exit [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:11:33.369 (128ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Admission] admission controller should return an error if there is an error validating the ingress definition" classname="nginx-ingress-controller e2e suite" status="passed" time="23.988316467">
              <system-err>&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:11:33.37&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:11:51.149 (17.779s)&#xA;&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 03/16/23 07:11:51.149&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 03/16/23 07:11:57.187 (6.038s)&#xA;&gt; Enter [It] should return an error if there is an error validating the ingress definition - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:125 @ 03/16/23 07:11:57.187&#xA;&lt; Exit [It] should return an error if there is an error validating the ingress definition - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:125 @ 03/16/23 07:11:57.208 (21ms)&#xA;&gt; Enter [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:11:57.208&#xA;&lt; Exit [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:11:57.358 (150ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] watch namespace selector With specific watch-namespace-selector flags should ingore Ingress of namespace without label foo=bar and accept those of namespace with label foo=bar" classname="nginx-ingress-controller e2e suite" status="passed" time="54.25210196">
              <system-err>&gt; Enter [BeforeEach] [Flag] watch namespace selector - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:11:57.358&#xA;&lt; Exit [BeforeEach] [Flag] watch namespace selector - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:12:21.148 (23.79s)&#xA;&gt; Enter [BeforeEach] [Flag] watch namespace selector - /go/src/k8s.io/ingress-nginx/test/e2e/settings/namespace_selector.go:51 @ 03/16/23 07:12:21.148&#xA;&lt; Exit [BeforeEach] [Flag] watch namespace selector - /go/src/k8s.io/ingress-nginx/test/e2e/settings/namespace_selector.go:51 @ 03/16/23 07:12:45.211 (24.063s)&#xA;&gt; Enter [It] should ingore Ingress of namespace without label foo=bar and accept those of namespace with label foo=bar - /go/src/k8s.io/ingress-nginx/test/e2e/settings/namespace_selector.go:63 @ 03/16/23 07:12:45.211&#xA;&lt; Exit [It] should ingore Ingress of namespace without label foo=bar and accept those of namespace with label foo=bar - /go/src/k8s.io/ingress-nginx/test/e2e/settings/namespace_selector.go:63 @ 03/16/23 07:12:51.435 (6.224s)&#xA;&gt; Enter [AfterEach] [Flag] watch namespace selector - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:12:51.435&#xA;&lt; Exit [AfterEach] [Flag] watch namespace selector - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:12:51.606 (171ms)&#xA;&gt; Enter [AfterEach] [Flag] watch namespace selector - /go/src/k8s.io/ingress-nginx/test/e2e/settings/namespace_selector.go:56 @ 03/16/23 07:12:51.606&#xA;&lt; Exit [AfterEach] [Flag] watch namespace selector - /go/src/k8s.io/ingress-nginx/test/e2e/settings/namespace_selector.go:56 @ 03/16/23 07:12:51.61 (4ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Admission] admission controller should return an error if there is a forbidden value in some annotation" classname="nginx-ingress-controller e2e suite" status="passed" time="32.374757825">
              <system-err>&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:12:51.61&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:13:08.761 (17.151s)&#xA;&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 03/16/23 07:13:08.761&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 03/16/23 07:13:16.814 (8.053s)&#xA;&gt; Enter [It] should return an error if there is a forbidden value in some annotation - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:150 @ 03/16/23 07:13:16.814&#xA;&lt; Exit [It] should return an error if there is a forbidden value in some annotation - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:150 @ 03/16/23 07:13:23.826 (7.012s)&#xA;&gt; Enter [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:13:23.826&#xA;&lt; Exit [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:13:23.985 (159ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Admission] admission controller should not allow overlaps of host and paths without canary annotations" classname="nginx-ingress-controller e2e suite" status="passed" time="26.696013678">
              <system-err>&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:13:23.986&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:13:41.33 (17.344s)&#xA;&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 03/16/23 07:13:41.33&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 03/16/23 07:13:47.367 (6.037s)&#xA;&gt; Enter [It] should not allow overlaps of host and paths without canary annotations - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:70 @ 03/16/23 07:13:47.367&#xA;&lt; Exit [It] should not allow overlaps of host and paths without canary annotations - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:70 @ 03/16/23 07:13:50.515 (3.149s)&#xA;&gt; Enter [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:13:50.515&#xA;&lt; Exit [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:13:50.682 (166ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Admission] admission controller should return an error if there is an invalid value in some annotation" classname="nginx-ingress-controller e2e suite" status="passed" time="33.41998297">
              <system-err>&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:13:50.682&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:14:08.866 (18.184s)&#xA;&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 03/16/23 07:14:08.866&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 03/16/23 07:14:16.918 (8.052s)&#xA;&gt; Enter [It] should return an error if there is an invalid value in some annotation - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:136 @ 03/16/23 07:14:16.918&#xA;&lt; Exit [It] should return an error if there is an invalid value in some annotation - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:136 @ 03/16/23 07:14:23.929 (7.011s)&#xA;&gt; Enter [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:14:23.929&#xA;&lt; Exit [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:14:24.102 (173ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Admission] admission controller should not return an error if the Ingress V1 definition is valid with IngressClass annotation" classname="nginx-ingress-controller e2e suite" status="passed" time="29.258951421">
              <system-err>&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:14:24.102&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:14:41.92 (17.818s)&#xA;&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 03/16/23 07:14:41.92&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 03/16/23 07:14:49.97 (8.05s)&#xA;&gt; Enter [It] should not return an error if the Ingress V1 definition is valid with IngressClass annotation - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:180 @ 03/16/23 07:14:49.97&#xA;&lt; Exit [It] should not return an error if the Ingress V1 definition is valid with IngressClass annotation - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:180 @ 03/16/23 07:14:53.195 (3.225s)&#xA;&gt; Enter [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:14:53.195&#xA;&lt; Exit [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:14:53.361 (166ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [TopologyHints] topology aware routing should return 200 when service has topology hints" classname="nginx-ingress-controller e2e suite" status="passed" time="21.208547371">
              <system-err>&gt; Enter [BeforeEach] [TopologyHints] topology aware routing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:14:53.362&#xA;&lt; Exit [BeforeEach] [TopologyHints] topology aware routing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:15:00.181 (6.82s)&#xA;&gt; Enter [BeforeEach] [TopologyHints] topology aware routing - /go/src/k8s.io/ingress-nginx/test/e2e/endpointslices/topology.go:39 @ 03/16/23 07:15:00.181&#xA;&lt; Exit [BeforeEach] [TopologyHints] topology aware routing - /go/src/k8s.io/ingress-nginx/test/e2e/endpointslices/topology.go:39 @ 03/16/23 07:15:04.204 (4.023s)&#xA;&gt; Enter [It] should return 200 when service has topology hints - /go/src/k8s.io/ingress-nginx/test/e2e/endpointslices/topology.go:43 @ 03/16/23 07:15:04.204&#xA;STEP: checking if the service is reached - /go/src/k8s.io/ingress-nginx/test/e2e/endpointslices/topology.go:53 @ 03/16/23 07:15:14.304&#xA;&lt; Exit [It] should return 200 when service has topology hints - /go/src/k8s.io/ingress-nginx/test/e2e/endpointslices/topology.go:43 @ 03/16/23 07:15:14.404 (10.2s)&#xA;&gt; Enter [AfterEach] [TopologyHints] topology aware routing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:15:14.404&#xA;&lt; Exit [AfterEach] [TopologyHints] topology aware routing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:15:14.57 (166ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Admission] admission controller should allow overlaps of host and paths with canary annotation" classname="nginx-ingress-controller e2e suite" status="passed" time="39.826088184">
              <system-err>&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:15:14.57&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:15:43.008 (28.437s)&#xA;&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 03/16/23 07:15:43.008&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 03/16/23 07:15:51.065 (8.058s)&#xA;&gt; Enter [It] should allow overlaps of host and paths with canary annotation - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:87 @ 03/16/23 07:15:51.065&#xA;&lt; Exit [It] should allow overlaps of host and paths with canary annotation - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:87 @ 03/16/23 07:15:54.232 (3.167s)&#xA;&gt; Enter [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:15:54.232&#xA;&lt; Exit [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:15:54.396 (164ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Admission] admission controller should block ingress with invalid path" classname="nginx-ingress-controller e2e suite" status="passed" time="38.477870624">
              <system-err>&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:15:54.397&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:16:21.525 (27.129s)&#xA;&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 03/16/23 07:16:21.525&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 03/16/23 07:16:29.579 (8.054s)&#xA;&gt; Enter [It] should block ingress with invalid path - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:108 @ 03/16/23 07:16:29.579&#xA;&lt; Exit [It] should block ingress with invalid path - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:108 @ 03/16/23 07:16:32.71 (3.131s)&#xA;&gt; Enter [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:16:32.71&#xA;&lt; Exit [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:16:32.874 (164ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Admission] admission controller should not return an error if the Ingress V1 definition is valid with Ingress Class" classname="nginx-ingress-controller e2e suite" status="passed" time="39.704870157">
              <system-err>&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:16:32.875&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:17:01.145 (28.27s)&#xA;&gt; Enter [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 03/16/23 07:17:01.145&#xA;&lt; Exit [BeforeEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:38 @ 03/16/23 07:17:09.191 (8.046s)&#xA;&gt; Enter [It] should not return an error if the Ingress V1 definition is valid with Ingress Class - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:164 @ 03/16/23 07:17:09.191&#xA;&lt; Exit [It] should not return an error if the Ingress V1 definition is valid with Ingress Class - /go/src/k8s.io/ingress-nginx/test/e2e/admission/admission.go:164 @ 03/16/23 07:17:12.411 (3.22s)&#xA;&gt; Enter [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:17:12.411&#xA;&lt; Exit [AfterEach] [Admission] admission controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:17:12.58 (169ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Status] status update should update status field after client-go reconnection" classname="nginx-ingress-controller e2e suite" status="passed" time="127.162519471">
              <system-err>&gt; Enter [BeforeEach] [Status] status update - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:37:32.308&#xA;&lt; Exit [BeforeEach] [Status] status update - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:37:41.071 (8.762s)&#xA;&gt; Enter [It] should update status field after client-go reconnection - /go/src/k8s.io/ingress-nginx/test/e2e/status/update.go:43 @ 03/16/23 06:37:41.071&#xA;Mar 16 06:37:41.071: INFO: Asynchronously running &#39;/bin/bash -c /usr/local/bin/kubectl proxy --accept-hosts=.* --address=0.0.0.0 --port=0&#39;&#xA;Mar 16 06:38:49.271: INFO: waiting for leader election and initial status update&#xA;Mar 16 06:39:29.277: INFO: Asynchronously running &#39;/bin/bash -c /usr/local/bin/kubectl proxy --accept-hosts=.* --address=0.0.0.0 --port=35035&#39;&#xA;&lt; Exit [It] should update status field after client-go reconnection - /go/src/k8s.io/ingress-nginx/test/e2e/status/update.go:43 @ 03/16/23 06:39:39.303 (1m58.232s)&#xA;&gt; Enter [AfterEach] [Status] status update - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:39:39.303&#xA;&lt; Exit [AfterEach] [Status] status update - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:39:39.471 (168ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Lua] dynamic certificates given an ingress with TLS correctly configured picks up a non-certificate only change" classname="nginx-ingress-controller e2e suite" status="passed" time="43.542330903">
              <system-err>&gt; Enter [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:39:39.471&#xA;&lt; Exit [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:39:48.528 (9.057s)&#xA;&gt; Enter [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:41 @ 03/16/23 06:39:48.528&#xA;&lt; Exit [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:41 @ 03/16/23 06:39:52.555 (4.027s)&#xA;&gt; Enter [BeforeEach] given an ingress with TLS correctly configured - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:113 @ 03/16/23 06:39:52.555&#xA;STEP: configuring certificate_by_lua and skipping Nginx configuration of the new certificate - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:128 @ 03/16/23 06:40:09.77&#xA;STEP: serving the configured certificate on HTTPS endpoint - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:136 @ 03/16/23 06:40:17.851&#xA;&lt; Exit [BeforeEach] given an ingress with TLS correctly configured - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:113 @ 03/16/23 06:40:17.858 (25.303s)&#xA;&gt; Enter [It] picks up a non-certificate only change - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:218 @ 03/16/23 06:40:17.858&#xA;STEP: serving the configured certificate on HTTPS endpoint - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:229 @ 03/16/23 06:40:22.863&#xA;&lt; Exit [It] picks up a non-certificate only change - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:218 @ 03/16/23 06:40:22.87 (5.012s)&#xA;&gt; Enter [AfterEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:40:22.87&#xA;&lt; Exit [AfterEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:40:23.013 (143ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* when canaried by header with value and cookie should route requests to the correct upstream" classname="nginx-ingress-controller e2e suite" status="passed" time="32.16600711">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:40:23.017&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:40:29.878 (6.861s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 03/16/23 06:40:29.878&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 03/16/23 06:40:37.935 (8.057s)&#xA;&gt; Enter [It] should route requests to the correct upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:604 @ 03/16/23 06:40:37.935&#xA;STEP: routing requests to the canary upstream when header value does not match and cookie is set to &#39;always&#39; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:630 @ 03/16/23 06:40:55.052&#xA;&lt; Exit [It] should route requests to the correct upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:604 @ 03/16/23 06:40:55.054 (17.119s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:40:55.054&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:40:55.183 (129ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Service] backend status code 503 should return 503 when backend service does not exist" classname="nginx-ingress-controller e2e suite" status="passed" time="17.176404308">
              <system-err>&gt; Enter [BeforeEach] [Service] backend status code 503 - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:40:55.184&#xA;&lt; Exit [BeforeEach] [Service] backend status code 503 - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:41:01.985 (6.802s)&#xA;&gt; Enter [It] should return 503 when backend service does not exist - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_backend.go:36 @ 03/16/23 06:41:01.985&#xA;&lt; Exit [It] should return 503 when backend service does not exist - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_backend.go:36 @ 03/16/23 06:41:12.111 (10.125s)&#xA;&gt; Enter [AfterEach] [Service] backend status code 503 - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:41:12.111&#xA;&lt; Exit [AfterEach] [Service] backend status code 503 - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:41:12.36 (249ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* when canary is created should return 404 status for requests to the canary if no matching ingress is found" classname="nginx-ingress-controller e2e suite" status="passed" time="24.965418034">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:41:12.361&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:41:22.102 (9.742s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 03/16/23 06:41:22.102&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 03/16/23 06:41:30.149 (8.046s)&#xA;&gt; Enter [It] should return 404 status for requests to the canary if no matching ingress is found - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:80 @ 03/16/23 06:41:30.149&#xA;&lt; Exit [It] should return 404 status for requests to the canary if no matching ingress is found - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:80 @ 03/16/23 06:41:37.159 (7.01s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:41:37.159&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:41:37.326 (167ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* with invalid auth-url should deny whole location should add error to the config" classname="nginx-ingress-controller e2e suite" status="passed" time="27.803868826">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:41:37.327&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:41:47.662 (10.335s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 06:41:47.662&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 06:41:51.679 (4.017s)&#xA;&gt; Enter [BeforeEach] with invalid auth-url should deny whole location - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:866 @ 03/16/23 06:41:51.679&#xA;&lt; Exit [BeforeEach] with invalid auth-url should deny whole location - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:866 @ 03/16/23 06:42:01.805 (10.126s)&#xA;&gt; Enter [It] should add error to the config - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:887 @ 03/16/23 06:42:01.805&#xA;&lt; Exit [It] should add error to the config - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:887 @ 03/16/23 06:42:04.912 (3.107s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:42:04.912&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:42:05.131 (218ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] ingress-class Without IngressClass Cluster scoped Permission should ignore Ingress with only IngressClassName" classname="nginx-ingress-controller e2e suite" status="passed" time="30.354769749">
              <system-err>&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:42:05.131&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:42:12.177 (7.046s)&#xA;&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 03/16/23 06:42:12.177&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 03/16/23 06:42:16.196 (4.019s)&#xA;&gt; Enter [BeforeEach] Without IngressClass Cluster scoped Permission - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:587 @ 03/16/23 06:42:16.196&#xA;&lt; Exit [BeforeEach] Without IngressClass Cluster scoped Permission - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:587 @ 03/16/23 06:42:25.216 (9.02s)&#xA;&gt; Enter [It] should ignore Ingress with only IngressClassName - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:652 @ 03/16/23 06:42:25.216&#xA;&lt; Exit [It] should ignore Ingress with only IngressClassName - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:652 @ 03/16/23 06:42:35.331 (10.116s)&#xA;&gt; Enter [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:42:35.331&#xA;&lt; Exit [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:42:35.486 (154ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] service-upstream when enabling in the configmap should use the Service Cluster IP and Port" classname="nginx-ingress-controller e2e suite" status="passed" time="30.342303776">
              <system-err>&gt; Enter [BeforeEach] [Annotations] service-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:42:35.486&#xA;&lt; Exit [BeforeEach] [Annotations] service-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:42:42.438 (6.951s)&#xA;&gt; Enter [BeforeEach] [Annotations] service-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serviceupstream.go:36 @ 03/16/23 06:42:42.438&#xA;&lt; Exit [BeforeEach] [Annotations] service-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serviceupstream.go:36 @ 03/16/23 06:42:48.454 (6.016s)&#xA;&gt; Enter [It] should use the Service Cluster IP and Port  - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serviceupstream.go:70 @ 03/16/23 06:42:48.454&#xA;STEP: checking if the service is reached - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serviceupstream.go:82 @ 03/16/23 06:43:05.571&#xA;STEP: checking if the Service Cluster IP and Port are used - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serviceupstream.go:89 @ 03/16/23 06:43:05.574&#xA;&lt; Exit [It] should use the Service Cluster IP and Port  - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serviceupstream.go:70 @ 03/16/23 06:43:05.668 (17.214s)&#xA;&gt; Enter [AfterEach] [Annotations] service-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:43:05.668&#xA;&lt; Exit [AfterEach] [Annotations] service-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:43:05.829 (160ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] backend-protocol - GRPC should return OK for service with backend protocol GRPC" classname="nginx-ingress-controller e2e suite" status="passed" time="28.275417288">
              <system-err>&gt; Enter [BeforeEach] [Annotations] backend-protocol - GRPC - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:43:05.829&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - GRPC - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:43:13.79 (7.961s)&#xA;&gt; Enter [It] should return OK for service with backend protocol GRPC - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/grpc.go:68 @ 03/16/23 06:43:13.79&#xA;&lt; Exit [It] should return OK for service with backend protocol GRPC - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/grpc.go:68 @ 03/16/23 06:43:33.942 (20.152s)&#xA;&gt; Enter [AfterEach] [Annotations] backend-protocol - GRPC - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:43:33.942&#xA;&lt; Exit [AfterEach] [Annotations] backend-protocol - GRPC - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:43:34.104 (162ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Configure OpenTracing should enable opentracing using jaeger" classname="nginx-ingress-controller e2e suite" status="passed" time="31.092321848">
              <system-err>&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:43:34.105&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:43:40.999 (6.894s)&#xA;&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 03/16/23 06:43:40.999&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 03/16/23 06:43:45.033 (4.034s)&#xA;&gt; Enter [It] should enable opentracing using jaeger - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:172 @ 03/16/23 06:43:45.033&#xA;&lt; Exit [It] should enable opentracing using jaeger - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:172 @ 03/16/23 06:44:05.047 (20.014s)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:44:05.047&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:44:05.197 (150ms)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 03/16/23 06:44:05.197&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 03/16/23 06:44:05.197 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Lua] dynamic certificates given an ingress with TLS correctly configured picks up the updated certificate without reloading" classname="nginx-ingress-controller e2e suite" status="passed" time="47.478030538">
              <system-err>&gt; Enter [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:44:05.198&#xA;&lt; Exit [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:44:12.021 (6.824s)&#xA;&gt; Enter [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:41 @ 03/16/23 06:44:12.021&#xA;&lt; Exit [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:41 @ 03/16/23 06:44:16.048 (4.026s)&#xA;&gt; Enter [BeforeEach] given an ingress with TLS correctly configured - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:113 @ 03/16/23 06:44:16.048&#xA;STEP: configuring certificate_by_lua and skipping Nginx configuration of the new certificate - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:128 @ 03/16/23 06:44:33.165&#xA;STEP: serving the configured certificate on HTTPS endpoint - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:136 @ 03/16/23 06:44:41.274&#xA;&lt; Exit [BeforeEach] given an ingress with TLS correctly configured - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:113 @ 03/16/23 06:44:41.287 (25.24s)&#xA;&gt; Enter [It] picks up the updated certificate without reloading - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:149 @ 03/16/23 06:44:41.287&#xA;STEP: configuring certificate_by_lua and skipping Nginx configuration of the new certificate - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:163 @ 03/16/23 06:44:46.397&#xA;STEP: serving the configured certificate on HTTPS endpoint - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:169 @ 03/16/23 06:44:49.525&#xA;STEP: skipping Nginx reload - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:180 @ 03/16/23 06:44:52.537&#xA;&lt; Exit [It] picks up the updated certificate without reloading - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:149 @ 03/16/23 06:44:52.537 (11.25s)&#xA;&gt; Enter [AfterEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:44:52.537&#xA;&lt; Exit [AfterEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:44:52.676 (138ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* canary affinity behavior routes traffic to either mainline or canary backend (legacy behavior)" classname="nginx-ingress-controller e2e suite" status="passed" time="70.615084834">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:44:52.676&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:44:59.501 (6.825s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 03/16/23 06:44:59.501&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 03/16/23 06:45:07.573 (8.072s)&#xA;&gt; Enter [It] routes traffic to either mainline or canary backend (legacy behavior) - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:1031 @ 03/16/23 06:45:07.573&#xA;&lt; Exit [It] routes traffic to either mainline or canary backend (legacy behavior) - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:1031 @ 03/16/23 06:46:03.091 (55.518s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:46:03.091&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:46:03.291 (200ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Default Backend] should return 404 sending requests when only a default backend is running" classname="nginx-ingress-controller e2e suite" status="passed" time="17.409791872">
              <system-err>&gt; Enter [BeforeEach] [Default Backend] - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:46:03.291&#xA;&lt; Exit [BeforeEach] [Default Backend] - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:46:11.098 (7.806s)&#xA;&gt; Enter [It] should return 404 sending requests when only a default backend is running - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:33 @ 03/16/23 06:46:11.098&#xA;STEP: basic HTTP GET request without host to path / should return 404 - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:66 @ 03/16/23 06:46:16.098&#xA;STEP: basic HTTP GET request without host to path /demo should return 404 - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:66 @ 03/16/23 06:46:16.102&#xA;STEP: basic HTTPS GET request without host to path / should return 404 - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:66 @ 03/16/23 06:46:16.105&#xA;STEP: basic HTTPS GET request without host to path /demo should return 404 - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:66 @ 03/16/23 06:46:16.111&#xA;STEP: basic HTTP POST request without host to path / should return 404 - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:66 @ 03/16/23 06:46:16.118&#xA;STEP: basic HTTP POST request without host to path /demo should return 404 - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:66 @ 03/16/23 06:46:16.122&#xA;STEP: basic HTTPS POST request without host to path / should return 404 - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:66 @ 03/16/23 06:46:16.502&#xA;STEP: basic HTTPS POST request without host to path /demo should return 404 - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:66 @ 03/16/23 06:46:16.905&#xA;STEP: basic HTTP GET request to host foo.bar.com and path / should return 404 - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:66 @ 03/16/23 06:46:17.306&#xA;STEP: basic HTTP GET request to host foo.bar.com and path /demo should return 404 - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:66 @ 03/16/23 06:46:17.701&#xA;STEP: basic HTTPS GET request to host foo.bar.com and path / should return 404 - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:66 @ 03/16/23 06:46:18.102&#xA;STEP: basic HTTPS GET request to host foo.bar.com and path /demo should return 404 - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:66 @ 03/16/23 06:46:18.505&#xA;STEP: basic HTTP POST request to host foo.bar.com and path / should return 404 - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:66 @ 03/16/23 06:46:18.904&#xA;STEP: basic HTTP POST request to host foo.bar.com and path /demo should return 404 - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:66 @ 03/16/23 06:46:19.301&#xA;STEP: basic HTTPS POST request to host foo.bar.com and path / should return 404 - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:66 @ 03/16/23 06:46:19.701&#xA;STEP: basic HTTPS POST request to host foo.bar.com and path /demo should return 404 - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:66 @ 03/16/23 06:46:20.105&#xA;&lt; Exit [It] should return 404 sending requests when only a default backend is running - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:33 @ 03/16/23 06:46:20.506 (9.408s)&#xA;&gt; Enter [AfterEach] [Default Backend] - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:46:20.506&#xA;&lt; Exit [AfterEach] [Default Backend] - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:46:20.701 (195ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* when canaried by header with value and pattern should route requests to the correct upstream" classname="nginx-ingress-controller e2e suite" status="passed" time="30.130390522">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:46:20.702&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:46:27.506 (6.804s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 03/16/23 06:46:27.506&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 03/16/23 06:46:33.544 (6.038s)&#xA;&gt; Enter [It] should route requests to the correct upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:490 @ 03/16/23 06:46:33.544&#xA;STEP: routing requests to the canary upstream when header pattern is matched - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:514 @ 03/16/23 06:46:50.65&#xA;STEP: routing requests to the mainline upstream when header failed to match header value - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:523 @ 03/16/23 06:46:50.655&#xA;&lt; Exit [It] should route requests to the correct upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:490 @ 03/16/23 06:46:50.658 (17.114s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:46:50.658&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:46:50.832 (174ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] use-forwarded-headers should trust X-Forwarded headers when setting is true" classname="nginx-ingress-controller e2e suite" status="passed" time="35.676296753">
              <system-err>&gt; Enter [BeforeEach] [Setting] use-forwarded-headers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:46:50.833&#xA;&lt; Exit [BeforeEach] [Setting] use-forwarded-headers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:46:58.19 (7.357s)&#xA;&gt; Enter [BeforeEach] [Setting] use-forwarded-headers - /go/src/k8s.io/ingress-nginx/test/e2e/settings/forwarded_headers.go:35 @ 03/16/23 06:46:58.19&#xA;&lt; Exit [BeforeEach] [Setting] use-forwarded-headers - /go/src/k8s.io/ingress-nginx/test/e2e/settings/forwarded_headers.go:35 @ 03/16/23 06:47:09.219 (11.029s)&#xA;&gt; Enter [It] should trust X-Forwarded headers when setting is true - /go/src/k8s.io/ingress-nginx/test/e2e/settings/forwarded_headers.go:40 @ 03/16/23 06:47:09.219&#xA;STEP: ensuring single values are parsed correctly - /go/src/k8s.io/ingress-nginx/test/e2e/settings/forwarded_headers.go:54 @ 03/16/23 06:47:26.358&#xA;STEP: ensuring that first entry in X-Forwarded-Host is used as the best host - /go/src/k8s.io/ingress-nginx/test/e2e/settings/forwarded_headers.go:75 @ 03/16/23 06:47:26.361&#xA;&lt; Exit [It] should trust X-Forwarded headers when setting is true - /go/src/k8s.io/ingress-nginx/test/e2e/settings/forwarded_headers.go:40 @ 03/16/23 06:47:26.363 (17.144s)&#xA;&gt; Enter [AfterEach] [Setting] use-forwarded-headers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:47:26.363&#xA;&lt; Exit [AfterEach] [Setting] use-forwarded-headers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:47:26.509 (146ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] server-alias should return status code 200 for host &#39;foo&#39; and 404 for &#39;bar&#39;" classname="nginx-ingress-controller e2e suite" status="passed" time="19.192804099">
              <system-err>&gt; Enter [BeforeEach] [Annotations] server-alias - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:47:26.51&#xA;&lt; Exit [BeforeEach] [Annotations] server-alias - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:47:33.396 (6.886s)&#xA;&gt; Enter [BeforeEach] [Annotations] server-alias - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/alias.go:32 @ 03/16/23 06:47:33.396&#xA;&lt; Exit [BeforeEach] [Annotations] server-alias - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/alias.go:32 @ 03/16/23 06:47:35.411 (2.015s)&#xA;&gt; Enter [It] should return status code 200 for host &#39;foo&#39; and 404 for &#39;bar&#39; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/alias.go:36 @ 03/16/23 06:47:35.411&#xA;&lt; Exit [It] should return status code 200 for host &#39;foo&#39; and 404 for &#39;bar&#39; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/alias.go:36 @ 03/16/23 06:47:45.527 (10.115s)&#xA;&gt; Enter [AfterEach] [Annotations] server-alias - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:47:45.527&#xA;&lt; Exit [AfterEach] [Annotations] server-alias - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:47:45.703 (176ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] affinity session-cookie-name should set cookie with expires" classname="nginx-ingress-controller e2e suite" status="passed" time="21.056034603">
              <system-err>&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:47:45.703&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:47:52.532 (6.829s)&#xA;&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 03/16/23 06:47:52.532&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 03/16/23 06:47:56.553 (4.022s)&#xA;&gt; Enter [It] should set cookie with expires - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:194 @ 03/16/23 06:47:56.553&#xA;&lt; Exit [It] should set cookie with expires - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:194 @ 03/16/23 06:48:06.619 (10.065s)&#xA;&gt; Enter [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:48:06.619&#xA;&lt; Exit [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:48:06.759 (140ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] access-log http-access-log-path &amp; stream-access-log-path use the specified configuration" classname="nginx-ingress-controller e2e suite" status="passed" time="17.088835307">
              <system-err>&gt; Enter [BeforeEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:48:06.759&#xA;&lt; Exit [BeforeEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:48:13.585 (6.826s)&#xA;&gt; Enter [It] use the specified configuration - /go/src/k8s.io/ingress-nginx/test/e2e/settings/access_log.go:80 @ 03/16/23 06:48:13.585&#xA;&lt; Exit [It] use the specified configuration - /go/src/k8s.io/ingress-nginx/test/e2e/settings/access_log.go:80 @ 03/16/23 06:48:23.705 (10.12s)&#xA;&gt; Enter [AfterEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:48:23.705&#xA;&lt; Exit [AfterEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:48:23.848 (143ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] server-snippet drops server snippet if disabled by the administrator" classname="nginx-ingress-controller e2e suite" status="passed" time="40.085772117">
              <system-err>&gt; Enter [BeforeEach] [Annotations] server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:48:23.849&#xA;&lt; Exit [BeforeEach] [Annotations] server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:48:30.656 (6.808s)&#xA;&gt; Enter [BeforeEach] [Annotations] server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serversnippet.go:31 @ 03/16/23 06:48:30.656&#xA;&lt; Exit [BeforeEach] [Annotations] server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serversnippet.go:31 @ 03/16/23 06:48:34.683 (4.026s)&#xA;&gt; Enter [It] drops server snippet if disabled by the administrator - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serversnippet.go:61 @ 03/16/23 06:48:34.683&#xA;&lt; Exit [It] drops server snippet if disabled by the administrator - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serversnippet.go:61 @ 03/16/23 06:49:03.797 (29.114s)&#xA;&gt; Enter [AfterEach] [Annotations] server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:49:03.797&#xA;&lt; Exit [AfterEach] [Annotations] server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:49:03.934 (138ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] modsecurity owasp should enable modsecurity through the config map" classname="nginx-ingress-controller e2e suite" status="passed" time="40.133269384">
              <system-err>&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:49:03.935&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:49:10.734 (6.799s)&#xA;&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 03/16/23 06:49:10.734&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 03/16/23 06:49:14.76 (4.027s)&#xA;&gt; Enter [It] should enable modsecurity through the config map - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:264 @ 03/16/23 06:49:14.76&#xA;&lt; Exit [It] should enable modsecurity through the config map - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:264 @ 03/16/23 06:49:43.894 (29.133s)&#xA;&gt; Enter [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:49:43.894&#xA;&lt; Exit [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:49:44.068 (174ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* should set snippet &#34;proxy_set_header My-Custom-Header 42;&#34; when external auth is configured" classname="nginx-ingress-controller e2e suite" status="passed" time="21.084162098">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:49:44.068&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:49:50.908 (6.84s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 06:49:50.908&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 06:49:54.93 (4.022s)&#xA;&gt; Enter [It] should set snippet &#34;proxy_set_header My-Custom-Header 42;&#34; when external auth is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:266 @ 03/16/23 06:49:54.93&#xA;&lt; Exit [It] should set snippet &#34;proxy_set_header My-Custom-Header 42;&#34; when external auth is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:266 @ 03/16/23 06:50:05.024 (10.094s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:50:05.024&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:50:05.153 (128ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] enable-real-ip trusts X-Forwarded-For header only when setting is true" classname="nginx-ingress-controller e2e suite" status="passed" time="35.077843687">
              <system-err>&gt; Enter [BeforeEach] [Setting] enable-real-ip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:50:05.153&#xA;&lt; Exit [BeforeEach] [Setting] enable-real-ip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:50:11.97 (6.817s)&#xA;&gt; Enter [BeforeEach] [Setting] enable-real-ip - /go/src/k8s.io/ingress-nginx/test/e2e/settings/enable_real_ip.go:35 @ 03/16/23 06:50:11.97&#xA;&lt; Exit [BeforeEach] [Setting] enable-real-ip - /go/src/k8s.io/ingress-nginx/test/e2e/settings/enable_real_ip.go:35 @ 03/16/23 06:50:22.995 (11.025s)&#xA;&gt; Enter [It] trusts X-Forwarded-For header only when setting is true - /go/src/k8s.io/ingress-nginx/test/e2e/settings/enable_real_ip.go:40 @ 03/16/23 06:50:22.995&#xA;STEP: ensuring single values are parsed correctly - /go/src/k8s.io/ingress-nginx/test/e2e/settings/enable_real_ip.go:54 @ 03/16/23 06:50:40.086&#xA;&lt; Exit [It] trusts X-Forwarded-For header only when setting is true - /go/src/k8s.io/ingress-nginx/test/e2e/settings/enable_real_ip.go:40 @ 03/16/23 06:50:40.089 (17.094s)&#xA;&gt; Enter [AfterEach] [Setting] enable-real-ip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:50:40.089&#xA;&lt; Exit [AfterEach] [Setting] enable-real-ip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:50:40.231 (142ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] denylist-source-range only deny explicitly denied IPs, allow all others" classname="nginx-ingress-controller e2e suite" status="passed" time="36.114506202">
              <system-err>&gt; Enter [BeforeEach] [Annotations] denylist-source-range - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:50:40.231&#xA;&lt; Exit [BeforeEach] [Annotations] denylist-source-range - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:50:48.029 (7.798s)&#xA;&gt; Enter [BeforeEach] [Annotations] denylist-source-range - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/ipdenylist.go:31 @ 03/16/23 06:50:48.029&#xA;&lt; Exit [BeforeEach] [Annotations] denylist-source-range - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/ipdenylist.go:31 @ 03/16/23 06:50:52.047 (4.019s)&#xA;&gt; Enter [It] only deny explicitly denied IPs, allow all others - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/ipdenylist.go:35 @ 03/16/23 06:50:52.047&#xA;STEP: sending request from an explicitly denied IP range - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/ipdenylist.go:61 @ 03/16/23 06:51:09.161&#xA;STEP: sending request from an explicitly denied IP address - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/ipdenylist.go:69 @ 03/16/23 06:51:09.164&#xA;STEP: sending request from an implicitly allowed IP range - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/ipdenylist.go:77 @ 03/16/23 06:51:09.166&#xA;&lt; Exit [It] only deny explicitly denied IPs, allow all others - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/ipdenylist.go:35 @ 03/16/23 06:51:16.175 (24.128s)&#xA;&gt; Enter [AfterEach] [Annotations] denylist-source-range - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:51:16.175&#xA;&lt; Exit [AfterEach] [Annotations] denylist-source-range - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:51:16.346 (170ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] Add no tls redirect locations Check no tls redirect locations config" classname="nginx-ingress-controller e2e suite" status="passed" time="27.1894796">
              <system-err>&gt; Enter [BeforeEach] [Setting] Add no tls redirect locations - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:51:16.346&#xA;&lt; Exit [BeforeEach] [Setting] Add no tls redirect locations - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:51:23.211 (6.865s)&#xA;&gt; Enter [It] Check no tls redirect locations config - /go/src/k8s.io/ingress-nginx/test/e2e/settings/no_tls_redirect_locations.go:31 @ 03/16/23 06:51:23.211&#xA;&lt; Exit [It] Check no tls redirect locations config - /go/src/k8s.io/ingress-nginx/test/e2e/settings/no_tls_redirect_locations.go:31 @ 03/16/23 06:51:43.404 (20.192s)&#xA;&gt; Enter [AfterEach] [Setting] Add no tls redirect locations - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:51:43.404&#xA;&lt; Exit [AfterEach] [Setting] Add no tls redirect locations - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:51:43.536 (132ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* should return status code 401 when authentication is configured but Authorization header is not configured" classname="nginx-ingress-controller e2e suite" status="passed" time="22.139656062">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:51:43.536&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:51:50.342 (6.806s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 06:51:50.342&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 06:51:54.37 (4.028s)&#xA;&gt; Enter [It] should return status code 401 when authentication is configured but Authorization header is not configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:89 @ 03/16/23 06:51:54.37&#xA;&lt; Exit [It] should return status code 401 when authentication is configured but Authorization header is not configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:89 @ 03/16/23 06:52:05.505 (11.135s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:52:05.505&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:52:05.676 (170ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* should set &#34;proxy_set_header &#39;My-Custom-Header&#39; &#39;42&#39;;&#34; when auth-headers are set" classname="nginx-ingress-controller e2e suite" status="passed" time="21.125670144">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:52:05.676&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:52:12.525 (6.849s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 06:52:12.525&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 06:52:16.541 (4.017s)&#xA;&gt; Enter [It] should set &#34;proxy_set_header &#39;My-Custom-Header&#39; &#39;42&#39;;&#34; when auth-headers are set - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:301 @ 03/16/23 06:52:16.541&#xA;&lt; Exit [It] should set &#34;proxy_set_header &#39;My-Custom-Header&#39; &#39;42&#39;;&#34; when auth-headers are set - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:301 @ 03/16/23 06:52:26.659 (10.118s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:52:26.659&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:52:26.802 (143ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] ingress-class With default ingress class config should delete Ingress when class is removed" classname="nginx-ingress-controller e2e suite" status="passed" time="38.299647354">
              <system-err>&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:52:26.802&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:52:35.699 (8.897s)&#xA;&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 03/16/23 06:52:35.699&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 03/16/23 06:52:39.724 (4.025s)&#xA;&gt; Enter [It] should delete Ingress when class is removed - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:192 @ 03/16/23 06:52:39.724&#xA;&lt; Exit [It] should delete Ingress when class is removed - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:192 @ 03/16/23 06:53:04.927 (25.203s)&#xA;&gt; Enter [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:53:04.927&#xA;&lt; Exit [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:53:05.102 (175ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] reuse-port reuse port should be disabled" classname="nginx-ingress-controller e2e suite" status="passed" time="28.161805506">
              <system-err>&gt; Enter [BeforeEach] [Setting] reuse-port - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:53:05.103&#xA;&lt; Exit [BeforeEach] [Setting] reuse-port - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:53:11.994 (6.891s)&#xA;&gt; Enter [BeforeEach] [Setting] reuse-port - /go/src/k8s.io/ingress-nginx/test/e2e/settings/reuse-port.go:32 @ 03/16/23 06:53:11.994&#xA;&lt; Exit [BeforeEach] [Setting] reuse-port - /go/src/k8s.io/ingress-nginx/test/e2e/settings/reuse-port.go:32 @ 03/16/23 06:53:23.025 (11.031s)&#xA;&gt; Enter [It] reuse port should be disabled - /go/src/k8s.io/ingress-nginx/test/e2e/settings/reuse-port.go:44 @ 03/16/23 06:53:23.025&#xA;&lt; Exit [It] reuse port should be disabled - /go/src/k8s.io/ingress-nginx/test/e2e/settings/reuse-port.go:44 @ 03/16/23 06:53:33.116 (10.091s)&#xA;&gt; Enter [AfterEach] [Setting] reuse-port - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:53:33.116&#xA;&lt; Exit [AfterEach] [Setting] reuse-port - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:53:33.264 (148ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-tls-* should validate auth-tls-verify-client" classname="nginx-ingress-controller e2e suite" status="passed" time="26.740599756">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:53:33.265&#xA;&lt; Exit [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:53:41.08 (7.815s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:32 @ 03/16/23 06:53:41.08&#xA;&lt; Exit [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:32 @ 03/16/23 06:53:45.111 (4.031s)&#xA;&gt; Enter [It] should validate auth-tls-verify-client - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:206 @ 03/16/23 06:53:45.111&#xA;&lt; Exit [It] should validate auth-tls-verify-client - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:206 @ 03/16/23 06:53:59.851 (14.741s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:53:59.852&#xA;&lt; Exit [AfterEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:54:00.005 (154ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] affinity session-cookie-name should set cookie with domain" classname="nginx-ingress-controller e2e suite" status="passed" time="20.115070165">
              <system-err>&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:54:00.006&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:54:05.812 (5.806s)&#xA;&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 03/16/23 06:54:05.812&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 03/16/23 06:54:09.835 (4.023s)&#xA;&gt; Enter [It] should set cookie with domain - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:225 @ 03/16/23 06:54:09.835&#xA;&lt; Exit [It] should set cookie with domain - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:225 @ 03/16/23 06:54:19.961 (10.126s)&#xA;&gt; Enter [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:54:19.961&#xA;&lt; Exit [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:54:20.121 (160ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Configure OpenTracing should enable opentracing using zipkin" classname="nginx-ingress-controller e2e suite" status="passed" time="31.006282131">
              <system-err>&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:54:20.121&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:54:26.933 (6.812s)&#xA;&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 03/16/23 06:54:26.933&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 03/16/23 06:54:30.949 (4.016s)&#xA;&gt; Enter [It] should enable opentracing using zipkin - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:160 @ 03/16/23 06:54:30.949&#xA;&lt; Exit [It] should enable opentracing using zipkin - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:160 @ 03/16/23 06:54:50.963 (20.014s)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:54:50.963&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:54:51.127 (165ms)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 03/16/23 06:54:51.127&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 03/16/23 06:54:51.127 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] affinity session-cookie-name should set sticky cookie SERVERID" classname="nginx-ingress-controller e2e suite" status="passed" time="21.154507705">
              <system-err>&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:54:51.128&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:54:57.998 (6.869s)&#xA;&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 03/16/23 06:54:57.998&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 03/16/23 06:55:02.028 (4.031s)&#xA;&gt; Enter [It] should set sticky cookie SERVERID - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:42 @ 03/16/23 06:55:02.028&#xA;&lt; Exit [It] should set sticky cookie SERVERID - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:42 @ 03/16/23 06:55:12.13 (10.101s)&#xA;&gt; Enter [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:55:12.13&#xA;&lt; Exit [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:55:12.283 (153ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] modsecurity owasp should enable modsecurity without using &#39;modsecurity on;&#39;" classname="nginx-ingress-controller e2e suite" status="passed" time="29.108876954">
              <system-err>&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:55:12.283&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:55:20.092 (7.808s)&#xA;&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 03/16/23 06:55:20.092&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 03/16/23 06:55:24.118 (4.026s)&#xA;&gt; Enter [It] should enable modsecurity without using &#39;modsecurity on;&#39; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:110 @ 03/16/23 06:55:24.118&#xA;&lt; Exit [It] should enable modsecurity without using &#39;modsecurity on;&#39; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:110 @ 03/16/23 06:55:41.238 (17.12s)&#xA;&gt; Enter [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:55:41.238&#xA;&lt; Exit [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:55:41.392 (154ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] from-to-www-redirect should redirect from www HTTPS to HTTPS" classname="nginx-ingress-controller e2e suite" status="passed" time="26.274416083">
              <system-err>&gt; Enter [BeforeEach] [Annotations] from-to-www-redirect - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:55:41.393&#xA;&lt; Exit [BeforeEach] [Annotations] from-to-www-redirect - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:55:48.224 (6.831s)&#xA;&gt; Enter [BeforeEach] [Annotations] from-to-www-redirect - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fromtowwwredirect.go:34 @ 03/16/23 06:55:48.224&#xA;&lt; Exit [BeforeEach] [Annotations] from-to-www-redirect - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fromtowwwredirect.go:34 @ 03/16/23 06:55:52.244 (4.021s)&#xA;&gt; Enter [It] should redirect from www HTTPS to HTTPS - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fromtowwwredirect.go:64 @ 03/16/23 06:55:52.244&#xA;STEP: setting up server for redirect from www - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fromtowwwredirect.go:65 @ 03/16/23 06:55:52.244&#xA;STEP: sending request to www should redirect to domain - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fromtowwwredirect.go:91 @ 03/16/23 06:56:07.467&#xA;STEP: sending request to domain should not redirect to www - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fromtowwwredirect.go:103 @ 03/16/23 06:56:07.479&#xA;&lt; Exit [It] should redirect from www HTTPS to HTTPS - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fromtowwwredirect.go:64 @ 03/16/23 06:56:07.488 (15.243s)&#xA;&gt; Enter [AfterEach] [Annotations] from-to-www-redirect - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:56:07.488&#xA;&lt; Exit [AfterEach] [Annotations] from-to-www-redirect - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:56:07.667 (179ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] proxy-ssl-* should set valid proxy-ssl-secret, proxy-ssl-protocols" classname="nginx-ingress-controller e2e suite" status="passed" time="21.481888062">
              <system-err>&gt; Enter [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:56:07.668&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:56:14.475 (6.808s)&#xA;&gt; Enter [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:33 @ 03/16/23 06:56:14.475&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:33 @ 03/16/23 06:56:18.494 (4.019s)&#xA;&gt; Enter [It] should set valid proxy-ssl-secret, proxy-ssl-protocols - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:122 @ 03/16/23 06:56:18.494&#xA;&lt; Exit [It] should set valid proxy-ssl-secret, proxy-ssl-protocols - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:122 @ 03/16/23 06:56:28.967 (10.473s)&#xA;&gt; Enter [AfterEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:56:28.967&#xA;&lt; Exit [AfterEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:56:29.149 (182ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Load Balancer] load-balance should apply the configmap load-balance setting" classname="nginx-ingress-controller e2e suite" status="passed" time="28.211425034">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Load Balancer] load-balance - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:56:29.15&#xA;&lt; Exit [BeforeEach] [Setting] [Load Balancer] load-balance - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:56:35.972 (6.822s)&#xA;&gt; Enter [BeforeEach] [Setting] [Load Balancer] load-balance - /go/src/k8s.io/ingress-nginx/test/e2e/loadbalance/configmap.go:31 @ 03/16/23 06:56:35.972&#xA;&lt; Exit [BeforeEach] [Setting] [Load Balancer] load-balance - /go/src/k8s.io/ingress-nginx/test/e2e/loadbalance/configmap.go:31 @ 03/16/23 06:56:40.002 (4.03s)&#xA;&gt; Enter [It] should apply the configmap load-balance setting - /go/src/k8s.io/ingress-nginx/test/e2e/loadbalance/configmap.go:35 @ 03/16/23 06:56:40.002&#xA;&lt; Exit [It] should apply the configmap load-balance setting - /go/src/k8s.io/ingress-nginx/test/e2e/loadbalance/configmap.go:35 @ 03/16/23 06:56:57.209 (17.207s)&#xA;&gt; Enter [AfterEach] [Setting] [Load Balancer] load-balance - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:56:57.209&#xA;&lt; Exit [AfterEach] [Setting] [Load Balancer] load-balance - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:56:57.361 (153ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] Bad annotation values [BAD_ANNOTATIONS] should allow an ingress if there is a default blocklist config in place" classname="nginx-ingress-controller e2e suite" status="passed" time="29.292932573">
              <system-err>&gt; Enter [BeforeEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:56:57.362&#xA;&lt; Exit [BeforeEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:57:04.247 (6.885s)&#xA;&gt; Enter [BeforeEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/badannotationvalues.go:32 @ 03/16/23 06:57:04.247&#xA;&lt; Exit [BeforeEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/badannotationvalues.go:32 @ 03/16/23 06:57:08.264 (4.018s)&#xA;&gt; Enter [It] [BAD_ANNOTATIONS] should allow an ingress if there is a default blocklist config in place - /go/src/k8s.io/ingress-nginx/test/e2e/settings/badannotationvalues.go:102 @ 03/16/23 06:57:08.264&#xA;&lt; Exit [It] [BAD_ANNOTATIONS] should allow an ingress if there is a default blocklist config in place - /go/src/k8s.io/ingress-nginx/test/e2e/settings/badannotationvalues.go:102 @ 03/16/23 06:57:26.461 (18.196s)&#xA;&gt; Enter [AfterEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:57:26.461&#xA;&lt; Exit [AfterEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:57:26.655 (194ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] ingress-class With default ingress class config should ignore Ingress with a different class annotation" classname="nginx-ingress-controller e2e suite" status="passed" time="29.702477357">
              <system-err>&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:57:26.656&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:57:35.028 (8.372s)&#xA;&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 03/16/23 06:57:35.028&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 03/16/23 06:57:39.049 (4.022s)&#xA;&gt; Enter [It] should ignore Ingress with a different class annotation - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:68 @ 03/16/23 06:57:39.049&#xA;&lt; Exit [It] should ignore Ingress with a different class annotation - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:68 @ 03/16/23 06:57:56.175 (17.126s)&#xA;&gt; Enter [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:57:56.175&#xA;&lt; Exit [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:57:56.358 (183ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should set cors max-age" classname="nginx-ingress-controller e2e suite" status="passed" time="23.142220231">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:57:56.359&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:58:05.18 (8.822s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 03/16/23 06:58:05.18&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 03/16/23 06:58:09.21 (4.029s)&#xA;&gt; Enter [It] should set cors max-age - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:78 @ 03/16/23 06:58:09.21&#xA;&lt; Exit [It] should set cors max-age - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:78 @ 03/16/23 06:58:19.329 (10.12s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:58:19.329&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:58:19.501 (172ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] ingress-class With default ingress class config should serve Ingress when class is updated between annotation and ingressClassName" classname="nginx-ingress-controller e2e suite" status="passed" time="36.409862211">
              <system-err>&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:58:19.501&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:58:26.51 (7.009s)&#xA;&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 03/16/23 06:58:26.51&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 03/16/23 06:58:30.541 (4.031s)&#xA;&gt; Enter [It] should serve Ingress when class is updated between annotation and ingressClassName - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:323 @ 03/16/23 06:58:30.541&#xA;&lt; Exit [It] should serve Ingress when class is updated between annotation and ingressClassName - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:323 @ 03/16/23 06:58:55.745 (25.203s)&#xA;&gt; Enter [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:58:55.745&#xA;&lt; Exit [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:58:55.911 (166ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should expose headers for cors" classname="nginx-ingress-controller e2e suite" status="passed" time="21.122372783">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:58:55.912&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:59:02.711 (6.799s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 03/16/23 06:59:02.711&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 03/16/23 06:59:06.733 (4.022s)&#xA;&gt; Enter [It] should expose headers for cors - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:153 @ 03/16/23 06:59:06.733&#xA;&lt; Exit [It] should expose headers for cors - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:153 @ 03/16/23 06:59:16.852 (10.119s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:59:16.852&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:59:17.034 (182ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] whitelist-source-range should set valid ip whitelist range" classname="nginx-ingress-controller e2e suite" status="passed" time="22.072991153">
              <system-err>&gt; Enter [BeforeEach] [Annotations] whitelist-source-range - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:59:17.035&#xA;&lt; Exit [BeforeEach] [Annotations] whitelist-source-range - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:59:24.851 (7.817s)&#xA;&gt; Enter [BeforeEach] [Annotations] whitelist-source-range - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/ipwhitelist.go:30 @ 03/16/23 06:59:24.851&#xA;&lt; Exit [BeforeEach] [Annotations] whitelist-source-range - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/ipwhitelist.go:30 @ 03/16/23 06:59:28.871 (4.02s)&#xA;&gt; Enter [It] should set valid ip whitelist range - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/ipwhitelist.go:34 @ 03/16/23 06:59:28.871&#xA;&lt; Exit [It] should set valid ip whitelist range - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/ipwhitelist.go:34 @ 03/16/23 06:59:38.966 (10.095s)&#xA;&gt; Enter [AfterEach] [Annotations] whitelist-source-range - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:59:38.966&#xA;&lt; Exit [AfterEach] [Annotations] whitelist-source-range - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:59:39.108 (142ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Service] Nil Service Backend should return 404 when backend service is nil" classname="nginx-ingress-controller e2e suite" status="passed" time="28.090054157">
              <system-err>&gt; Enter [BeforeEach] [Service] Nil Service Backend - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:59:39.108&#xA;&lt; Exit [BeforeEach] [Service] Nil Service Backend - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:59:45.93 (6.822s)&#xA;&gt; Enter [BeforeEach] [Service] Nil Service Backend - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_nil_backend.go:34 @ 03/16/23 06:59:45.93&#xA;&lt; Exit [BeforeEach] [Service] Nil Service Backend - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_nil_backend.go:34 @ 03/16/23 06:59:49.948 (4.018s)&#xA;&gt; Enter [It] should return 404 when backend service is nil - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_nil_backend.go:38 @ 03/16/23 06:59:49.948&#xA;STEP: setting an ingress with a nil backend - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_nil_backend.go:39 @ 03/16/23 06:59:49.948&#xA;&lt; Exit [It] should return 404 when backend service is nil - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_nil_backend.go:38 @ 03/16/23 07:00:07.041 (17.092s)&#xA;&gt; Enter [AfterEach] [Service] Nil Service Backend - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:00:07.041&#xA;&lt; Exit [AfterEach] [Service] Nil Service Backend - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:00:07.198 (157ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Configure OpenTracing should include opentracing_trust_incoming_span off directive when disabled" classname="nginx-ingress-controller e2e suite" status="passed" time="26.144804192">
              <system-err>&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:00:07.198&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:00:14.047 (6.849s)&#xA;&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 03/16/23 07:00:14.047&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 03/16/23 07:00:16.067 (2.019s)&#xA;&gt; Enter [It] should include opentracing_trust_incoming_span off directive when disabled - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:85 @ 03/16/23 07:00:16.067&#xA;&lt; Exit [It] should include opentracing_trust_incoming_span off directive when disabled - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:85 @ 03/16/23 07:00:33.188 (17.121s)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:00:33.188&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:00:33.343 (155ms)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 03/16/23 07:00:33.343&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 03/16/23 07:00:33.343 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* when external authentication is configured should overwrite Foo header with auth response" classname="nginx-ingress-controller e2e suite" status="passed" time="29.262110956">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:00:33.344&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:00:40.2 (6.856s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 07:00:40.2&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 07:00:44.224 (4.024s)&#xA;&gt; Enter [BeforeEach] when external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:458 @ 03/16/23 07:00:44.224&#xA;&lt; Exit [BeforeEach] when external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:458 @ 03/16/23 07:00:58.349 (14.125s)&#xA;&gt; Enter [It] should overwrite Foo header with auth response - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:529 @ 03/16/23 07:00:58.349&#xA;&lt; Exit [It] should overwrite Foo header with auth response - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:529 @ 03/16/23 07:01:02.455 (4.106s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:01:02.455&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:01:02.606 (151ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] enable-ssl-passthrough With enable-ssl-passthrough enabled should enable ssl-passthrough-proxy-port on a different port" classname="nginx-ingress-controller e2e suite" status="passed" time="29.188156832">
              <system-err>&gt; Enter [BeforeEach] [Flag] enable-ssl-passthrough - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:01:02.606&#xA;&lt; Exit [BeforeEach] [Flag] enable-ssl-passthrough - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:01:09.437 (6.831s)&#xA;&gt; Enter [BeforeEach] [Flag] enable-ssl-passthrough - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ssl_passthrough.go:39 @ 03/16/23 07:01:09.437&#xA;&lt; Exit [BeforeEach] [Flag] enable-ssl-passthrough - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ssl_passthrough.go:39 @ 03/16/23 07:01:20.533 (11.096s)&#xA;&gt; Enter [It] should enable ssl-passthrough-proxy-port on a different port - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ssl_passthrough.go:56 @ 03/16/23 07:01:20.533&#xA;&lt; Exit [It] should enable ssl-passthrough-proxy-port on a different port - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ssl_passthrough.go:56 @ 03/16/23 07:01:31.656 (11.123s)&#xA;&gt; Enter [AfterEach] [Flag] enable-ssl-passthrough - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:01:31.656&#xA;&lt; Exit [AfterEach] [Flag] enable-ssl-passthrough - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:01:31.794 (138ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] backend-protocol - GRPC should return OK for service with backend protocol GRPCS" classname="nginx-ingress-controller e2e suite" status="passed" time="23.104217238">
              <system-err>&gt; Enter [BeforeEach] [Annotations] backend-protocol - GRPC - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:01:31.795&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - GRPC - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:01:38.602 (6.807s)&#xA;&gt; Enter [It] should return OK for service with backend protocol GRPCS - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/grpc.go:199 @ 03/16/23 07:01:38.602&#xA;&lt; Exit [It] should return OK for service with backend protocol GRPCS - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/grpc.go:199 @ 03/16/23 07:01:54.754 (16.153s)&#xA;&gt; Enter [AfterEach] [Annotations] backend-protocol - GRPC - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:01:54.754&#xA;&lt; Exit [AfterEach] [Annotations] backend-protocol - GRPC - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:01:54.899 (144ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* should return status code 503 when authentication is configured with an invalid secret" classname="nginx-ingress-controller e2e suite" status="passed" time="21.137181191">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:01:54.899&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:02:01.717 (6.818s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 07:02:01.717&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 07:02:05.734 (4.017s)&#xA;&gt; Enter [It] should return status code 503 when authentication is configured with an invalid secret - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:65 @ 03/16/23 07:02:05.734&#xA;&lt; Exit [It] should return status code 503 when authentication is configured with an invalid secret - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:65 @ 03/16/23 07:02:15.872 (10.139s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:02:15.872&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:02:16.037 (164ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* should return status code 200 when authentication is configured with a map and Authorization header is sent" classname="nginx-ingress-controller e2e suite" status="passed" time="22.580846046">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:02:16.037&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:02:22.386 (6.349s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 07:02:22.386&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 07:02:26.404 (4.018s)&#xA;&gt; Enter [It] should return status code 200 when authentication is configured with a map and Authorization header is sent - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:199 @ 03/16/23 07:02:26.404&#xA;&lt; Exit [It] should return status code 200 when authentication is configured with a map and Authorization header is sent - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:199 @ 03/16/23 07:02:38.474 (12.07s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:02:38.474&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:02:38.618 (144ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [SSL] secret update should return the fake SSL certificate if the secret is invalid" classname="nginx-ingress-controller e2e suite" status="passed" time="26.258175556">
              <system-err>&gt; Enter [BeforeEach] [SSL] secret update - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:02:38.618&#xA;&lt; Exit [BeforeEach] [SSL] secret update - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:02:45.562 (6.944s)&#xA;&gt; Enter [BeforeEach] [SSL] secret update - /go/src/k8s.io/ingress-nginx/test/e2e/ssl/secret_update.go:36 @ 03/16/23 07:02:45.562&#xA;&lt; Exit [BeforeEach] [SSL] secret update - /go/src/k8s.io/ingress-nginx/test/e2e/ssl/secret_update.go:36 @ 03/16/23 07:02:51.579 (6.017s)&#xA;&gt; Enter [It] should return the fake SSL certificate if the secret is invalid - /go/src/k8s.io/ingress-nginx/test/e2e/ssl/secret_update.go:82 @ 03/16/23 07:02:51.579&#xA;&lt; Exit [It] should return the fake SSL certificate if the secret is invalid - /go/src/k8s.io/ingress-nginx/test/e2e/ssl/secret_update.go:82 @ 03/16/23 07:03:04.705 (13.126s)&#xA;&gt; Enter [AfterEach] [SSL] secret update - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:03:04.705&#xA;&lt; Exit [AfterEach] [SSL] secret update - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:03:04.877 (171ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] affinitymode Balanced affinity mode should balance" classname="nginx-ingress-controller e2e suite" status="passed" time="24.074134515">
              <system-err>&gt; Enter [BeforeEach] [Annotations] affinitymode - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:03:04.877&#xA;&lt; Exit [BeforeEach] [Annotations] affinitymode - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:03:12.684 (7.807s)&#xA;&gt; Enter [It] Balanced affinity mode should balance - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinitymode.go:34 @ 03/16/23 07:03:12.684&#xA;&lt; Exit [It] Balanced affinity mode should balance - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinitymode.go:34 @ 03/16/23 07:03:28.79 (16.106s)&#xA;&gt; Enter [AfterEach] [Annotations] affinitymode - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:03:28.79&#xA;&lt; Exit [AfterEach] [Annotations] affinitymode - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:03:28.951 (161ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] affinity session-cookie-name should set the path to /something on the generated cookie" classname="nginx-ingress-controller e2e suite" status="passed" time="25.145612018">
              <system-err>&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:03:28.952&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:03:37.8 (8.848s)&#xA;&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 03/16/23 07:03:37.8&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 03/16/23 07:03:43.82 (6.021s)&#xA;&gt; Enter [It] should set the path to /something on the generated cookie - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:99 @ 03/16/23 07:03:43.82&#xA;&lt; Exit [It] should set the path to /something on the generated cookie - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:99 @ 03/16/23 07:03:53.932 (10.112s)&#xA;&gt; Enter [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:03:53.932&#xA;&lt; Exit [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:03:54.097 (165ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Security] block-* should block CIDRs defined in the ConfigMap" classname="nginx-ingress-controller e2e suite" status="passed" time="28.126986955">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Security] block-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:03:54.098&#xA;&lt; Exit [BeforeEach] [Setting] [Security] block-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:04:00.904 (6.806s)&#xA;&gt; Enter [BeforeEach] [Setting] [Security] block-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_access_block.go:33 @ 03/16/23 07:04:00.904&#xA;&lt; Exit [BeforeEach] [Setting] [Security] block-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_access_block.go:33 @ 03/16/23 07:04:11.93 (11.027s)&#xA;&gt; Enter [It] should block CIDRs defined in the ConfigMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_access_block.go:38 @ 03/16/23 07:04:11.93&#xA;&lt; Exit [It] should block CIDRs defined in the ConfigMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_access_block.go:38 @ 03/16/23 07:04:22.028 (10.097s)&#xA;&gt; Enter [AfterEach] [Setting] [Security] block-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:04:22.028&#xA;&lt; Exit [AfterEach] [Setting] [Security] block-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:04:22.225 (197ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] rewrite-target use-regex enable-rewrite-log should use ~* location modifier if regex annotation is present" classname="nginx-ingress-controller e2e suite" status="passed" time="32.318116293">
              <system-err>&gt; Enter [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:04:22.225&#xA;&lt; Exit [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:04:30.159 (7.934s)&#xA;&gt; Enter [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:33 @ 03/16/23 07:04:30.159&#xA;&lt; Exit [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:33 @ 03/16/23 07:04:34.18 (4.021s)&#xA;&gt; Enter [It] should use ~* location modifier if regex annotation is present - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:111 @ 03/16/23 07:04:34.18&#xA;STEP: creating a regular ingress definition - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:114 @ 03/16/23 07:04:34.18&#xA;STEP: creating an ingress definition with the use-regex amd rewrite-target annotation - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:123 @ 03/16/23 07:04:44.277&#xA;STEP: ensuring &#39;/foo&#39; matches &#39;~* ^/foo&#39; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:137 @ 03/16/23 07:04:54.376&#xA;STEP: ensuring &#39;/foo/bar&#39; matches &#39;~* ^/foo.+&#39; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:147 @ 03/16/23 07:04:54.379&#xA;&lt; Exit [It] should use ~* location modifier if regex annotation is present - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:111 @ 03/16/23 07:04:54.381 (20.201s)&#xA;&gt; Enter [AfterEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:04:54.381&#xA;&lt; Exit [AfterEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:04:54.543 (163ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] modsecurity owasp should disable modsecurity using &#39;modsecurity off;&#39;" classname="nginx-ingress-controller e2e suite" status="passed" time="29.073196024">
              <system-err>&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:04:54.544&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:05:02.352 (7.808s)&#xA;&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 03/16/23 07:05:02.352&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 03/16/23 07:05:06.367 (4.015s)&#xA;&gt; Enter [It] should disable modsecurity using &#39;modsecurity off;&#39; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:132 @ 03/16/23 07:05:06.367&#xA;&lt; Exit [It] should disable modsecurity using &#39;modsecurity off;&#39; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:132 @ 03/16/23 07:05:23.485 (17.118s)&#xA;&gt; Enter [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:05:23.485&#xA;&lt; Exit [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:05:23.617 (132ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Configure OpenTracing should exists opentracing_location_operation_name directive when is configured" classname="nginx-ingress-controller e2e suite" status="passed" time="28.089462865">
              <system-err>&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:05:23.618&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:05:30.428 (6.811s)&#xA;&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 03/16/23 07:05:30.428&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 03/16/23 07:05:34.445 (4.017s)&#xA;&gt; Enter [It] should exists opentracing_location_operation_name directive when is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:145 @ 03/16/23 07:05:34.445&#xA;&lt; Exit [It] should exists opentracing_location_operation_name directive when is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:145 @ 03/16/23 07:05:51.553 (17.108s)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:05:51.553&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:05:51.707 (154ms)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 03/16/23 07:05:51.707&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 03/16/23 07:05:51.707 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* should return status code 401 and cors headers when authentication and cors is configured but Authorization header is not configured" classname="nginx-ingress-controller e2e suite" status="passed" time="22.130600189">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:05:51.707&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:05:58.549 (6.841s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 07:05:58.549&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 07:06:02.57 (4.021s)&#xA;&gt; Enter [It] should return status code 401 and cors headers when authentication and cors is configured but Authorization header is not configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:144 @ 03/16/23 07:06:02.57&#xA;&lt; Exit [It] should return status code 401 and cors headers when authentication and cors is configured but Authorization header is not configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:144 @ 03/16/23 07:06:13.699 (11.129s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:06:13.699&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:06:13.838 (139ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should allow origin for cors" classname="nginx-ingress-controller e2e suite" status="passed" time="18.016765753">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:06:13.838&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:06:20.646 (6.808s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 03/16/23 07:06:20.646&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 03/16/23 07:06:24.665 (4.019s)&#xA;&gt; Enter [It] should allow origin for cors - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:110 @ 03/16/23 07:06:24.665&#xA;&lt; Exit [It] should allow origin for cors - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:110 @ 03/16/23 07:06:31.68 (7.015s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:06:31.68&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:06:31.855 (175ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-tls-* should pass URL-encoded certificate to upstream" classname="nginx-ingress-controller e2e suite" status="passed" time="24.585061116">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:06:31.856&#xA;&lt; Exit [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:06:38.688 (6.832s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:32 @ 03/16/23 07:06:38.688&#xA;&lt; Exit [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:32 @ 03/16/23 07:06:42.711 (4.023s)&#xA;&gt; Enter [It] should pass URL-encoded certificate to upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:161 @ 03/16/23 07:06:42.711&#xA;&lt; Exit [It] should pass URL-encoded certificate to upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:161 @ 03/16/23 07:06:56.302 (13.591s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:06:56.302&#xA;&lt; Exit [AfterEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:06:56.441 (139ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] ssl-ciphers should change ssl ciphers" classname="nginx-ingress-controller e2e suite" status="passed" time="23.191774355">
              <system-err>&gt; Enter [BeforeEach] [Annotations] ssl-ciphers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:06:56.441&#xA;&lt; Exit [BeforeEach] [Annotations] ssl-ciphers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:07:03.242 (6.801s)&#xA;&gt; Enter [BeforeEach] [Annotations] ssl-ciphers - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/sslciphers.go:31 @ 03/16/23 07:07:03.242&#xA;&lt; Exit [BeforeEach] [Annotations] ssl-ciphers - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/sslciphers.go:31 @ 03/16/23 07:07:09.26 (6.018s)&#xA;&gt; Enter [It] should change ssl ciphers - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/sslciphers.go:35 @ 03/16/23 07:07:09.26&#xA;&lt; Exit [It] should change ssl ciphers - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/sslciphers.go:35 @ 03/16/23 07:07:19.39 (10.13s)&#xA;&gt; Enter [AfterEach] [Annotations] ssl-ciphers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:07:19.39&#xA;&lt; Exit [AfterEach] [Annotations] ssl-ciphers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:07:19.633 (243ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [SSL] TLS protocols, ciphers and headers) should configure HSTS policy header overriding what&#39;s set from the upstream" classname="nginx-ingress-controller e2e suite" status="passed" time="29.319252739">
              <system-err>&gt; Enter [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:07:19.633&#xA;&lt; Exit [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:07:28.554 (8.921s)&#xA;&gt; Enter [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:35 @ 03/16/23 07:07:28.554&#xA;&lt; Exit [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:35 @ 03/16/23 07:07:32.57 (4.016s)&#xA;&gt; Enter [BeforeEach] should configure HSTS policy header - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:100 @ 03/16/23 07:07:32.57&#xA;&lt; Exit [BeforeEach] should configure HSTS policy header - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:100 @ 03/16/23 07:07:41.693 (9.123s)&#xA;&gt; Enter [It] overriding what&#39;s set from the upstream - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:166 @ 03/16/23 07:07:41.693&#xA;&lt; Exit [It] overriding what&#39;s set from the upstream - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:166 @ 03/16/23 07:07:48.823 (7.13s)&#xA;&gt; Enter [AfterEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:07:48.823&#xA;&lt; Exit [AfterEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:07:48.953 (129ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should allow - matching origin with wildcard origin (2 subdomains)" classname="nginx-ingress-controller e2e suite" status="passed" time="18.023631548">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:07:48.953&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:07:55.784 (6.831s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 03/16/23 07:07:55.784&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 03/16/23 07:07:59.805 (4.021s)&#xA;&gt; Enter [It] should allow - matching origin with wildcard origin (2 subdomains) - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:425 @ 03/16/23 07:07:59.805&#xA;&lt; Exit [It] should allow - matching origin with wildcard origin (2 subdomains) - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:425 @ 03/16/23 07:08:06.821 (7.017s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:08:06.821&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:08:06.977 (156ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] custom HTTP and HTTPS ports with a plain HTTP ingress should set X-Forwarded-Port headers accordingly when listening on a non-default HTTP port" classname="nginx-ingress-controller e2e suite" status="passed" time="31.263121113">
              <system-err>&gt; Enter [BeforeEach] [Flag] custom HTTP and HTTPS ports - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:08:06.977&#xA;&lt; Exit [BeforeEach] [Flag] custom HTTP and HTTPS ports - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:08:20.846 (13.868s)&#xA;&gt; Enter [BeforeEach] [Flag] custom HTTP and HTTPS ports - /go/src/k8s.io/ingress-nginx/test/e2e/settings/listen_nondefault_ports.go:38 @ 03/16/23 07:08:20.846&#xA;&lt; Exit [BeforeEach] [Flag] custom HTTP and HTTPS ports - /go/src/k8s.io/ingress-nginx/test/e2e/settings/listen_nondefault_ports.go:38 @ 03/16/23 07:08:27.969 (7.124s)&#xA;&gt; Enter [It] should set X-Forwarded-Port headers accordingly when listening on a non-default HTTP port - /go/src/k8s.io/ingress-nginx/test/e2e/settings/listen_nondefault_ports.go:48 @ 03/16/23 07:08:27.969&#xA;&lt; Exit [It] should set X-Forwarded-Port headers accordingly when listening on a non-default HTTP port - /go/src/k8s.io/ingress-nginx/test/e2e/settings/listen_nondefault_ports.go:48 @ 03/16/23 07:08:38.088 (10.119s)&#xA;&gt; Enter [AfterEach] [Flag] custom HTTP and HTTPS ports - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:08:38.088&#xA;&lt; Exit [AfterEach] [Flag] custom HTTP and HTTPS ports - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:08:38.24 (152ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Service] Type ExternalName should sync ingress on external name service addition/deletion" classname="nginx-ingress-controller e2e suite" status="passed" time="28.907338637">
              <system-err>&gt; Enter [BeforeEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:08:38.241&#xA;&lt; Exit [BeforeEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:08:46.103 (7.863s)&#xA;&gt; Enter [It] should sync ingress on external name service addition/deletion - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_externalname.go:311 @ 03/16/23 07:08:46.103&#xA;&lt; Exit [It] should sync ingress on external name service addition/deletion - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_externalname.go:311 @ 03/16/23 07:09:07.024 (20.921s)&#xA;&gt; Enter [AfterEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:09:07.024&#xA;&lt; Exit [AfterEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:09:07.148 (124ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] access-log http-access-log-path use the specified configuration" classname="nginx-ingress-controller e2e suite" status="passed" time="19.116136167">
              <system-err>&gt; Enter [BeforeEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:37:32.332&#xA;&lt; Exit [BeforeEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:37:41.168 (8.836s)&#xA;&gt; Enter [It] use the specified configuration - /go/src/k8s.io/ingress-nginx/test/e2e/settings/access_log.go:54 @ 03/16/23 06:37:41.168&#xA;&lt; Exit [It] use the specified configuration - /go/src/k8s.io/ingress-nginx/test/e2e/settings/access_log.go:54 @ 03/16/23 06:37:51.308 (10.14s)&#xA;&gt; Enter [AfterEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:37:51.308&#xA;&lt; Exit [AfterEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:37:51.448 (140ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] upstream-vhost set host to upstreamvhost.bar.com" classname="nginx-ingress-controller e2e suite" status="passed" time="59.137609746">
              <system-err>&gt; Enter [BeforeEach] [Annotations] upstream-vhost - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:37:51.448&#xA;&lt; Exit [BeforeEach] [Annotations] upstream-vhost - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:37:58.305 (6.857s)&#xA;&gt; Enter [BeforeEach] [Annotations] upstream-vhost - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/upstreamvhost.go:30 @ 03/16/23 06:37:58.305&#xA;&lt; Exit [BeforeEach] [Annotations] upstream-vhost - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/upstreamvhost.go:30 @ 03/16/23 06:38:40.348 (42.043s)&#xA;&gt; Enter [It] set host to upstreamvhost.bar.com - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/upstreamvhost.go:34 @ 03/16/23 06:38:40.348&#xA;&lt; Exit [It] set host to upstreamvhost.bar.com - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/upstreamvhost.go:34 @ 03/16/23 06:38:50.459 (10.111s)&#xA;&gt; Enter [AfterEach] [Annotations] upstream-vhost - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:38:50.459&#xA;&lt; Exit [AfterEach] [Annotations] upstream-vhost - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:38:50.586 (127ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [SSL] TLS protocols, ciphers and headers) ports or X-Forwarded-Host check during HTTP tp HTTPS redirection should not use ports or X-Forwarded-Host during the HTTP to HTTPS redirection" classname="nginx-ingress-controller e2e suite" status="passed" time="29.192676693">
              <system-err>&gt; Enter [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:38:50.586&#xA;&lt; Exit [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:38:57.404 (6.818s)&#xA;&gt; Enter [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:35 @ 03/16/23 06:38:57.404&#xA;&lt; Exit [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:35 @ 03/16/23 06:39:01.424 (4.02s)&#xA;&gt; Enter [It] should not use ports or X-Forwarded-Host during the HTTP to HTTPS redirection - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:205 @ 03/16/23 06:39:01.424&#xA;Mar 16 06:39:17.620: INFO: Unexpected TLS error: tls: failed to verify certificate: x509: certificate is valid for ingress.local, not settings-tls&#xA;&lt; Exit [It] should not use ports or X-Forwarded-Host during the HTTP to HTTPS redirection - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:205 @ 03/16/23 06:39:19.622 (18.198s)&#xA;&gt; Enter [AfterEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:39:19.622&#xA;&lt; Exit [AfterEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:39:19.779 (157ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] upstream-hash-by-* should connect to the same pod" classname="nginx-ingress-controller e2e suite" status="passed" time="41.39204292">
              <system-err>&gt; Enter [BeforeEach] [Annotations] upstream-hash-by-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:39:19.779&#xA;&lt; Exit [BeforeEach] [Annotations] upstream-hash-by-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:39:26.58 (6.8s)&#xA;&gt; Enter [BeforeEach] [Annotations] upstream-hash-by-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/upstreamhashby.go:79 @ 03/16/23 06:39:26.58&#xA;&lt; Exit [BeforeEach] [Annotations] upstream-hash-by-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/upstreamhashby.go:79 @ 03/16/23 06:39:30.607 (4.028s)&#xA;&gt; Enter [It] should connect to the same pod - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/upstreamhashby.go:83 @ 03/16/23 06:39:30.607&#xA;&lt; Exit [It] should connect to the same pod - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/upstreamhashby.go:83 @ 03/16/23 06:40:00.972 (30.364s)&#xA;&gt; Enter [AfterEach] [Annotations] upstream-hash-by-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:40:00.972&#xA;&lt; Exit [AfterEach] [Annotations] upstream-hash-by-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:40:01.171 (200ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] custom HTTP and HTTPS ports with a TLS enabled ingress should set X-Forwarded-Port header to 443" classname="nginx-ingress-controller e2e suite" status="passed" time="35.321628908">
              <system-err>&gt; Enter [BeforeEach] [Flag] custom HTTP and HTTPS ports - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:40:01.172&#xA;&lt; Exit [BeforeEach] [Flag] custom HTTP and HTTPS ports - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:40:15.02 (13.848s)&#xA;&gt; Enter [BeforeEach] [Flag] custom HTTP and HTTPS ports - /go/src/k8s.io/ingress-nginx/test/e2e/settings/listen_nondefault_ports.go:38 @ 03/16/23 06:40:15.02&#xA;&lt; Exit [BeforeEach] [Flag] custom HTTP and HTTPS ports - /go/src/k8s.io/ingress-nginx/test/e2e/settings/listen_nondefault_ports.go:38 @ 03/16/23 06:40:22.143 (7.123s)&#xA;&gt; Enter [It] should set X-Forwarded-Port header to 443 - /go/src/k8s.io/ingress-nginx/test/e2e/settings/listen_nondefault_ports.go:70 @ 03/16/23 06:40:22.143&#xA;Mar 16 06:40:31.250: INFO: Unexpected TLS error: tls: failed to verify certificate: x509: certificate is valid for ingress.local, not forwarded-headers&#xA;&lt; Exit [It] should set X-Forwarded-Port header to 443 - /go/src/k8s.io/ingress-nginx/test/e2e/settings/listen_nondefault_ports.go:70 @ 03/16/23 06:40:36.358 (14.214s)&#xA;&gt; Enter [AfterEach] [Flag] custom HTTP and HTTPS ports - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:40:36.358&#xA;&lt; Exit [AfterEach] [Flag] custom HTTP and HTTPS ports - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:40:36.494 (136ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [SSL] TLS protocols, ciphers and headers) should configure HSTS policy header setting includeSubDomains parameter" classname="nginx-ingress-controller e2e suite" status="passed" time="32.3116281">
              <system-err>&gt; Enter [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:40:36.494&#xA;&lt; Exit [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:40:43.32 (6.826s)&#xA;&gt; Enter [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:35 @ 03/16/23 06:40:43.32&#xA;&lt; Exit [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:35 @ 03/16/23 06:40:47.339 (4.019s)&#xA;&gt; Enter [BeforeEach] should configure HSTS policy header - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:100 @ 03/16/23 06:40:47.339&#xA;Mar 16 06:40:56.522: INFO: Unexpected TLS error: tls: failed to verify certificate: x509: certificate is valid for ingress.local, not settings-tls&#xA;&lt; Exit [BeforeEach] should configure HSTS policy header - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:100 @ 03/16/23 06:40:58.522 (11.184s)&#xA;&gt; Enter [It] setting includeSubDomains parameter - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:127 @ 03/16/23 06:40:58.522&#xA;&lt; Exit [It] setting includeSubDomains parameter - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:127 @ 03/16/23 06:41:08.643 (10.121s)&#xA;&gt; Enter [AfterEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:41:08.643&#xA;&lt; Exit [AfterEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:41:08.806 (163ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* cookie set by external authentication server user retains cookie by default" classname="nginx-ingress-controller e2e suite" status="passed" time="40.222469154">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:41:08.806&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:41:15.721 (6.915s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 06:41:15.721&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 06:41:21.751 (6.029s)&#xA;&gt; Enter [BeforeEach] cookie set by external authentication server - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:383 @ 03/16/23 06:41:21.751&#xA;&lt; Exit [BeforeEach] cookie set by external authentication server - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:383 @ 03/16/23 06:41:48.885 (27.135s)&#xA;&gt; Enter [It] user retains cookie by default - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:411 @ 03/16/23 06:41:48.885&#xA;&lt; Exit [It] user retains cookie by default - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:411 @ 03/16/23 06:41:48.888 (3ms)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:41:48.888&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:41:49.029 (140ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] stream-snippet should add value of stream-snippet to nginx config" classname="nginx-ingress-controller e2e suite" status="passed" time="26.216807841">
              <system-err>&gt; Enter [BeforeEach] [Setting] stream-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:41:49.029&#xA;&lt; Exit [BeforeEach] [Setting] stream-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:41:55.909 (6.88s)&#xA;&gt; Enter [BeforeEach] [Setting] stream-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/streamsnippet.go:37 @ 03/16/23 06:41:55.909&#xA;&lt; Exit [BeforeEach] [Setting] stream-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/streamsnippet.go:37 @ 03/16/23 06:41:59.924 (4.015s)&#xA;&gt; Enter [It] should add value of stream-snippet to nginx config - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/streamsnippet.go:41 @ 03/16/23 06:41:59.924&#xA;&lt; Exit [It] should add value of stream-snippet to nginx config - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/streamsnippet.go:41 @ 03/16/23 06:42:15.047 (15.123s)&#xA;&gt; Enter [AfterEach] [Setting] stream-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:42:15.047&#xA;&lt; Exit [AfterEach] [Setting] stream-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:42:15.246 (199ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] server-snippet add valid directives to server via server snippet" classname="nginx-ingress-controller e2e suite" status="passed" time="20.185373285">
              <system-err>&gt; Enter [BeforeEach] [Annotations] server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:42:15.246&#xA;&lt; Exit [BeforeEach] [Annotations] server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:42:23.122 (7.875s)&#xA;&gt; Enter [BeforeEach] [Annotations] server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serversnippet.go:31 @ 03/16/23 06:42:23.122&#xA;&lt; Exit [BeforeEach] [Annotations] server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serversnippet.go:31 @ 03/16/23 06:42:25.174 (2.053s)&#xA;&gt; Enter [It] add valid directives to server via server snippet - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serversnippet.go:35 @ 03/16/23 06:42:25.174&#xA;&lt; Exit [It] add valid directives to server via server snippet - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serversnippet.go:35 @ 03/16/23 06:42:35.291 (10.117s)&#xA;&gt; Enter [AfterEach] [Annotations] server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:42:35.291&#xA;&lt; Exit [AfterEach] [Annotations] server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:42:35.432 (140ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] disable-sync-events should create sync events (default)" classname="nginx-ingress-controller e2e suite" status="passed" time="22.190965608">
              <system-err>&gt; Enter [BeforeEach] [Flag] disable-sync-events - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:42:35.432&#xA;&lt; Exit [BeforeEach] [Flag] disable-sync-events - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:42:43.375 (7.943s)&#xA;&gt; Enter [It] should create sync events (default) - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_sync_events.go:35 @ 03/16/23 06:42:43.375&#xA;&lt; Exit [It] should create sync events (default) - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_sync_events.go:35 @ 03/16/23 06:42:57.478 (14.103s)&#xA;&gt; Enter [AfterEach] [Flag] disable-sync-events - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:42:57.478&#xA;&lt; Exit [AfterEach] [Flag] disable-sync-events - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:42:57.623 (145ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] proxy-* should set proxy_redirect to hello.com goodbye.com" classname="nginx-ingress-controller e2e suite" status="passed" time="21.196631723">
              <system-err>&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:42:57.623&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:43:04.494 (6.871s)&#xA;&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 03/16/23 06:43:04.494&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 03/16/23 06:43:08.536 (4.042s)&#xA;&gt; Enter [It] should set proxy_redirect to hello.com goodbye.com - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:68 @ 03/16/23 06:43:08.536&#xA;&lt; Exit [It] should set proxy_redirect to hello.com goodbye.com - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:68 @ 03/16/23 06:43:18.653 (10.117s)&#xA;&gt; Enter [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:43:18.653&#xA;&lt; Exit [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:43:18.82 (167ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] use-proxy-protocol should enable PROXY Protocol for TCP" classname="nginx-ingress-controller e2e suite" status="passed" time="633.099957447">
              <system-err>&gt; Enter [BeforeEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:43:18.82&#xA;&lt; Exit [BeforeEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:43:25.693 (6.873s)&#xA;&gt; Enter [BeforeEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_protocol.go:41 @ 03/16/23 06:43:25.693&#xA;&lt; Exit [BeforeEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_protocol.go:41 @ 03/16/23 06:43:36.726 (11.033s)&#xA;&gt; Enter [It] should enable PROXY Protocol for TCP - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_protocol.go:155 @ 03/16/23 06:43:36.726&#xA;Automatically polling progress:&#xA;  [Setting] use-proxy-protocol should enable PROXY Protocol for TCP (Spec Runtime: 3m17.907s)&#xA;    /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_protocol.go:155&#xA;    In [It] (Node Runtime: 3m0.001s)&#xA;      /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_protocol.go:155&#xA;&#xA;    Spec Goroutine&#xA;    goroutine 1162 [IO wait, 2 minutes]&#xA;      internal/poll.runtime_pollWait(0x7fc3c6adbc60, 0x72)&#xA;        /usr/local/go/src/runtime/netpoll.go:306&#xA;      internal/poll.(*pollDesc).wait(0xc000848880?, 0xc00089b026?, 0x0)&#xA;        /usr/local/go/src/internal/poll/fd_poll_runtime.go:84&#xA;      internal/poll.(*pollDesc).waitRead(...)&#xA;        /usr/local/go/src/internal/poll/fd_poll_runtime.go:89&#xA;      internal/poll.(*FD).Read(0xc000848880, {0xc00089b026, 0x15a, 0x15a})&#xA;        /usr/local/go/src/internal/poll/fd_unix.go:167&#xA;      net.(*netFD).Read(0xc000848880, {0xc00089b026?, 0x453656?, 0x380?})&#xA;        /usr/local/go/src/net/fd_posix.go:55&#xA;      net.(*conn).Read(0xc00049ed68, {0xc00089b026?, 0x19903a0?, 0xc00089ae00?})&#xA;        /usr/local/go/src/net/net.go:183&#xA;      io.ReadAll({0x1f61620, 0xc00049ed68})&#xA;        /usr/local/go/src/io/io.go:701&#xA;    &gt; k8s.io/ingress-nginx/test/e2e/settings.glob..func37.5()&#xA;        /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_protocol.go:211&#xA;      github.com/onsi/ginkgo/v2/internal.extractBodyFunction.func3({0xa0558e, 0xc000a18a80})&#xA;        /go/src/k8s.io/ingress-nginx/.modcache/github.com/onsi/ginkgo/v2@v2.9.0/internal/node.go:463&#xA;      github.com/onsi/ginkgo/v2/internal.(*Suite).runNode.func3()&#xA;        /go/src/k8s.io/ingress-nginx/.modcache/github.com/onsi/ginkgo/v2@v2.9.0/internal/suite.go:863&#xA;      github.com/onsi/ginkgo/v2/internal.(*Suite).runNode&#xA;        /go/src/k8s.io/ingress-nginx/.modcache/github.com/onsi/ginkgo/v2@v2.9.0/internal/suite.go:850&#xA;&lt; Exit [It] should enable PROXY Protocol for TCP - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_protocol.go:155 @ 03/16/23 06:53:51.77 (10m15.044s)&#xA;&gt; Enter [AfterEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:53:51.77&#xA;&lt; Exit [AfterEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:53:51.92 (150ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] influxdb-* when influxdb is enabled should send the request metric to the influxdb server" classname="nginx-ingress-controller e2e suite" status="passed" time="61.312994062">
              <system-err>&gt; Enter [BeforeEach] [Annotations] influxdb-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:53:51.921&#xA;&lt; Exit [BeforeEach] [Annotations] influxdb-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:53:58.778 (6.858s)&#xA;&gt; Enter [BeforeEach] [Annotations] influxdb-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/influxdb.go:42 @ 03/16/23 06:53:58.778&#xA;&lt; Exit [BeforeEach] [Annotations] influxdb-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/influxdb.go:42 @ 03/16/23 06:54:31.813 (33.035s)&#xA;&gt; Enter [It] should send the request metric to the influxdb server - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/influxdb.go:48 @ 03/16/23 06:54:31.813&#xA;&lt; Exit [It] should send the request metric to the influxdb server - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/influxdb.go:48 @ 03/16/23 06:54:53.038 (21.225s)&#xA;&gt; Enter [AfterEach] [Annotations] influxdb-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:54:53.038&#xA;&lt; Exit [AfterEach] [Annotations] influxdb-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:54:53.234 (196ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [TCP] tcp-services should expose a TCP service" classname="nginx-ingress-controller e2e suite" status="passed" time="17.168819835">
              <system-err>&gt; Enter [BeforeEach] [TCP] tcp-services - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:54:53.234&#xA;&lt; Exit [BeforeEach] [TCP] tcp-services - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:55:01.101 (7.867s)&#xA;&gt; Enter [BeforeEach] [TCP] tcp-services - /go/src/k8s.io/ingress-nginx/test/e2e/tcpudp/tcp.go:42 @ 03/16/23 06:55:01.101&#xA;&lt; Exit [BeforeEach] [TCP] tcp-services - /go/src/k8s.io/ingress-nginx/test/e2e/tcpudp/tcp.go:42 @ 03/16/23 06:55:01.103 (2ms)&#xA;&gt; Enter [It] should expose a TCP service - /go/src/k8s.io/ingress-nginx/test/e2e/tcpudp/tcp.go:46 @ 03/16/23 06:55:01.103&#xA;&lt; Exit [It] should expose a TCP service - /go/src/k8s.io/ingress-nginx/test/e2e/tcpudp/tcp.go:46 @ 03/16/23 06:55:10.235 (9.132s)&#xA;&gt; Enter [AfterEach] [TCP] tcp-services - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:55:10.235&#xA;&lt; Exit [AfterEach] [TCP] tcp-services - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:55:10.403 (168ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Dynamic $proxy_host should exist a proxy_host" classname="nginx-ingress-controller e2e suite" status="passed" time="21.082509965">
              <system-err>&gt; Enter [BeforeEach] Dynamic $proxy_host - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:55:10.403&#xA;&lt; Exit [BeforeEach] Dynamic $proxy_host - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:55:17.213 (6.81s)&#xA;&gt; Enter [BeforeEach] Dynamic $proxy_host - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_host.go:32 @ 03/16/23 06:55:17.213&#xA;&lt; Exit [BeforeEach] Dynamic $proxy_host - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_host.go:32 @ 03/16/23 06:55:21.237 (4.024s)&#xA;&gt; Enter [It] should exist a proxy_host - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_host.go:36 @ 03/16/23 06:55:21.237&#xA;&lt; Exit [It] should exist a proxy_host - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_host.go:36 @ 03/16/23 06:55:31.347 (10.109s)&#xA;&gt; Enter [AfterEach] Dynamic $proxy_host - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:55:31.347&#xA;&lt; Exit [AfterEach] Dynamic $proxy_host - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:55:31.486 (139ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] denylist-source-range only allow explicitly allowed IPs, deny all others" classname="nginx-ingress-controller e2e suite" status="passed" time="35.17419915">
              <system-err>&gt; Enter [BeforeEach] [Annotations] denylist-source-range - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:55:31.486&#xA;&lt; Exit [BeforeEach] [Annotations] denylist-source-range - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:55:38.344 (6.858s)&#xA;&gt; Enter [BeforeEach] [Annotations] denylist-source-range - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/ipdenylist.go:31 @ 03/16/23 06:55:38.344&#xA;&lt; Exit [BeforeEach] [Annotations] denylist-source-range - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/ipdenylist.go:31 @ 03/16/23 06:55:42.377 (4.032s)&#xA;&gt; Enter [It] only allow explicitly allowed IPs, deny all others - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/ipdenylist.go:86 @ 03/16/23 06:55:42.377&#xA;STEP: sending request from an explicitly denied IP range - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/ipdenylist.go:115 @ 03/16/23 06:55:59.473&#xA;STEP: sending request from an implicitly denied IP - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/ipdenylist.go:123 @ 03/16/23 06:55:59.475&#xA;STEP: sending request from an explicitly allowed IP range - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/ipdenylist.go:131 @ 03/16/23 06:55:59.477&#xA;STEP: sending request from an explicitly allowed IP range - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/ipdenylist.go:139 @ 03/16/23 06:55:59.478&#xA;&lt; Exit [It] only allow explicitly allowed IPs, deny all others - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/ipdenylist.go:86 @ 03/16/23 06:56:06.488 (24.111s)&#xA;&gt; Enter [AfterEach] [Annotations] denylist-source-range - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:56:06.488&#xA;&lt; Exit [AfterEach] [Annotations] denylist-source-range - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:56:06.66 (172ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] affinity session-cookie-name should warn user when use-regex is true and session-cookie-path is not set" classname="nginx-ingress-controller e2e suite" status="passed" time="24.105534943">
              <system-err>&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:56:06.661&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:56:13.466 (6.805s)&#xA;&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 03/16/23 06:56:13.466&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 03/16/23 06:56:17.487 (4.021s)&#xA;&gt; Enter [It] should warn user when use-regex is true and session-cookie-path is not set - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:294 @ 03/16/23 06:56:17.487&#xA;&lt; Exit [It] should warn user when use-regex is true and session-cookie-path is not set - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:294 @ 03/16/23 06:56:30.601 (13.114s)&#xA;&gt; Enter [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:56:30.601&#xA;&lt; Exit [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:56:30.766 (165ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] disable-sync-events should create sync events" classname="nginx-ingress-controller e2e suite" status="passed" time="30.150606859">
              <system-err>&gt; Enter [BeforeEach] [Flag] disable-sync-events - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:56:30.767&#xA;&lt; Exit [BeforeEach] [Flag] disable-sync-events - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:56:37.625 (6.858s)&#xA;&gt; Enter [It] should create sync events - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_sync_events.go:53 @ 03/16/23 06:56:37.625&#xA;&lt; Exit [It] should create sync events - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_sync_events.go:53 @ 03/16/23 06:57:00.771 (23.146s)&#xA;&gt; Enter [AfterEach] [Flag] disable-sync-events - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:57:00.771&#xA;&lt; Exit [AfterEach] [Flag] disable-sync-events - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:57:00.917 (147ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] access-log access-log-path use the specified configuration" classname="nginx-ingress-controller e2e suite" status="passed" time="18.065339522">
              <system-err>&gt; Enter [BeforeEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:57:00.918&#xA;&lt; Exit [BeforeEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:57:08.737 (7.819s)&#xA;&gt; Enter [It] use the specified configuration - /go/src/k8s.io/ingress-nginx/test/e2e/settings/access_log.go:42 @ 03/16/23 06:57:08.737&#xA;&lt; Exit [It] use the specified configuration - /go/src/k8s.io/ingress-nginx/test/e2e/settings/access_log.go:42 @ 03/16/23 06:57:18.842 (10.105s)&#xA;&gt; Enter [AfterEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:57:18.842&#xA;&lt; Exit [AfterEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:57:18.984 (142ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should enable cors" classname="nginx-ingress-controller e2e suite" status="passed" time="23.088674488">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:57:18.984&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:57:25.797 (6.813s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 03/16/23 06:57:25.797&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 03/16/23 06:57:31.818 (6.021s)&#xA;&gt; Enter [It] should enable cors - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:35 @ 03/16/23 06:57:31.818&#xA;&lt; Exit [It] should enable cors - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:35 @ 03/16/23 06:57:41.931 (10.113s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:57:41.931&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:57:42.073 (142ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] ingress-class Without IngressClass Cluster scoped Permission should watch Ingress with correct annotation" classname="nginx-ingress-controller e2e suite" status="passed" time="28.102226883">
              <system-err>&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:57:42.073&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:57:48.869 (6.796s)&#xA;&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 03/16/23 06:57:48.869&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 03/16/23 06:57:52.896 (4.028s)&#xA;&gt; Enter [BeforeEach] Without IngressClass Cluster scoped Permission - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:587 @ 03/16/23 06:57:52.896&#xA;&lt; Exit [BeforeEach] Without IngressClass Cluster scoped Permission - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:587 @ 03/16/23 06:57:59.918 (7.022s)&#xA;&gt; Enter [It] should watch Ingress with correct annotation - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:631 @ 03/16/23 06:57:59.918&#xA;&lt; Exit [It] should watch Ingress with correct annotation - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:631 @ 03/16/23 06:58:10.017 (10.099s)&#xA;&gt; Enter [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:58:10.017&#xA;&lt; Exit [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:58:10.175 (158ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Configure OpenTracing should propagate the w3c header when configured with jaeger" classname="nginx-ingress-controller e2e suite" status="passed" time="42.175731527">
              <system-err>&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:58:10.176&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:58:18.075 (7.899s)&#xA;&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 03/16/23 06:58:18.075&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 03/16/23 06:58:22.092 (4.017s)&#xA;&gt; Enter [It] should propagate the w3c header when configured with jaeger - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:197 @ 03/16/23 06:58:22.092&#xA;&lt; Exit [It] should propagate the w3c header when configured with jaeger - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:197 @ 03/16/23 06:58:52.193 (30.101s)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:58:52.193&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:58:52.351 (159ms)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 03/16/23 06:58:52.351&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 03/16/23 06:58:52.351 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Ingress] [PathType] prefix checks should return 404 when prefix /aaa does not match request /aaaccc" classname="nginx-ingress-controller e2e suite" status="passed" time="21.179664412">
              <system-err>&gt; Enter [BeforeEach] [Ingress] [PathType] prefix checks - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:58:52.352&#xA;&lt; Exit [BeforeEach] [Ingress] [PathType] prefix checks - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:58:59.247 (6.895s)&#xA;&gt; Enter [BeforeEach] [Ingress] [PathType] prefix checks - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/pathtype_prefix.go:31 @ 03/16/23 06:58:59.247&#xA;&lt; Exit [BeforeEach] [Ingress] [PathType] prefix checks - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/pathtype_prefix.go:31 @ 03/16/23 06:59:03.267 (4.02s)&#xA;&gt; Enter [It] should return 404 when prefix /aaa does not match request /aaaccc - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/pathtype_prefix.go:35 @ 03/16/23 06:59:03.267&#xA;&lt; Exit [It] should return 404 when prefix /aaa does not match request /aaaccc - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/pathtype_prefix.go:35 @ 03/16/23 06:59:13.372 (10.105s)&#xA;&gt; Enter [AfterEach] [Ingress] [PathType] prefix checks - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:59:13.372&#xA;&lt; Exit [AfterEach] [Ingress] [PathType] prefix checks - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:59:13.531 (159ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] disable-catch-all should ignore catch all Ingress with backend and rules" classname="nginx-ingress-controller e2e suite" status="passed" time="27.173308831">
              <system-err>&gt; Enter [BeforeEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:59:13.532&#xA;&lt; Exit [BeforeEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:59:20.396 (6.865s)&#xA;&gt; Enter [BeforeEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_catch_all.go:36 @ 03/16/23 06:59:20.396&#xA;&lt; Exit [BeforeEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_catch_all.go:36 @ 03/16/23 06:59:30.442 (10.046s)&#xA;&gt; Enter [It] should ignore catch all Ingress with backend and rules - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_catch_all.go:69 @ 03/16/23 06:59:30.442&#xA;&lt; Exit [It] should ignore catch all Ingress with backend and rules - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_catch_all.go:69 @ 03/16/23 06:59:40.549 (10.107s)&#xA;&gt; Enter [AfterEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:59:40.549&#xA;&lt; Exit [AfterEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:59:40.705 (155ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Security] global-auth-url when global external authentication is configured should add auth headers when global-auth-response-headers is configured" classname="nginx-ingress-controller e2e suite" status="passed" time="55.416544252">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:59:40.705&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:59:47.547 (6.842s)&#xA;&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 03/16/23 06:59:47.547&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 03/16/23 06:59:55.592 (8.045s)&#xA;&gt; Enter [BeforeEach] when global external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:58 @ 03/16/23 06:59:55.592&#xA;STEP: Adding an ingress rule for /foo - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:61 @ 03/16/23 06:59:55.592&#xA;STEP: Adding an ingress rule for /bar - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:69 @ 03/16/23 07:00:05.658&#xA;STEP: Adding a global-auth-url to configMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:77 @ 03/16/23 07:00:15.747&#xA;&lt; Exit [BeforeEach] when global external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:58 @ 03/16/23 07:00:25.843 (30.25s)&#xA;&gt; Enter [It] should add auth headers when global-auth-response-headers is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:223 @ 03/16/23 07:00:25.843&#xA;STEP: Adding a global-auth-response-headers to configMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:228 @ 03/16/23 07:00:25.843&#xA;&lt; Exit [It] should add auth headers when global-auth-response-headers is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:223 @ 03/16/23 07:00:35.967 (10.125s)&#xA;&gt; Enter [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:00:35.967&#xA;&lt; Exit [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:00:36.122 (154ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Load Balancer] EWMA does not fail requests" classname="nginx-ingress-controller e2e suite" status="passed" time="32.298182011">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Load Balancer] EWMA - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:00:36.122&#xA;&lt; Exit [BeforeEach] [Setting] [Load Balancer] EWMA - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:00:42.965 (6.843s)&#xA;&gt; Enter [BeforeEach] [Setting] [Load Balancer] EWMA - /go/src/k8s.io/ingress-nginx/test/e2e/loadbalance/ewma.go:34 @ 03/16/23 07:00:42.965&#xA;&lt; Exit [BeforeEach] [Setting] [Load Balancer] EWMA - /go/src/k8s.io/ingress-nginx/test/e2e/loadbalance/ewma.go:34 @ 03/16/23 07:00:54.001 (11.036s)&#xA;&gt; Enter [It] does not fail requests - /go/src/k8s.io/ingress-nginx/test/e2e/loadbalance/ewma.go:42 @ 03/16/23 07:00:54.001&#xA;Mar 16 07:01:08.220: INFO: Request distribution: map[echo-5f68dc79f7-2fngp:13 echo-5f68dc79f7-v2hbl:6 echo-5f68dc79f7-zxcm9:11]&#xA;&lt; Exit [It] does not fail requests - /go/src/k8s.io/ingress-nginx/test/e2e/loadbalance/ewma.go:42 @ 03/16/23 07:01:08.22 (14.219s)&#xA;&gt; Enter [AfterEach] [Setting] [Load Balancer] EWMA - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:01:08.22&#xA;&lt; Exit [AfterEach] [Setting] [Load Balancer] EWMA - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:01:08.42 (200ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log disable-http-access-log set access_log off" classname="nginx-ingress-controller e2e suite" status="passed" time="28.118275698">
              <system-err>&gt; Enter [BeforeEach] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:01:08.421&#xA;&lt; Exit [BeforeEach] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:01:15.227 (6.806s)&#xA;&gt; Enter [BeforeEach] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/disableaccesslog.go:31 @ 03/16/23 07:01:15.227&#xA;&lt; Exit [BeforeEach] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/disableaccesslog.go:31 @ 03/16/23 07:01:19.244 (4.018s)&#xA;&gt; Enter [It] disable-http-access-log set access_log off - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/disableaccesslog.go:53 @ 03/16/23 07:01:19.244&#xA;&lt; Exit [It] disable-http-access-log set access_log off - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/disableaccesslog.go:53 @ 03/16/23 07:01:36.373 (17.128s)&#xA;&gt; Enter [AfterEach] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:01:36.373&#xA;&lt; Exit [AfterEach] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:01:36.539 (166ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] disable-service-external-name should ignore services of external-name type" classname="nginx-ingress-controller e2e suite" status="passed" time="38.247615978">
              <system-err>&gt; Enter [BeforeEach] [Flag] disable-service-external-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:01:36.539&#xA;&lt; Exit [BeforeEach] [Flag] disable-service-external-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:01:43.425 (6.886s)&#xA;&gt; Enter [BeforeEach] [Flag] disable-service-external-name - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_service_external_name.go:38 @ 03/16/23 07:01:43.425&#xA;&lt; Exit [BeforeEach] [Flag] disable-service-external-name - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_service_external_name.go:38 @ 03/16/23 07:01:54.459 (11.034s)&#xA;&gt; Enter [It] should ignore services of external-name type - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_service_external_name.go:52 @ 03/16/23 07:01:54.459&#xA;&lt; Exit [It] should ignore services of external-name type - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_service_external_name.go:52 @ 03/16/23 07:02:14.653 (20.194s)&#xA;&gt; Enter [AfterEach] [Flag] disable-service-external-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:02:14.653&#xA;&lt; Exit [AfterEach] [Flag] disable-service-external-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:02:14.787 (134ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] keep-alive keep-alive-requests Check the upstream keep alive should set the request count to upstream server through one keep alive connection" classname="nginx-ingress-controller e2e suite" status="passed" time="29.086686927">
              <system-err>&gt; Enter [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:02:14.787&#xA;&lt; Exit [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:02:22.603 (7.815s)&#xA;&gt; Enter [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:33 @ 03/16/23 07:02:22.603&#xA;&lt; Exit [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:33 @ 03/16/23 07:02:33.632 (11.029s)&#xA;&gt; Enter [It] should set the request count to upstream server through one keep alive connection - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:86 @ 03/16/23 07:02:33.632&#xA;&lt; Exit [It] should set the request count to upstream server through one keep alive connection - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:86 @ 03/16/23 07:02:43.729 (10.097s)&#xA;&gt; Enter [AfterEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:02:43.729&#xA;&lt; Exit [AfterEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:02:43.874 (145ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [SSL] redirect to HTTPS should redirect from HTTP to HTTPS when secret is missing" classname="nginx-ingress-controller e2e suite" status="passed" time="25.455791838">
              <system-err>&gt; Enter [BeforeEach] [SSL] redirect to HTTPS - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:02:43.875&#xA;&lt; Exit [BeforeEach] [SSL] redirect to HTTPS - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:02:51.705 (7.831s)&#xA;&gt; Enter [BeforeEach] [SSL] redirect to HTTPS - /go/src/k8s.io/ingress-nginx/test/e2e/ssl/http_redirect.go:32 @ 03/16/23 07:02:51.705&#xA;&lt; Exit [BeforeEach] [SSL] redirect to HTTPS - /go/src/k8s.io/ingress-nginx/test/e2e/ssl/http_redirect.go:32 @ 03/16/23 07:02:55.721 (4.016s)&#xA;&gt; Enter [It] should redirect from HTTP to HTTPS when secret is missing - /go/src/k8s.io/ingress-nginx/test/e2e/ssl/http_redirect.go:36 @ 03/16/23 07:02:55.721&#xA;&lt; Exit [It] should redirect from HTTP to HTTPS when secret is missing - /go/src/k8s.io/ingress-nginx/test/e2e/ssl/http_redirect.go:36 @ 03/16/23 07:03:09.148 (13.427s)&#xA;&gt; Enter [AfterEach] [SSL] redirect to HTTPS - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:03:09.148&#xA;&lt; Exit [AfterEach] [SSL] redirect to HTTPS - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:03:09.331 (182ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Service] Type ExternalName should return 200 for service type=ExternalName using FQDN with trailing dot" classname="nginx-ingress-controller e2e suite" status="passed" time="17.809848189">
              <system-err>&gt; Enter [BeforeEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:03:09.332&#xA;&lt; Exit [BeforeEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:03:16.177 (6.845s)&#xA;&gt; Enter [It] should return 200 for service type=ExternalName using FQDN with trailing dot - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_externalname.go:217 @ 03/16/23 07:03:16.177&#xA;&lt; Exit [It] should return 200 for service type=ExternalName using FQDN with trailing dot - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_externalname.go:217 @ 03/16/23 07:03:26.996 (10.819s)&#xA;&gt; Enter [AfterEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:03:26.996&#xA;&lt; Exit [AfterEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:03:27.142 (146ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Security] global-auth-url cookie set by external authentication server user with global-auth-always-set-cookie key in configmap retains cookie if upstream returns error status code" classname="nginx-ingress-controller e2e suite" status="passed" time="52.259026687">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:03:27.143&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:03:33.975 (6.832s)&#xA;&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 03/16/23 07:03:33.975&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 03/16/23 07:03:44.029 (10.054s)&#xA;&gt; Enter [BeforeEach] cookie set by external authentication server - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:301 @ 03/16/23 07:03:44.029&#xA;&lt; Exit [BeforeEach] cookie set by external authentication server - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:301 @ 03/16/23 07:04:12.169 (28.141s)&#xA;&gt; Enter [It] user with global-auth-always-set-cookie key in configmap retains cookie if upstream returns error status code - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:348 @ 03/16/23 07:04:12.169&#xA;&lt; Exit [It] user with global-auth-always-set-cookie key in configmap retains cookie if upstream returns error status code - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:348 @ 03/16/23 07:04:19.204 (7.035s)&#xA;&gt; Enter [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:04:19.204&#xA;&lt; Exit [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:04:19.402 (198ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [SSL] [Flag] default-ssl-certificate uses default ssl certificate for catch-all ingress" classname="nginx-ingress-controller e2e suite" status="passed" time="33.305644951">
              <system-err>&gt; Enter [BeforeEach] [SSL] [Flag] default-ssl-certificate - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:04:19.404&#xA;&lt; Exit [BeforeEach] [SSL] [Flag] default-ssl-certificate - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:04:28.258 (8.854s)&#xA;&gt; Enter [BeforeEach] [SSL] [Flag] default-ssl-certificate - /go/src/k8s.io/ingress-nginx/test/e2e/settings/default_ssl_certificate.go:40 @ 03/16/23 07:04:28.258&#xA;&lt; Exit [BeforeEach] [SSL] [Flag] default-ssl-certificate - /go/src/k8s.io/ingress-nginx/test/e2e/settings/default_ssl_certificate.go:40 @ 03/16/23 07:04:40.359 (12.102s)&#xA;&gt; Enter [It] uses default ssl certificate for catch-all ingress - /go/src/k8s.io/ingress-nginx/test/e2e/settings/default_ssl_certificate.go:64 @ 03/16/23 07:04:40.359&#xA;STEP: making sure new ingress is deployed - /go/src/k8s.io/ingress-nginx/test/e2e/settings/default_ssl_certificate.go:68 @ 03/16/23 07:04:47.367&#xA;STEP: making sure new ingress is responding - /go/src/k8s.io/ingress-nginx/test/e2e/settings/default_ssl_certificate.go:74 @ 03/16/23 07:04:50.526&#xA;STEP: making sure the configured default ssl certificate is being used - /go/src/k8s.io/ingress-nginx/test/e2e/settings/default_ssl_certificate.go:76 @ 03/16/23 07:04:50.526&#xA;&lt; Exit [It] uses default ssl certificate for catch-all ingress - /go/src/k8s.io/ingress-nginx/test/e2e/settings/default_ssl_certificate.go:64 @ 03/16/23 07:04:52.534 (12.174s)&#xA;&gt; Enter [AfterEach] [SSL] [Flag] default-ssl-certificate - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:04:52.534&#xA;&lt; Exit [AfterEach] [SSL] [Flag] default-ssl-certificate - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:04:52.71 (176ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Lua] dynamic certificates given an ingress with TLS correctly configured supports requests with domain with trailing dot" classname="nginx-ingress-controller e2e suite" status="passed" time="36.190873674">
              <system-err>&gt; Enter [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:04:52.71&#xA;&lt; Exit [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:04:59.545 (6.835s)&#xA;&gt; Enter [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:41 @ 03/16/23 07:04:59.545&#xA;&lt; Exit [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:41 @ 03/16/23 07:05:03.568 (4.023s)&#xA;&gt; Enter [BeforeEach] given an ingress with TLS correctly configured - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:113 @ 03/16/23 07:05:03.568&#xA;STEP: configuring certificate_by_lua and skipping Nginx configuration of the new certificate - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:128 @ 03/16/23 07:05:20.627&#xA;STEP: serving the configured certificate on HTTPS endpoint - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:136 @ 03/16/23 07:05:28.713&#xA;&lt; Exit [BeforeEach] given an ingress with TLS correctly configured - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:113 @ 03/16/23 07:05:28.723 (25.155s)&#xA;&gt; Enter [It] supports requests with domain with trailing dot - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:145 @ 03/16/23 07:05:28.723&#xA;&lt; Exit [It] supports requests with domain with trailing dot - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:145 @ 03/16/23 07:05:28.731 (8ms)&#xA;&gt; Enter [AfterEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:05:28.731&#xA;&lt; Exit [AfterEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:05:28.901 (170ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* does not crash when canary ingress has multiple paths to the same non-matching backend" classname="nginx-ingress-controller e2e suite" status="passed" time="33.168310139">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:05:28.901&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:05:36.775 (7.874s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 03/16/23 07:05:36.775&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 03/16/23 07:05:44.811 (8.036s)&#xA;&gt; Enter [It] does not crash when canary ingress has multiple paths to the same non-matching backend - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:888 @ 03/16/23 07:05:44.811&#xA;&lt; Exit [It] does not crash when canary ingress has multiple paths to the same non-matching backend - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:888 @ 03/16/23 07:06:01.938 (17.127s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:06:01.938&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:06:02.07 (132ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] configmap server-snippet should add value of server-snippet setting to all ingress config" classname="nginx-ingress-controller e2e suite" status="passed" time="43.186800657">
              <system-err>&gt; Enter [BeforeEach] [Setting] configmap server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:06:02.07&#xA;&lt; Exit [BeforeEach] [Setting] configmap server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:06:08.885 (6.815s)&#xA;&gt; Enter [BeforeEach] [Setting] configmap server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/settings/server_snippet.go:31 @ 03/16/23 07:06:08.885&#xA;&lt; Exit [BeforeEach] [Setting] configmap server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/settings/server_snippet.go:31 @ 03/16/23 07:06:12.913 (4.028s)&#xA;&gt; Enter [It] should add value of server-snippet setting to all ingress config - /go/src/k8s.io/ingress-nginx/test/e2e/settings/server_snippet.go:35 @ 03/16/23 07:06:12.913&#xA;&lt; Exit [It] should add value of server-snippet setting to all ingress config - /go/src/k8s.io/ingress-nginx/test/e2e/settings/server_snippet.go:35 @ 03/16/23 07:06:45.113 (32.201s)&#xA;&gt; Enter [AfterEach] [Setting] configmap server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:06:45.113&#xA;&lt; Exit [AfterEach] [Setting] configmap server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:06:45.257 (143ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] proxy-* should build proxy next upstream" classname="nginx-ingress-controller e2e suite" status="passed" time="22.095582927">
              <system-err>&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:06:45.257&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:06:53.076 (7.819s)&#xA;&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 03/16/23 07:06:53.076&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 03/16/23 07:06:57.103 (4.027s)&#xA;&gt; Enter [It] should build proxy next upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:194 @ 03/16/23 07:06:57.103&#xA;&lt; Exit [It] should build proxy next upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:194 @ 03/16/23 07:07:07.2 (10.097s)&#xA;&gt; Enter [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:07:07.2&#xA;&lt; Exit [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:07:07.353 (152ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-tls-* should return 200 using auth-tls-match-cn with matching CN from client" classname="nginx-ingress-controller e2e suite" status="passed" time="22.533526136">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:07:07.353&#xA;&lt; Exit [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:07:15.165 (7.812s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:32 @ 03/16/23 07:07:15.165&#xA;&lt; Exit [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:32 @ 03/16/23 07:07:19.196 (4.03s)&#xA;&gt; Enter [It] should return 200 using auth-tls-match-cn with matching CN from client - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:295 @ 03/16/23 07:07:19.196&#xA;&lt; Exit [It] should return 200 using auth-tls-match-cn with matching CN from client - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:295 @ 03/16/23 07:07:29.743 (10.547s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:07:29.743&#xA;&lt; Exit [AfterEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:07:29.887 (143ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] disable-catch-all should ignore catch all Ingress with backend" classname="nginx-ingress-controller e2e suite" status="passed" time="39.336540713">
              <system-err>&gt; Enter [BeforeEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:07:29.887&#xA;&lt; Exit [BeforeEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:07:36.752 (6.865s)&#xA;&gt; Enter [BeforeEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_catch_all.go:36 @ 03/16/23 07:07:36.752&#xA;&lt; Exit [BeforeEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_catch_all.go:36 @ 03/16/23 07:07:48.788 (12.036s)&#xA;&gt; Enter [It] should ignore catch all Ingress with backend - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_catch_all.go:50 @ 03/16/23 07:07:48.788&#xA;&lt; Exit [It] should ignore catch all Ingress with backend - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_catch_all.go:50 @ 03/16/23 07:08:09.029 (20.241s)&#xA;&gt; Enter [AfterEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:08:09.029&#xA;&lt; Exit [AfterEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:08:09.224 (195ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] server-tokens should exists Server header in the response when is enabled" classname="nginx-ingress-controller e2e suite" status="passed" time="29.148670856">
              <system-err>&gt; Enter [BeforeEach] [Setting] server-tokens - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:08:09.224&#xA;&lt; Exit [BeforeEach] [Setting] server-tokens - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:08:17.07 (7.845s)&#xA;&gt; Enter [BeforeEach] [Setting] server-tokens - /go/src/k8s.io/ingress-nginx/test/e2e/settings/server_tokens.go:34 @ 03/16/23 07:08:17.07&#xA;&lt; Exit [BeforeEach] [Setting] server-tokens - /go/src/k8s.io/ingress-nginx/test/e2e/settings/server_tokens.go:34 @ 03/16/23 07:08:21.087 (4.018s)&#xA;&gt; Enter [It] should exists Server header in the response when is enabled - /go/src/k8s.io/ingress-nginx/test/e2e/settings/server_tokens.go:50 @ 03/16/23 07:08:21.087&#xA;&lt; Exit [It] should exists Server header in the response when is enabled - /go/src/k8s.io/ingress-nginx/test/e2e/settings/server_tokens.go:50 @ 03/16/23 07:08:38.2 (17.113s)&#xA;&gt; Enter [AfterEach] [Setting] server-tokens - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:08:38.2&#xA;&lt; Exit [AfterEach] [Setting] server-tokens - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:08:38.373 (173ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] ingress-class With specific ingress-class flags should ignore Ingress with no class and accept the correctly configured Ingresses" classname="nginx-ingress-controller e2e suite" status="passed" time="43.190494104">
              <system-err>&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:08:38.374&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:08:45.242 (6.868s)&#xA;&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 03/16/23 07:08:45.242&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 03/16/23 07:08:49.266 (4.024s)&#xA;&gt; Enter [BeforeEach] With specific ingress-class flags - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:392 @ 03/16/23 07:08:49.266&#xA;&lt; Exit [BeforeEach] With specific ingress-class flags - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:392 @ 03/16/23 07:08:57.285 (8.018s)&#xA;&gt; Enter [It] should ignore Ingress with no class and accept the correctly configured Ingresses - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:413 @ 03/16/23 07:08:57.285&#xA;&lt; Exit [It] should ignore Ingress with no class and accept the correctly configured Ingresses - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:413 @ 03/16/23 07:09:21.419 (24.134s)&#xA;&gt; Enter [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:09:21.419&#xA;&lt; Exit [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:09:21.564 (145ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* when external authentication with caching is configured should deny login for different location on same server" classname="nginx-ingress-controller e2e suite" status="passed" time="205.389115959">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:37:32.323&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:37:39.965 (7.642s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 06:37:39.965&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 06:38:33.987 (54.021s)&#xA;&gt; Enter [BeforeEach] when external authentication with caching is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:730 @ 03/16/23 06:38:33.987&#xA;STEP: Adding an ingress rule for /foo - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:754 @ 03/16/23 06:39:05.011&#xA;STEP: Adding an ingress rule for /bar - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:761 @ 03/16/23 06:39:15.095&#xA;STEP: Adding an ingress rule for /foo - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:754 @ 03/16/23 06:39:25.214&#xA;STEP: Adding an ingress rule for /bar - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:761 @ 03/16/23 06:39:35.304&#xA;&lt; Exit [BeforeEach] when external authentication with caching is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:730 @ 03/16/23 06:39:50.511 (1m16.524s)&#xA;&gt; Enter [It] should deny login for different location on same server - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:792 @ 03/16/23 06:39:50.511&#xA;STEP: receiving an internal server error without cache on location /bar - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:811 @ 03/16/23 06:39:57.525&#xA;&lt; Exit [It] should deny login for different location on same server - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:792 @ 03/16/23 06:40:57.527 (1m7.017s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:40:57.527&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:40:57.712 (185ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Configure OpenTracing should not exists opentracing_operation_name directive when is empty" classname="nginx-ingress-controller e2e suite" status="passed" time="28.200564628">
              <system-err>&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:40:57.713&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:41:04.577 (6.864s)&#xA;&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 03/16/23 06:41:04.577&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 03/16/23 06:41:08.599 (4.022s)&#xA;&gt; Enter [It] should not exists opentracing_operation_name directive when is empty - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:100 @ 03/16/23 06:41:08.599&#xA;&lt; Exit [It] should not exists opentracing_operation_name directive when is empty - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:100 @ 03/16/23 06:41:25.73 (17.131s)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:41:25.73&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:41:25.914 (183ms)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 03/16/23 06:41:25.914&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 03/16/23 06:41:25.914 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] nginx-configuration start nginx with default configuration" classname="nginx-ingress-controller e2e suite" status="passed" time="15.040803152">
              <system-err>&gt; Enter [BeforeEach] [Setting] nginx-configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:98 @ 03/16/23 06:41:25.914&#xA;&lt; Exit [BeforeEach] [Setting] nginx-configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:98 @ 03/16/23 06:41:27.918 (2.004s)&#xA;&gt; Enter [It] start nginx with default configuration - /go/src/k8s.io/ingress-nginx/test/e2e/nginx/nginx.go:102 @ 03/16/23 06:41:27.918&#xA;&lt; Exit [It] start nginx with default configuration - /go/src/k8s.io/ingress-nginx/test/e2e/nginx/nginx.go:102 @ 03/16/23 06:41:40.952 (13.035s)&#xA;&gt; Enter [AfterEach] [Setting] nginx-configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:99 @ 03/16/23 06:41:40.952&#xA;&lt; Exit [AfterEach] [Setting] nginx-configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:99 @ 03/16/23 06:41:40.955 (2ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] global-options should have worker_rlimit_nofile option" classname="nginx-ingress-controller e2e suite" status="passed" time="11.217848777">
              <system-err>&gt; Enter [BeforeEach] global-options - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:41:40.955&#xA;&lt; Exit [BeforeEach] global-options - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:41:48.796 (7.84s)&#xA;&gt; Enter [It] should have worker_rlimit_nofile option - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_options.go:31 @ 03/16/23 06:41:48.796&#xA;&lt; Exit [It] should have worker_rlimit_nofile option - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_options.go:31 @ 03/16/23 06:41:51.902 (3.106s)&#xA;&gt; Enter [AfterEach] global-options - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:41:51.902&#xA;&lt; Exit [AfterEach] global-options - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:41:52.173 (271ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Security] global-auth-url when global external authentication is configured should still return status code 200 after auth backend is deleted using cache" classname="nginx-ingress-controller e2e suite" status="passed" time="60.52486323">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:41:52.175&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:41:59.045 (6.87s)&#xA;&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 03/16/23 06:41:59.045&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 03/16/23 06:42:05.096 (6.051s)&#xA;&gt; Enter [BeforeEach] when global external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:58 @ 03/16/23 06:42:05.096&#xA;STEP: Adding an ingress rule for /foo - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:61 @ 03/16/23 06:42:05.096&#xA;STEP: Adding an ingress rule for /bar - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:69 @ 03/16/23 06:42:15.202&#xA;STEP: Adding a global-auth-url to configMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:77 @ 03/16/23 06:42:25.293&#xA;&lt; Exit [BeforeEach] when global external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:58 @ 03/16/23 06:42:35.376 (30.28s)&#xA;&gt; Enter [It] should still return status code 200 after auth backend is deleted using cache - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:155 @ 03/16/23 06:42:35.376&#xA;STEP: Adding a global-auth-cache-key to configMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:163 @ 03/16/23 06:42:35.376&#xA;&lt; Exit [It] should still return status code 200 after auth backend is deleted using cache - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:155 @ 03/16/23 06:42:52.481 (17.105s)&#xA;&gt; Enter [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:42:52.481&#xA;&lt; Exit [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:42:52.7 (219ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Security] global-auth-url cookie set by external authentication server user retains cookie by default" classname="nginx-ingress-controller e2e suite" status="passed" time="43.292719589">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:42:52.7&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:42:59.615 (6.915s)&#xA;&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 03/16/23 06:42:59.615&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 03/16/23 06:43:07.676 (8.061s)&#xA;&gt; Enter [BeforeEach] cookie set by external authentication server - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:301 @ 03/16/23 06:43:07.676&#xA;&lt; Exit [BeforeEach] cookie set by external authentication server - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:301 @ 03/16/23 06:43:35.825 (28.149s)&#xA;&gt; Enter [It] user retains cookie by default - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:326 @ 03/16/23 06:43:35.825&#xA;&lt; Exit [It] user retains cookie by default - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:326 @ 03/16/23 06:43:35.835 (11ms)&#xA;&gt; Enter [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:43:35.835&#xA;&lt; Exit [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:43:35.993 (158ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] brotli should only compress responses that meet the `brotli-min-length` condition" classname="nginx-ingress-controller e2e suite" status="passed" time="42.212304459">
              <system-err>&gt; Enter [BeforeEach] brotli - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:43:35.994&#xA;&lt; Exit [BeforeEach] brotli - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:43:42.85 (6.856s)&#xA;&gt; Enter [BeforeEach] brotli - /go/src/k8s.io/ingress-nginx/test/e2e/settings/brotli.go:35 @ 03/16/23 06:43:42.85&#xA;&lt; Exit [BeforeEach] brotli - /go/src/k8s.io/ingress-nginx/test/e2e/settings/brotli.go:35 @ 03/16/23 06:43:46.866 (4.016s)&#xA;&gt; Enter [It] should only compress responses that meet the `brotli-min-length` condition - /go/src/k8s.io/ingress-nginx/test/e2e/settings/brotli.go:39 @ 03/16/23 06:43:46.866&#xA;&lt; Exit [It] should only compress responses that meet the `brotli-min-length` condition - /go/src/k8s.io/ingress-nginx/test/e2e/settings/brotli.go:39 @ 03/16/23 06:44:18.029 (31.163s)&#xA;&gt; Enter [AfterEach] brotli - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:44:18.029&#xA;&lt; Exit [AfterEach] brotli - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:44:18.206 (177ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Load Balancer] round-robin should evenly distribute requests with round-robin (default algorithm)" classname="nginx-ingress-controller e2e suite" status="passed" time="147.1817091">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Load Balancer] round-robin - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:44:18.206&#xA;&lt; Exit [BeforeEach] [Setting] [Load Balancer] round-robin - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:44:26.067 (7.861s)&#xA;&gt; Enter [BeforeEach] [Setting] [Load Balancer] round-robin - /go/src/k8s.io/ingress-nginx/test/e2e/loadbalance/round_robin.go:34 @ 03/16/23 06:44:26.067&#xA;&lt; Exit [BeforeEach] [Setting] [Load Balancer] round-robin - /go/src/k8s.io/ingress-nginx/test/e2e/loadbalance/round_robin.go:34 @ 03/16/23 06:44:37.102 (11.034s)&#xA;&gt; Enter [It] should evenly distribute requests with round-robin (default algorithm) - /go/src/k8s.io/ingress-nginx/test/e2e/loadbalance/round_robin.go:39 @ 03/16/23 06:44:37.102&#xA;&lt; Exit [It] should evenly distribute requests with round-robin (default algorithm) - /go/src/k8s.io/ingress-nginx/test/e2e/loadbalance/round_robin.go:39 @ 03/16/23 06:46:45.187 (2m8.086s)&#xA;&gt; Enter [AfterEach] [Setting] [Load Balancer] round-robin - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:46:45.187&#xA;&lt; Exit [AfterEach] [Setting] [Load Balancer] round-robin - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:46:45.388 (200ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] proxy-connect-timeout should set valid proxy timeouts using configmap values" classname="nginx-ingress-controller e2e suite" status="passed" time="28.617437745">
              <system-err>&gt; Enter [BeforeEach] [Setting] proxy-connect-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:46:45.389&#xA;&lt; Exit [BeforeEach] [Setting] proxy-connect-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:46:52.717 (7.329s)&#xA;&gt; Enter [BeforeEach] [Setting] proxy-connect-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_connect_timeout.go:32 @ 03/16/23 06:46:52.717&#xA;&lt; Exit [BeforeEach] [Setting] proxy-connect-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_connect_timeout.go:32 @ 03/16/23 06:46:56.742 (4.024s)&#xA;&gt; Enter [It] should set valid proxy timeouts using configmap values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_connect_timeout.go:36 @ 03/16/23 06:46:56.742&#xA;&lt; Exit [It] should set valid proxy timeouts using configmap values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_connect_timeout.go:36 @ 03/16/23 06:47:13.844 (17.102s)&#xA;&gt; Enter [AfterEach] [Setting] proxy-connect-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:47:13.844&#xA;&lt; Exit [AfterEach] [Setting] proxy-connect-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:47:14.006 (162ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] proxy-* should set valid proxy timeouts" classname="nginx-ingress-controller e2e suite" status="passed" time="21.122789679">
              <system-err>&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:47:14.007&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:47:20.857 (6.851s)&#xA;&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 03/16/23 06:47:20.857&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 03/16/23 06:47:24.88 (4.023s)&#xA;&gt; Enter [It] should set valid proxy timeouts - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:115 @ 03/16/23 06:47:24.88&#xA;&lt; Exit [It] should set valid proxy timeouts - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:115 @ 03/16/23 06:47:34.991 (10.111s)&#xA;&gt; Enter [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:47:34.991&#xA;&lt; Exit [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:47:35.129 (138ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] keep-alive keep-alive-requests Check the keep alive should set keepalive_timeout" classname="nginx-ingress-controller e2e suite" status="passed" time="28.085273917">
              <system-err>&gt; Enter [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:47:35.13&#xA;&lt; Exit [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:47:41.935 (6.805s)&#xA;&gt; Enter [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:33 @ 03/16/23 06:47:41.935&#xA;&lt; Exit [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:33 @ 03/16/23 06:47:52.962 (11.027s)&#xA;&gt; Enter [It] should set keepalive_timeout - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:40 @ 03/16/23 06:47:52.962&#xA;&lt; Exit [It] should set keepalive_timeout - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:40 @ 03/16/23 06:48:03.07 (10.108s)&#xA;&gt; Enter [AfterEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:48:03.07&#xA;&lt; Exit [AfterEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:48:03.215 (145ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] annotation-global-rate-limit generates correct configuration" classname="nginx-ingress-controller e2e suite" status="passed" time="45.265254057">
              <system-err>&gt; Enter [BeforeEach] [Annotations] annotation-global-rate-limit - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:48:03.216&#xA;&lt; Exit [BeforeEach] [Annotations] annotation-global-rate-limit - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:48:11.07 (7.855s)&#xA;&gt; Enter [BeforeEach] [Annotations] annotation-global-rate-limit - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/globalratelimit.go:34 @ 03/16/23 06:48:11.07&#xA;&lt; Exit [BeforeEach] [Annotations] annotation-global-rate-limit - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/globalratelimit.go:34 @ 03/16/23 06:48:15.092 (4.021s)&#xA;&gt; Enter [It] generates correct configuration - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/globalratelimit.go:38 @ 03/16/23 06:48:15.092&#xA;STEP: regenerating the correct configuration after update - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/globalratelimit.go:65 @ 03/16/23 06:48:37.205&#xA;&lt; Exit [It] generates correct configuration - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/globalratelimit.go:38 @ 03/16/23 06:48:48.324 (33.232s)&#xA;&gt; Enter [AfterEach] [Annotations] annotation-global-rate-limit - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:48:48.324&#xA;&lt; Exit [AfterEach] [Annotations] annotation-global-rate-limit - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:48:48.481 (157ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* when canaried by header with value and pattern should routes to mainline upstream when the given Regex causes error" classname="nginx-ingress-controller e2e suite" status="passed" time="32.066841322">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:48:48.482&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:48:55.29 (6.808s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 03/16/23 06:48:55.29&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 03/16/23 06:49:03.333 (8.043s)&#xA;&gt; Enter [It] should routes to mainline upstream when the given Regex causes error - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:566 @ 03/16/23 06:49:03.333&#xA;STEP: routing requests to the mainline upstream when the given Regex causes error - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:591 @ 03/16/23 06:49:20.418&#xA;&lt; Exit [It] should routes to mainline upstream when the given Regex causes error - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:566 @ 03/16/23 06:49:20.42 (17.087s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:49:20.42&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:49:20.548 (128ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Security] global-auth-url when global external authentication is configured should return status code 200 when request whitelisted (via no-auth-locations) service and 401 when request protected service" classname="nginx-ingress-controller e2e suite" status="passed" time="53.427167665">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:49:20.549&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:49:27.39 (6.841s)&#xA;&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 03/16/23 06:49:27.39&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 03/16/23 06:49:33.437 (6.047s)&#xA;&gt; Enter [BeforeEach] when global external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:58 @ 03/16/23 06:49:33.437&#xA;STEP: Adding an ingress rule for /foo - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:61 @ 03/16/23 06:49:33.437&#xA;STEP: Adding an ingress rule for /bar - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:69 @ 03/16/23 06:49:43.547&#xA;STEP: Adding a global-auth-url to configMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:77 @ 03/16/23 06:49:53.633&#xA;&lt; Exit [BeforeEach] when global external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:58 @ 03/16/23 06:50:03.719 (30.282s)&#xA;&gt; Enter [It] should return status code 200 when request whitelisted (via no-auth-locations) service and 401 when request protected service - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:102 @ 03/16/23 06:50:03.719&#xA;STEP: Adding a no-auth-locations for /bar to configMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:104 @ 03/16/23 06:50:03.719&#xA;STEP: Sending a request to protected service /foo - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:111 @ 03/16/23 06:50:13.817&#xA;STEP: Sending a request to whitelisted service /bar - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:118 @ 03/16/23 06:50:13.821&#xA;&lt; Exit [It] should return status code 200 when request whitelisted (via no-auth-locations) service and 401 when request protected service - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:102 @ 03/16/23 06:50:13.824 (10.105s)&#xA;&gt; Enter [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:50:13.824&#xA;&lt; Exit [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:50:13.976 (152ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Service] Type ExternalName should return status 502 for service type=ExternalName with an invalid host" classname="nginx-ingress-controller e2e suite" status="passed" time="22.104366061">
              <system-err>&gt; Enter [BeforeEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:50:13.977&#xA;&lt; Exit [BeforeEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:50:20.829 (6.852s)&#xA;&gt; Enter [It] should return status 502 for service type=ExternalName with an invalid host - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_externalname.go:153 @ 03/16/23 06:50:20.829&#xA;&lt; Exit [It] should return status 502 for service type=ExternalName with an invalid host - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_externalname.go:153 @ 03/16/23 06:50:35.94 (15.111s)&#xA;&gt; Enter [AfterEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:50:35.94&#xA;&lt; Exit [AfterEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:50:36.081 (141ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] gzip should be enabled with default settings" classname="nginx-ingress-controller e2e suite" status="passed" time="17.126053692">
              <system-err>&gt; Enter [BeforeEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:50:36.082&#xA;&lt; Exit [BeforeEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:50:42.924 (6.843s)&#xA;&gt; Enter [It] should be enabled with default settings - /go/src/k8s.io/ingress-nginx/test/e2e/settings/gzip.go:39 @ 03/16/23 06:50:42.924&#xA;&lt; Exit [It] should be enabled with default settings - /go/src/k8s.io/ingress-nginx/test/e2e/settings/gzip.go:39 @ 03/16/23 06:50:53.044 (10.12s)&#xA;&gt; Enter [AfterEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:50:53.044&#xA;&lt; Exit [AfterEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:50:53.208 (163ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Memory Leak] Dynamic Certificates should not leak memory from ingress SSL certificates or configuration updates" classname="nginx-ingress-controller e2e suite" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [Annotations] auth-tls-* should return 403 using auth-tls-match-cn with no matching CN from client" classname="nginx-ingress-controller e2e suite" status="passed" time="22.438331685">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:50:53.209&#xA;&lt; Exit [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:51:01.05 (7.842s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:32 @ 03/16/23 06:51:01.05&#xA;&lt; Exit [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:32 @ 03/16/23 06:51:05.068 (4.018s)&#xA;&gt; Enter [It] should return 403 using auth-tls-match-cn with no matching CN from client - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:266 @ 03/16/23 06:51:05.068&#xA;&lt; Exit [It] should return 403 using auth-tls-match-cn with no matching CN from client - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:266 @ 03/16/23 06:51:15.509 (10.441s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:51:15.509&#xA;&lt; Exit [AfterEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:51:15.647 (138ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] enable-multi-accept should be enabled when set to true" classname="nginx-ingress-controller e2e suite" status="passed" time="17.068909812">
              <system-err>&gt; Enter [BeforeEach] [Setting] enable-multi-accept - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:51:15.647&#xA;&lt; Exit [BeforeEach] [Setting] enable-multi-accept - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:51:22.453 (6.806s)&#xA;&gt; Enter [It] should be enabled when set to true - /go/src/k8s.io/ingress-nginx/test/e2e/settings/multi_accept.go:39 @ 03/16/23 06:51:22.453&#xA;&lt; Exit [It] should be enabled when set to true - /go/src/k8s.io/ingress-nginx/test/e2e/settings/multi_accept.go:39 @ 03/16/23 06:51:32.569 (10.116s)&#xA;&gt; Enter [AfterEach] [Setting] enable-multi-accept - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:51:32.569&#xA;&lt; Exit [AfterEach] [Setting] enable-multi-accept - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:51:32.716 (147ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] modsecurity owasp should enable modsecurity with snippet" classname="nginx-ingress-controller e2e suite" status="passed" time="21.239820281">
              <system-err>&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:51:32.717&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:51:39.688 (6.972s)&#xA;&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 03/16/23 06:51:39.688&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 03/16/23 06:51:43.703 (4.015s)&#xA;&gt; Enter [It] should enable modsecurity with snippet - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:91 @ 03/16/23 06:51:43.703&#xA;&lt; Exit [It] should enable modsecurity with snippet - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:91 @ 03/16/23 06:51:53.812 (10.109s)&#xA;&gt; Enter [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:51:53.812&#xA;&lt; Exit [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:51:53.956 (144ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] modsecurity owasp should disable default modsecurity conf setting when modsecurity-snippet is specified" classname="nginx-ingress-controller e2e suite" status="passed" time="33.119455043">
              <system-err>&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:51:53.957&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:52:00.771 (6.814s)&#xA;&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 03/16/23 06:52:00.771&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 03/16/23 06:52:04.788 (4.017s)&#xA;&gt; Enter [It] should disable default modsecurity conf setting when modsecurity-snippet is specified - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:347 @ 03/16/23 06:52:04.788&#xA;&lt; Exit [It] should disable default modsecurity conf setting when modsecurity-snippet is specified - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:347 @ 03/16/23 06:52:26.901 (22.112s)&#xA;&gt; Enter [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:52:26.901&#xA;&lt; Exit [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:52:27.076 (176ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] mirror-* should set mirror-target to http://localhost/mirror" classname="nginx-ingress-controller e2e suite" status="passed" time="23.086115203">
              <system-err>&gt; Enter [BeforeEach] [Annotations] mirror-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:52:27.077&#xA;&lt; Exit [BeforeEach] [Annotations] mirror-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:52:35.928 (8.852s)&#xA;&gt; Enter [BeforeEach] [Annotations] mirror-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/mirror.go:32 @ 03/16/23 06:52:35.928&#xA;&lt; Exit [BeforeEach] [Annotations] mirror-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/mirror.go:32 @ 03/16/23 06:52:39.958 (4.03s)&#xA;&gt; Enter [It] should set mirror-target to http://localhost/mirror - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/mirror.go:36 @ 03/16/23 06:52:39.958&#xA;&lt; Exit [It] should set mirror-target to http://localhost/mirror - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/mirror.go:36 @ 03/16/23 06:52:50.038 (10.08s)&#xA;&gt; Enter [AfterEach] [Annotations] mirror-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:52:50.038&#xA;&lt; Exit [AfterEach] [Annotations] mirror-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:52:50.163 (125ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] proxy-* should set proxy_redirect to off" classname="nginx-ingress-controller e2e suite" status="passed" time="22.123352258">
              <system-err>&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:52:50.163&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:52:58.001 (7.838s)&#xA;&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 03/16/23 06:52:58.001&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 03/16/23 06:53:02.026 (4.024s)&#xA;&gt; Enter [It] should set proxy_redirect to off - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:36 @ 03/16/23 06:53:02.026&#xA;&lt; Exit [It] should set proxy_redirect to off - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:36 @ 03/16/23 06:53:12.119 (10.093s)&#xA;&gt; Enter [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:53:12.119&#xA;&lt; Exit [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:53:12.287 (168ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] backend-protocol should set backend protocol to &#39;&#39; and use ajp_pass" classname="nginx-ingress-controller e2e suite" status="passed" time="20.148534872">
              <system-err>&gt; Enter [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:53:12.287&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:53:20.157 (7.87s)&#xA;&gt; Enter [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:30 @ 03/16/23 06:53:20.157&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:30 @ 03/16/23 06:53:22.174 (2.017s)&#xA;&gt; Enter [It] should set backend protocol to &#39;&#39; and use ajp_pass - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:109 @ 03/16/23 06:53:22.174&#xA;&lt; Exit [It] should set backend protocol to &#39;&#39; and use ajp_pass - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:109 @ 03/16/23 06:53:32.277 (10.103s)&#xA;&gt; Enter [AfterEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:53:32.277&#xA;&lt; Exit [AfterEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:53:32.435 (158ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] nginx-configuration fails when using root directive" classname="nginx-ingress-controller e2e suite" status="passed" time="62.030329881">
              <system-err>&gt; Enter [BeforeEach] [Setting] nginx-configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:98 @ 03/16/23 06:53:32.436&#xA;&lt; Exit [BeforeEach] [Setting] nginx-configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:98 @ 03/16/23 06:53:34.438 (2.003s)&#xA;&gt; Enter [It] fails when using root directive - /go/src/k8s.io/ingress-nginx/test/e2e/nginx/nginx.go:124 @ 03/16/23 06:53:34.438&#xA;&lt; Exit [It] fails when using root directive - /go/src/k8s.io/ingress-nginx/test/e2e/nginx/nginx.go:124 @ 03/16/23 06:54:34.464 (1m0.026s)&#xA;&gt; Enter [AfterEach] [Setting] nginx-configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:99 @ 03/16/23 06:54:34.464&#xA;&lt; Exit [AfterEach] [Setting] nginx-configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:99 @ 03/16/23 06:54:34.466 (2ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Lua] dynamic configuration when only backends change handles an annotation change" classname="nginx-ingress-controller e2e suite" status="passed" time="25.319145982">
              <system-err>&gt; Enter [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:54:34.466&#xA;&lt; Exit [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:54:41.291 (6.825s)&#xA;&gt; Enter [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:45 @ 03/16/23 06:54:41.291&#xA;&lt; Exit [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:45 @ 03/16/23 06:54:53.428 (12.137s)&#xA;&gt; Enter [It] handles an annotation change - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:171 @ 03/16/23 06:54:53.428&#xA;&lt; Exit [It] handles an annotation change - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:171 @ 03/16/23 06:54:59.604 (6.176s)&#xA;&gt; Enter [AfterEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:54:59.604&#xA;&lt; Exit [AfterEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:54:59.786 (182ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] affinity session-cookie-name should work with server-alias annotation" classname="nginx-ingress-controller e2e suite" status="passed" time="22.409013154">
              <system-err>&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:54:59.788&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:55:07.858 (8.07s)&#xA;&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 03/16/23 06:55:07.858&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 03/16/23 06:55:11.876 (4.017s)&#xA;&gt; Enter [It] should work with server-alias annotation - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:372 @ 03/16/23 06:55:11.876&#xA;&lt; Exit [It] should work with server-alias annotation - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:372 @ 03/16/23 06:55:21.981 (10.105s)&#xA;&gt; Enter [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:55:21.981&#xA;&lt; Exit [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:55:22.197 (217ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* should not set snippet &#34;proxy_set_header My-Custom-Header 42;&#34; when external auth is not configured" classname="nginx-ingress-controller e2e suite" status="passed" time="22.134991439">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:55:22.225&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:55:30.076 (7.852s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 06:55:30.076&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 06:55:34.098 (4.021s)&#xA;&gt; Enter [It] should not set snippet &#34;proxy_set_header My-Custom-Header 42;&#34; when external auth is not configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:284 @ 03/16/23 06:55:34.098&#xA;&lt; Exit [It] should not set snippet &#34;proxy_set_header My-Custom-Header 42;&#34; when external auth is not configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:284 @ 03/16/23 06:55:44.181 (10.083s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:55:44.181&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:55:44.36 (179ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] Annotation - limit-connections should limit-connections" classname="nginx-ingress-controller e2e suite" status="passed" time="35.218104819">
              <system-out>I0316 06:56:10.421890      30 request.go:690] Waited for 1.000776775s due to client-side throttling, not priority and fairness, request: GET:https://10.96.0.1:443/api/v1/namespaces/e2e-tests-limit-connections-1678949744362104856-bfrnb/services/nginx-ingress-controller&#xA;</system-out>
              <system-err>&gt; Enter [BeforeEach] [Annotations] Annotation - limit-connections - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:55:44.36&#xA;&lt; Exit [BeforeEach] [Annotations] Annotation - limit-connections - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:55:51.226 (6.866s)&#xA;&gt; Enter [BeforeEach] [Annotations] Annotation - limit-connections - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/limitconnections.go:34 @ 03/16/23 06:55:51.226&#xA;&lt; Exit [BeforeEach] [Annotations] Annotation - limit-connections - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/limitconnections.go:34 @ 03/16/23 06:55:55.257 (4.031s)&#xA;&gt; Enter [It] should limit-connections - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/limitconnections.go:38 @ 03/16/23 06:55:55.257&#xA;&lt; Exit [It] should limit-connections - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/limitconnections.go:38 @ 03/16/23 06:56:19.426 (24.169s)&#xA;&gt; Enter [AfterEach] [Annotations] Annotation - limit-connections - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:56:19.426&#xA;&lt; Exit [AfterEach] [Annotations] Annotation - limit-connections - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:56:19.578 (152ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should not break functionality" classname="nginx-ingress-controller e2e suite" status="passed" time="17.986977373">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:56:19.579&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:56:26.393 (6.814s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 03/16/23 06:56:26.393&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 03/16/23 06:56:30.423 (4.03s)&#xA;&gt; Enter [It] should not break functionality - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:267 @ 03/16/23 06:56:30.423&#xA;&lt; Exit [It] should not break functionality - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:267 @ 03/16/23 06:56:37.437 (7.013s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:56:37.437&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:56:37.566 (129ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] proxy-ssl-* should set valid proxy-ssl-secret" classname="nginx-ingress-controller e2e suite" status="passed" time="21.862072772">
              <system-err>&gt; Enter [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:56:37.566&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:56:44.402 (6.836s)&#xA;&gt; Enter [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:33 @ 03/16/23 06:56:44.402&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:33 @ 03/16/23 06:56:48.428 (4.026s)&#xA;&gt; Enter [It] should set valid proxy-ssl-secret - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:37 @ 03/16/23 06:56:48.428&#xA;&lt; Exit [It] should set valid proxy-ssl-secret - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:37 @ 03/16/23 06:56:59.249 (10.82s)&#xA;&gt; Enter [AfterEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:56:59.249&#xA;&lt; Exit [AfterEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:56:59.428 (179ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] server-alias should return status code 200 for hosts defined in two ingresses, different path with one alias" classname="nginx-ingress-controller e2e suite" status="passed" time="26.253399966">
              <system-err>&gt; Enter [BeforeEach] [Annotations] server-alias - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:56:59.429&#xA;&lt; Exit [BeforeEach] [Annotations] server-alias - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:57:06.371 (6.943s)&#xA;&gt; Enter [BeforeEach] [Annotations] server-alias - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/alias.go:32 @ 03/16/23 06:57:06.371&#xA;&lt; Exit [BeforeEach] [Annotations] server-alias - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/alias.go:32 @ 03/16/23 06:57:08.39 (2.019s)&#xA;&gt; Enter [It] should return status code 200 for hosts defined in two ingresses, different path with one alias - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/alias.go:87 @ 03/16/23 06:57:08.39&#xA;&lt; Exit [It] should return status code 200 for hosts defined in two ingresses, different path with one alias - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/alias.go:87 @ 03/16/23 06:57:25.507 (17.117s)&#xA;&gt; Enter [AfterEach] [Annotations] server-alias - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:57:25.507&#xA;&lt; Exit [AfterEach] [Annotations] server-alias - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:57:25.682 (175ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] modsecurity owasp should enable modsecurity with snippet and block requests" classname="nginx-ingress-controller e2e suite" status="passed" time="32.067517907">
              <system-err>&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:57:25.682&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:57:33.494 (7.812s)&#xA;&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 03/16/23 06:57:33.494&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 03/16/23 06:57:35.512 (2.018s)&#xA;&gt; Enter [It] should enable modsecurity with snippet and block requests - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:153 @ 03/16/23 06:57:35.512&#xA;&lt; Exit [It] should enable modsecurity with snippet and block requests - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:153 @ 03/16/23 06:57:57.603 (22.091s)&#xA;&gt; Enter [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:57:57.603&#xA;&lt; Exit [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:57:57.75 (146ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* when external authentication is configured should not create additional upstream block when host part of auth-url contains a variable" classname="nginx-ingress-controller e2e suite" status="passed" time="50.245385986">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:57:57.75&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:58:06.549 (8.799s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 06:58:06.549&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 06:58:10.566 (4.017s)&#xA;&gt; Enter [BeforeEach] when external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:458 @ 03/16/23 06:58:10.566&#xA;&lt; Exit [BeforeEach] when external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:458 @ 03/16/23 06:58:24.721 (14.155s)&#xA;&gt; Enter [It] should not create additional upstream block when host part of auth-url contains a variable - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:570 @ 03/16/23 06:58:24.721&#xA;&lt; Exit [It] should not create additional upstream block when host part of auth-url contains a variable - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:570 @ 03/16/23 06:58:47.855 (23.135s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:58:47.855&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:58:47.996 (140ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* Single canary Ingress should not use canary as a catch-all server" classname="nginx-ingress-controller e2e suite" status="passed" time="32.150778662">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:58:47.996&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:58:54.841 (6.845s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 03/16/23 06:58:54.841&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 03/16/23 06:59:02.884 (8.043s)&#xA;&gt; Enter [It] should not use canary as a catch-all server - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:836 @ 03/16/23 06:59:02.884&#xA;&lt; Exit [It] should not use canary as a catch-all server - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:836 @ 03/16/23 06:59:19.993 (17.109s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:59:19.993&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:59:20.147 (154ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* when external authentication is configured should not create additional upstream block when auth-keepalive is not set" classname="nginx-ingress-controller e2e suite" status="passed" time="49.375573284">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:59:20.148&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:59:28.093 (7.945s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 06:59:28.093&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 06:59:32.108 (4.016s)&#xA;&gt; Enter [BeforeEach] when external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:458 @ 03/16/23 06:59:32.108&#xA;&lt; Exit [BeforeEach] when external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:458 @ 03/16/23 06:59:46.239 (14.131s)&#xA;&gt; Enter [It] should not create additional upstream block when auth-keepalive is not set - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:552 @ 03/16/23 06:59:46.239&#xA;&lt; Exit [It] should not create additional upstream block when auth-keepalive is not set - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:552 @ 03/16/23 07:00:09.343 (23.104s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:00:09.343&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:00:09.523 (180ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] reuse-port reuse port should be enabled by default" classname="nginx-ingress-controller e2e suite" status="passed" time="21.101346292">
              <system-err>&gt; Enter [BeforeEach] [Setting] reuse-port - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:00:09.525&#xA;&lt; Exit [BeforeEach] [Setting] reuse-port - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:00:16.352 (6.828s)&#xA;&gt; Enter [BeforeEach] [Setting] reuse-port - /go/src/k8s.io/ingress-nginx/test/e2e/settings/reuse-port.go:32 @ 03/16/23 07:00:16.352&#xA;&lt; Exit [BeforeEach] [Setting] reuse-port - /go/src/k8s.io/ingress-nginx/test/e2e/settings/reuse-port.go:32 @ 03/16/23 07:00:27.379 (11.026s)&#xA;&gt; Enter [It] reuse port should be enabled by default - /go/src/k8s.io/ingress-nginx/test/e2e/settings/reuse-port.go:38 @ 03/16/23 07:00:27.379&#xA;&lt; Exit [It] reuse port should be enabled by default - /go/src/k8s.io/ingress-nginx/test/e2e/settings/reuse-port.go:38 @ 03/16/23 07:00:30.453 (3.074s)&#xA;&gt; Enter [AfterEach] [Setting] reuse-port - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:00:30.453&#xA;&lt; Exit [AfterEach] [Setting] reuse-port - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:00:30.626 (173ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* when external authentication with caching is configured should deny login for different servers" classname="nginx-ingress-controller e2e suite" status="passed" time="128.494730156">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:00:30.627&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:00:37.495 (6.868s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 07:00:37.495&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 07:00:41.514 (4.019s)&#xA;&gt; Enter [BeforeEach] when external authentication with caching is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:730 @ 03/16/23 07:00:41.514&#xA;STEP: Adding an ingress rule for /foo - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:754 @ 03/16/23 07:00:46.546&#xA;STEP: Adding an ingress rule for /bar - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:761 @ 03/16/23 07:00:56.67&#xA;STEP: Adding an ingress rule for /foo - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:754 @ 03/16/23 07:01:06.753&#xA;STEP: Adding an ingress rule for /bar - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:761 @ 03/16/23 07:01:16.836&#xA;&lt; Exit [BeforeEach] when external authentication with caching is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:730 @ 03/16/23 07:01:31.94 (50.426s)&#xA;&gt; Enter [It] should deny login for different servers - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:820 @ 03/16/23 07:01:31.94&#xA;STEP: logging into server thisHost /foo - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:821 @ 03/16/23 07:01:31.94&#xA;STEP: receiving an internal server error without cache on thisHost location /bar - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:833 @ 03/16/23 07:01:38.951&#xA;&lt; Exit [It] should deny login for different servers - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:820 @ 03/16/23 07:02:38.957 (1m7.017s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:02:38.957&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:02:39.122 (165ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] backend-protocol - FastCGI should use fastcgi_pass in the configuration file" classname="nginx-ingress-controller e2e suite" status="passed" time="24.692799789">
              <system-err>&gt; Enter [BeforeEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:02:39.123&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:02:46.521 (7.398s)&#xA;&gt; Enter [BeforeEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fastcgi.go:33 @ 03/16/23 07:02:46.521&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fastcgi.go:33 @ 03/16/23 07:02:53.537 (7.015s)&#xA;&gt; Enter [It] should use fastcgi_pass in the configuration file - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fastcgi.go:37 @ 03/16/23 07:02:53.537&#xA;&lt; Exit [It] should use fastcgi_pass in the configuration file - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fastcgi.go:37 @ 03/16/23 07:03:03.616 (10.079s)&#xA;&gt; Enter [AfterEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:03:03.616&#xA;&lt; Exit [AfterEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:03:03.816 (199ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] global-options should have worker_rlimit_nofile option and be independent on amount of worker processes" classname="nginx-ingress-controller e2e suite" status="passed" time="18.08726555">
              <system-err>&gt; Enter [BeforeEach] global-options - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:03:03.816&#xA;&lt; Exit [BeforeEach] global-options - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:03:11.659 (7.843s)&#xA;&gt; Enter [It] should have worker_rlimit_nofile option and be independent on amount of worker processes - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_options.go:38 @ 03/16/23 07:03:11.659&#xA;&lt; Exit [It] should have worker_rlimit_nofile option and be independent on amount of worker processes - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_options.go:38 @ 03/16/23 07:03:21.76 (10.101s)&#xA;&gt; Enter [AfterEach] global-options - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:03:21.76&#xA;&lt; Exit [AfterEach] global-options - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:03:21.903 (143ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] mirror-* should set mirror-target to https://test.env.com/$request_uri" classname="nginx-ingress-controller e2e suite" status="passed" time="21.137535864">
              <system-err>&gt; Enter [BeforeEach] [Annotations] mirror-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:03:21.904&#xA;&lt; Exit [BeforeEach] [Annotations] mirror-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:03:28.798 (6.895s)&#xA;&gt; Enter [BeforeEach] [Annotations] mirror-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/mirror.go:32 @ 03/16/23 07:03:28.798&#xA;&lt; Exit [BeforeEach] [Annotations] mirror-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/mirror.go:32 @ 03/16/23 07:03:32.819 (4.021s)&#xA;&gt; Enter [It] should set mirror-target to https://test.env.com/$request_uri - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/mirror.go:51 @ 03/16/23 07:03:32.819&#xA;&lt; Exit [It] should set mirror-target to https://test.env.com/$request_uri - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/mirror.go:51 @ 03/16/23 07:03:42.913 (10.094s)&#xA;&gt; Enter [AfterEach] [Annotations] mirror-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:03:42.913&#xA;&lt; Exit [AfterEach] [Annotations] mirror-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:03:43.041 (128ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] limit-rate Check limit-rate annotation" classname="nginx-ingress-controller e2e suite" status="passed" time="27.207773807">
              <system-err>&gt; Enter [BeforeEach] [Annotations] limit-rate - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:03:43.042&#xA;&lt; Exit [BeforeEach] [Annotations] limit-rate - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:03:51.859 (8.817s)&#xA;&gt; Enter [BeforeEach] [Annotations] limit-rate - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/limitrate.go:33 @ 03/16/23 07:03:51.859&#xA;&lt; Exit [BeforeEach] [Annotations] limit-rate - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/limitrate.go:33 @ 03/16/23 07:03:55.884 (4.025s)&#xA;&gt; Enter [It] Check limit-rate annotation - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/limitrate.go:37 @ 03/16/23 07:03:55.884&#xA;&lt; Exit [It] Check limit-rate annotation - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/limitrate.go:37 @ 03/16/23 07:04:10.092 (14.208s)&#xA;&gt; Enter [AfterEach] [Annotations] limit-rate - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:04:10.092&#xA;&lt; Exit [AfterEach] [Annotations] limit-rate - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:04:10.25 (158ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] configmap stream-snippet should add value of stream-snippet via config map to nginx config" classname="nginx-ingress-controller e2e suite" status="passed" time="34.121360693">
              <system-err>&gt; Enter [BeforeEach] [Setting] configmap stream-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:04:10.25&#xA;&lt; Exit [BeforeEach] [Setting] configmap stream-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:04:18.071 (7.821s)&#xA;&gt; Enter [BeforeEach] [Setting] configmap stream-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/settings/stream_snippet.go:38 @ 03/16/23 07:04:18.071&#xA;&lt; Exit [BeforeEach] [Setting] configmap stream-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/settings/stream_snippet.go:38 @ 03/16/23 07:04:22.089 (4.019s)&#xA;&gt; Enter [It] should add value of stream-snippet via config map to nginx config - /go/src/k8s.io/ingress-nginx/test/e2e/settings/stream_snippet.go:42 @ 03/16/23 07:04:22.089&#xA;&lt; Exit [It] should add value of stream-snippet via config map to nginx config - /go/src/k8s.io/ingress-nginx/test/e2e/settings/stream_snippet.go:42 @ 03/16/23 07:04:44.239 (22.149s)&#xA;&gt; Enter [AfterEach] [Setting] configmap stream-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:04:44.239&#xA;&lt; Exit [AfterEach] [Setting] configmap stream-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:04:44.371 (133ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] backend-protocol should set backend protocol to &#39;&#39; and use fastcgi_pass" classname="nginx-ingress-controller e2e suite" status="passed" time="23.607939901">
              <system-err>&gt; Enter [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:04:44.372&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:04:53.682 (9.311s)&#xA;&gt; Enter [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:30 @ 03/16/23 07:04:53.682&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:30 @ 03/16/23 07:04:57.7 (4.018s)&#xA;&gt; Enter [It] should set backend protocol to &#39;&#39; and use fastcgi_pass - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:94 @ 03/16/23 07:04:57.7&#xA;&lt; Exit [It] should set backend protocol to &#39;&#39; and use fastcgi_pass - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:94 @ 03/16/23 07:05:07.841 (10.141s)&#xA;&gt; Enter [AfterEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:05:07.841&#xA;&lt; Exit [AfterEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:05:07.98 (139ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] gzip should be disabled by default" classname="nginx-ingress-controller e2e suite" status="passed" time="10.110348164">
              <system-err>&gt; Enter [BeforeEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:05:07.98&#xA;&lt; Exit [BeforeEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:05:14.807 (6.827s)&#xA;&gt; Enter [It] should be disabled by default - /go/src/k8s.io/ingress-nginx/test/e2e/settings/gzip.go:32 @ 03/16/23 07:05:14.807&#xA;&lt; Exit [It] should be disabled by default - /go/src/k8s.io/ingress-nginx/test/e2e/settings/gzip.go:32 @ 03/16/23 07:05:17.907 (3.1s)&#xA;&gt; Enter [AfterEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:05:17.907&#xA;&lt; Exit [AfterEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:05:18.09 (183ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] rewrite-target use-regex enable-rewrite-log should allow for custom rewrite parameters" classname="nginx-ingress-controller e2e suite" status="passed" time="21.110982178">
              <system-err>&gt; Enter [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:05:18.091&#xA;&lt; Exit [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:05:24.904 (6.813s)&#xA;&gt; Enter [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:33 @ 03/16/23 07:05:24.904&#xA;&lt; Exit [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:33 @ 03/16/23 07:05:28.923 (4.02s)&#xA;&gt; Enter [It] should allow for custom rewrite parameters - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:190 @ 03/16/23 07:05:28.923&#xA;STEP: creating an ingress definition with the use-regex annotation - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:193 @ 03/16/23 07:05:28.923&#xA;STEP: check that &#39;/foo/bar/bar&#39; redirects to custom rewrite - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:206 @ 03/16/23 07:05:39.057&#xA;&lt; Exit [It] should allow for custom rewrite parameters - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:190 @ 03/16/23 07:05:39.059 (10.136s)&#xA;&gt; Enter [AfterEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:05:39.059&#xA;&lt; Exit [AfterEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:05:39.202 (142ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Debug CLI should list the backend servers" classname="nginx-ingress-controller e2e suite" status="passed" time="21.208303814">
              <system-err>&gt; Enter [BeforeEach] Debug CLI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:05:39.202&#xA;&lt; Exit [BeforeEach] Debug CLI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:05:46.031 (6.828s)&#xA;&gt; Enter [BeforeEach] Debug CLI - /go/src/k8s.io/ingress-nginx/test/e2e/dbg/main.go:33 @ 03/16/23 07:05:46.031&#xA;&lt; Exit [BeforeEach] Debug CLI - /go/src/k8s.io/ingress-nginx/test/e2e/dbg/main.go:33 @ 03/16/23 07:05:50.046 (4.015s)&#xA;&gt; Enter [It] should list the backend servers - /go/src/k8s.io/ingress-nginx/test/e2e/dbg/main.go:37 @ 03/16/23 07:05:50.046&#xA;&lt; Exit [It] should list the backend servers - /go/src/k8s.io/ingress-nginx/test/e2e/dbg/main.go:37 @ 03/16/23 07:06:00.217 (10.171s)&#xA;&gt; Enter [AfterEach] Debug CLI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:06:00.217&#xA;&lt; Exit [AfterEach] Debug CLI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:06:00.41 (193ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] hash size Check proxy header hash size should set proxy-headers-hash-bucket-size" classname="nginx-ingress-controller e2e suite" status="passed" time="28.112869004">
              <system-err>&gt; Enter [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:06:00.411&#xA;&lt; Exit [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:06:07.248 (6.838s)&#xA;&gt; Enter [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:32 @ 03/16/23 07:06:07.248&#xA;&lt; Exit [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:32 @ 03/16/23 07:06:18.272 (11.024s)&#xA;&gt; Enter [It] should set proxy-headers-hash-bucket-size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:60 @ 03/16/23 07:06:18.272&#xA;&lt; Exit [It] should set proxy-headers-hash-bucket-size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:60 @ 03/16/23 07:06:28.381 (10.109s)&#xA;&gt; Enter [AfterEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:06:28.381&#xA;&lt; Exit [AfterEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:06:28.524 (143ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Lua] dynamic certificates picks up the previously missing secret for a given ingress without reloading" classname="nginx-ingress-controller e2e suite" status="passed" time="31.133857082">
              <system-err>&gt; Enter [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:06:28.524&#xA;&lt; Exit [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:06:35.325 (6.801s)&#xA;&gt; Enter [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:41 @ 03/16/23 07:06:35.325&#xA;&lt; Exit [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:41 @ 03/16/23 07:06:39.352 (4.027s)&#xA;&gt; Enter [It] picks up the previously missing secret for a given ingress without reloading - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:70 @ 03/16/23 07:06:39.352&#xA;STEP: serving the configured certificate on HTTPS endpoint - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:94 @ 03/16/23 07:06:56.445&#xA;STEP: skipping Nginx reload - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:101 @ 03/16/23 07:06:59.461&#xA;&lt; Exit [It] picks up the previously missing secret for a given ingress without reloading - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:70 @ 03/16/23 07:06:59.472 (20.12s)&#xA;&gt; Enter [AfterEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:06:59.472&#xA;&lt; Exit [AfterEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:06:59.658 (185ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] app-root should redirect to /foo" classname="nginx-ingress-controller e2e suite" status="passed" time="21.239008356">
              <system-err>&gt; Enter [BeforeEach] [Annotations] app-root - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:06:59.658&#xA;&lt; Exit [BeforeEach] [Annotations] app-root - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:07:06.551 (6.893s)&#xA;&gt; Enter [BeforeEach] [Annotations] app-root - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/approot.go:31 @ 03/16/23 07:07:06.551&#xA;&lt; Exit [BeforeEach] [Annotations] app-root - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/approot.go:31 @ 03/16/23 07:07:10.571 (4.019s)&#xA;&gt; Enter [It] should redirect to /foo - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/approot.go:35 @ 03/16/23 07:07:10.571&#xA;&lt; Exit [It] should redirect to /foo - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/approot.go:35 @ 03/16/23 07:07:20.742 (10.171s)&#xA;&gt; Enter [AfterEach] [Annotations] app-root - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:07:20.742&#xA;&lt; Exit [AfterEach] [Annotations] app-root - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:07:20.897 (156ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Security] no-auth-locations should return status code 200 when accessing &#39;/noauth&#39; unauthenticated" classname="nginx-ingress-controller e2e suite" status="passed" time="31.248355094">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Security] no-auth-locations - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:07:20.898&#xA;&lt; Exit [BeforeEach] [Setting] [Security] no-auth-locations - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:07:29.787 (8.889s)&#xA;&gt; Enter [BeforeEach] [Setting] [Security] no-auth-locations - /go/src/k8s.io/ingress-nginx/test/e2e/settings/no_auth_locations.go:43 @ 03/16/23 07:07:29.787&#xA;&lt; Exit [BeforeEach] [Setting] [Security] no-auth-locations - /go/src/k8s.io/ingress-nginx/test/e2e/settings/no_auth_locations.go:43 @ 03/16/23 07:07:48.898 (19.111s)&#xA;&gt; Enter [It] should return status code 200 when accessing &#39;/noauth&#39; unauthenticated - /go/src/k8s.io/ingress-nginx/test/e2e/settings/no_auth_locations.go:82 @ 03/16/23 07:07:48.898&#xA;&lt; Exit [It] should return status code 200 when accessing &#39;/noauth&#39; unauthenticated - /go/src/k8s.io/ingress-nginx/test/e2e/settings/no_auth_locations.go:82 @ 03/16/23 07:07:51.988 (3.09s)&#xA;&gt; Enter [AfterEach] [Setting] [Security] no-auth-locations - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:07:51.988&#xA;&lt; Exit [AfterEach] [Setting] [Security] no-auth-locations - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:07:52.146 (158ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] service-upstream when using the default value (false) and enabling in the annotations should use the Service Cluster IP and Port" classname="nginx-ingress-controller e2e suite" status="passed" time="21.136889865">
              <system-err>&gt; Enter [BeforeEach] [Annotations] service-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:07:52.146&#xA;&lt; Exit [BeforeEach] [Annotations] service-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:07:58.953 (6.807s)&#xA;&gt; Enter [BeforeEach] [Annotations] service-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serviceupstream.go:36 @ 03/16/23 07:07:58.953&#xA;&lt; Exit [BeforeEach] [Annotations] service-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serviceupstream.go:36 @ 03/16/23 07:08:02.97 (4.017s)&#xA;&gt; Enter [It] should use the Service Cluster IP and Port  - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serviceupstream.go:41 @ 03/16/23 07:08:02.97&#xA;STEP: checking if the service is reached - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serviceupstream.go:53 @ 03/16/23 07:08:13.061&#xA;STEP: checking if the Service Cluster IP and Port are used - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serviceupstream.go:60 @ 03/16/23 07:08:13.063&#xA;&lt; Exit [It] should use the Service Cluster IP and Port  - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/serviceupstream.go:41 @ 03/16/23 07:08:13.143 (10.173s)&#xA;&gt; Enter [AfterEach] [Annotations] service-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:08:13.143&#xA;&lt; Exit [AfterEach] [Annotations] service-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:08:13.283 (140ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] hash size Check the variable hash size should set variables-hash-bucket-size" classname="nginx-ingress-controller e2e suite" status="passed" time="29.128095">
              <system-err>&gt; Enter [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:08:13.284&#xA;&lt; Exit [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:08:21.091 (7.807s)&#xA;&gt; Enter [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:32 @ 03/16/23 07:08:21.091&#xA;&lt; Exit [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:32 @ 03/16/23 07:08:32.12 (11.029s)&#xA;&gt; Enter [It] should set variables-hash-bucket-size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:80 @ 03/16/23 07:08:32.12&#xA;&lt; Exit [It] should set variables-hash-bucket-size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:80 @ 03/16/23 07:08:42.198 (10.078s)&#xA;&gt; Enter [AfterEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:08:42.198&#xA;&lt; Exit [AfterEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:08:42.412 (214ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Security] Pod Security Policies should be running with a Pod Security Policy" classname="nginx-ingress-controller e2e suite" status="skipped" time="6.999718888">
              <skipped message="skipped - PSP not supported in this version"></skipped>
              <system-err>&gt; Enter [BeforeEach] [Security] Pod Security Policies - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:08:42.412&#xA;&lt; Exit [BeforeEach] [Security] Pod Security Policies - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:08:49.236 (6.824s)&#xA;&gt; Enter [It] should be running with a Pod Security Policy - /go/src/k8s.io/ingress-nginx/test/e2e/settings/pod_security_policy.go:44 @ 03/16/23 07:08:49.236&#xA;[SKIPPED] PSP not supported in this version&#xA;In [It] at: /go/src/k8s.io/ingress-nginx/test/e2e/settings/pod_security_policy.go:56 @ 03/16/23 07:08:49.237&#xA;&lt; Exit [It] should be running with a Pod Security Policy - /go/src/k8s.io/ingress-nginx/test/e2e/settings/pod_security_policy.go:44 @ 03/16/23 07:08:49.237 (1ms)&#xA;&gt; Enter [AfterEach] [Security] Pod Security Policies - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:08:49.237&#xA;&lt; Exit [AfterEach] [Security] Pod Security Policies - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:08:49.412 (175ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] enable-real-ip should not trust X-Forwarded-For header when setting is false" classname="nginx-ingress-controller e2e suite" status="passed" time="35.571254479">
              <system-err>&gt; Enter [BeforeEach] [Setting] enable-real-ip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:08:49.412&#xA;&lt; Exit [BeforeEach] [Setting] enable-real-ip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:08:56.731 (7.319s)&#xA;&gt; Enter [BeforeEach] [Setting] enable-real-ip - /go/src/k8s.io/ingress-nginx/test/e2e/settings/enable_real_ip.go:35 @ 03/16/23 07:08:56.731&#xA;&lt; Exit [BeforeEach] [Setting] enable-real-ip - /go/src/k8s.io/ingress-nginx/test/e2e/settings/enable_real_ip.go:35 @ 03/16/23 07:09:07.759 (11.028s)&#xA;&gt; Enter [It] should not trust X-Forwarded-For header when setting is false - /go/src/k8s.io/ingress-nginx/test/e2e/settings/enable_real_ip.go:78 @ 03/16/23 07:09:07.759&#xA;&lt; Exit [It] should not trust X-Forwarded-For header when setting is false - /go/src/k8s.io/ingress-nginx/test/e2e/settings/enable_real_ip.go:78 @ 03/16/23 07:09:24.842 (17.083s)&#xA;&gt; Enter [AfterEach] [Setting] enable-real-ip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:09:24.842&#xA;&lt; Exit [AfterEach] [Setting] enable-real-ip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:09:24.984 (142ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] log-format-* Check log-format-escape-json and log-format-escape-none should enable the log-format-escape-json" classname="nginx-ingress-controller e2e suite" status="passed" time="75.086228558">
              <system-err>&gt; Enter [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:37:32.293&#xA;&lt; Exit [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:37:40.081 (7.787s)&#xA;&gt; Enter [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:33 @ 03/16/23 06:37:40.081&#xA;&lt; Exit [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:33 @ 03/16/23 06:38:37.125 (57.044s)&#xA;&gt; Enter [It] should enable the log-format-escape-json - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:47 @ 03/16/23 06:38:37.125&#xA;&lt; Exit [It] should enable the log-format-escape-json - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:47 @ 03/16/23 06:38:47.223 (10.098s)&#xA;&gt; Enter [AfterEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:38:47.223&#xA;&lt; Exit [AfterEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:38:47.379 (156ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Security] global-auth-url when global external authentication is configured should set snippet when global external auth is configured" classname="nginx-ingress-controller e2e suite" status="passed" time="67.723408207">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:38:47.38&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:38:54.411 (7.031s)&#xA;&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 03/16/23 06:38:54.411&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 03/16/23 06:39:14.442 (20.031s)&#xA;&gt; Enter [BeforeEach] when global external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:58 @ 03/16/23 06:39:14.442&#xA;STEP: Adding an ingress rule for /foo - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:61 @ 03/16/23 06:39:14.442&#xA;STEP: Adding an ingress rule for /bar - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:69 @ 03/16/23 06:39:24.553&#xA;STEP: Adding a global-auth-url to configMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:77 @ 03/16/23 06:39:34.69&#xA;&lt; Exit [BeforeEach] when global external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:58 @ 03/16/23 06:39:44.84 (30.397s)&#xA;&gt; Enter [It] should set snippet when global external auth is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:250 @ 03/16/23 06:39:44.84&#xA;STEP: Adding a global-auth-snippet to configMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:254 @ 03/16/23 06:39:44.84&#xA;&lt; Exit [It] should set snippet when global external auth is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:250 @ 03/16/23 06:39:54.956 (10.117s)&#xA;&gt; Enter [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:39:54.956&#xA;&lt; Exit [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:39:55.103 (147ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] affinity session-cookie-name should set secure in cookie with provided false annotation on https" classname="nginx-ingress-controller e2e suite" status="passed" time="21.152329311">
              <system-err>&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:39:55.104&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:40:02 (6.896s)&#xA;&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 03/16/23 06:40:02&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 03/16/23 06:40:06.029 (4.03s)&#xA;&gt; Enter [It] should set secure in cookie with provided false annotation on https - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:458 @ 03/16/23 06:40:06.029&#xA;&lt; Exit [It] should set secure in cookie with provided false annotation on https - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:458 @ 03/16/23 06:40:16.107 (10.078s)&#xA;&gt; Enter [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:40:16.107&#xA;&lt; Exit [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:40:16.256 (149ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] enable-access-log enable-rewrite-log set access_log off" classname="nginx-ingress-controller e2e suite" status="passed" time="22.128870977">
              <system-err>&gt; Enter [BeforeEach] [Annotations] enable-access-log enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:40:16.257&#xA;&lt; Exit [BeforeEach] [Annotations] enable-access-log enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:40:24.101 (7.844s)&#xA;&gt; Enter [BeforeEach] [Annotations] enable-access-log enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/log.go:30 @ 03/16/23 06:40:24.101&#xA;&lt; Exit [BeforeEach] [Annotations] enable-access-log enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/log.go:30 @ 03/16/23 06:40:28.12 (4.019s)&#xA;&gt; Enter [It] set access_log off - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/log.go:34 @ 03/16/23 06:40:28.12&#xA;&lt; Exit [It] set access_log off - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/log.go:34 @ 03/16/23 06:40:38.23 (10.11s)&#xA;&gt; Enter [AfterEach] [Annotations] enable-access-log enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:40:38.23&#xA;&lt; Exit [AfterEach] [Annotations] enable-access-log enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:40:38.386 (155ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* when canaried by weight should route requests only to canary if canary weight is 100" classname="nginx-ingress-controller e2e suite" status="passed" time="32.782886842">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:40:38.386&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:40:45.741 (7.356s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 03/16/23 06:40:45.741&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 03/16/23 06:40:53.777 (8.035s)&#xA;&gt; Enter [It] should route requests only to canary if canary weight is 100 - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:743 @ 03/16/23 06:40:53.777&#xA;&lt; Exit [It] should route requests only to canary if canary weight is 100 - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:743 @ 03/16/23 06:41:10.927 (17.151s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:41:10.927&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:41:11.169 (242ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* when external authentication is configured with a custom redirect param should return status code 200 when signed in" classname="nginx-ingress-controller e2e suite" status="passed" time="30.135443482">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:41:11.169&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:41:21.029 (9.86s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 06:41:21.029&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 06:41:25.045 (4.016s)&#xA;&gt; Enter [BeforeEach] when external authentication is configured with a custom redirect param - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:651 @ 03/16/23 06:41:25.045&#xA;&lt; Exit [BeforeEach] when external authentication is configured with a custom redirect param - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:651 @ 03/16/23 06:41:41.16 (16.115s)&#xA;&gt; Enter [It] should return status code 200 when signed in - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:678 @ 03/16/23 06:41:41.16&#xA;&lt; Exit [It] should return status code 200 when signed in - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:678 @ 03/16/23 06:41:41.164 (4ms)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:41:41.164&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:41:41.305 (141ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] proxy-* should set proxy client-max-body-size to 8m" classname="nginx-ingress-controller e2e suite" status="passed" time="23.717989355">
              <system-err>&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:41:41.305&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:41:50.718 (9.412s)&#xA;&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 03/16/23 06:41:50.718&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 03/16/23 06:41:54.738 (4.021s)&#xA;&gt; Enter [It] should set proxy client-max-body-size to 8m - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:85 @ 03/16/23 06:41:54.738&#xA;&lt; Exit [It] should set proxy client-max-body-size to 8m - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:85 @ 03/16/23 06:42:04.85 (10.112s)&#xA;&gt; Enter [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:42:04.85&#xA;&lt; Exit [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:42:05.023 (173ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Ingress] [PathType] mix Exact and Prefix paths should choose the correct location" classname="nginx-ingress-controller e2e suite" status="passed" time="45.394796864">
              <system-err>&gt; Enter [BeforeEach] [Ingress] [PathType] mix Exact and Prefix paths - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:42:05.024&#xA;&lt; Exit [BeforeEach] [Ingress] [PathType] mix Exact and Prefix paths - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:42:11.991 (6.967s)&#xA;&gt; Enter [BeforeEach] [Ingress] [PathType] mix Exact and Prefix paths - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/pathtype_mixed.go:33 @ 03/16/23 06:42:11.991&#xA;&lt; Exit [BeforeEach] [Ingress] [PathType] mix Exact and Prefix paths - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/pathtype_mixed.go:33 @ 03/16/23 06:42:16.018 (4.027s)&#xA;&gt; Enter [It] should choose the correct location - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/pathtype_mixed.go:39 @ 03/16/23 06:42:16.018&#xA;STEP: Checking exact request to / - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/pathtype_mixed.go:63 @ 03/16/23 06:42:33.112&#xA;STEP: Checking prefix request to /bar - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/pathtype_mixed.go:76 @ 03/16/23 06:42:33.115&#xA;STEP: Checking exact request to /foo - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/pathtype_mixed.go:109 @ 03/16/23 06:42:50.242&#xA;STEP: Checking prefix request to /foo/bar - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/pathtype_mixed.go:122 @ 03/16/23 06:42:50.245&#xA;STEP: Checking prefix request to /foobar - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/pathtype_mixed.go:134 @ 03/16/23 06:42:50.247&#xA;&lt; Exit [It] should choose the correct location - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/pathtype_mixed.go:39 @ 03/16/23 06:42:50.25 (34.232s)&#xA;&gt; Enter [AfterEach] [Ingress] [PathType] mix Exact and Prefix paths - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:42:50.25&#xA;&lt; Exit [AfterEach] [Ingress] [PathType] mix Exact and Prefix paths - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:42:50.418 (169ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] OCSP should enable OCSP and contain stapling information in the connection" classname="nginx-ingress-controller e2e suite" status="passed" time="50.036399203">
              <system-err>&gt; Enter [BeforeEach] [Setting] OCSP - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:42:50.419&#xA;&lt; Exit [BeforeEach] [Setting] OCSP - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:42:57.401 (6.982s)&#xA;&gt; Enter [BeforeEach] [Setting] OCSP - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ocsp/ocsp.go:45 @ 03/16/23 06:42:57.401&#xA;&lt; Exit [BeforeEach] [Setting] OCSP - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ocsp/ocsp.go:45 @ 03/16/23 06:42:59.42 (2.019s)&#xA;&gt; Enter [It] should enable OCSP and contain stapling information in the connection - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ocsp/ocsp.go:49 @ 03/16/23 06:42:59.42&#xA;STEP: running cfssl gencert -initca ca_csr.json | cfssljson -bare ca - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ocsp/ocsp.go:216 @ 03/16/23 06:43:06.434&#xA;STEP: running cfssl gencert -ca ca.pem -ca-key ca-key.pem -config=cfssl_config.json -profile=intermediate intermediate_ca_csr.json | cfssljson -bare intermediate_ca - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ocsp/ocsp.go:216 @ 03/16/23 06:43:06.531&#xA;STEP: running cfssl gencert -ca intermediate_ca.pem -ca-key intermediate_ca-key.pem -config=cfssl_config.json -profile=ocsp ocsp_csr.json | cfssljson -bare ocsp - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ocsp/ocsp.go:216 @ 03/16/23 06:43:06.637&#xA;STEP: running cfssl serve -db-config=db-config.json -ca-key=intermediate_ca-key.pem -ca=intermediate_ca.pem -config=cfssl_config.json -responder=ocsp.pem -responder-key=ocsp-key.pem - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ocsp/ocsp.go:228 @ 03/16/23 06:43:06.756&#xA;STEP: running cfssl gencert -remote=localhost -profile=server leaf_csr.json | cfssljson -bare leaf - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ocsp/ocsp.go:238 @ 03/16/23 06:43:11.757&#xA;STEP: running cfssl ocsprefresh -ca intermediate_ca.pem -responder=ocsp.pem -responder-key=ocsp-key.pem -db-config=db-config.json - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ocsp/ocsp.go:252 @ 03/16/23 06:43:11.906&#xA;&lt; Exit [It] should enable OCSP and contain stapling information in the connection - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ocsp/ocsp.go:49 @ 03/16/23 06:43:40.222 (40.802s)&#xA;&gt; Enter [AfterEach] [Setting] OCSP - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:43:40.222&#xA;&lt; Exit [AfterEach] [Setting] OCSP - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:43:40.455 (233ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] Geoip2 should only allow requests from specific countries" classname="nginx-ingress-controller e2e suite" status="skipped" time="8.977873519">
              <skipped message="skipped - GeoIP test are temporarily disabled"></skipped>
              <system-err>&gt; Enter [BeforeEach] [Setting] Geoip2 - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:43:40.456&#xA;&lt; Exit [BeforeEach] [Setting] Geoip2 - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:43:47.284 (6.828s)&#xA;&gt; Enter [BeforeEach] [Setting] Geoip2 - /go/src/k8s.io/ingress-nginx/test/e2e/settings/geoip2.go:42 @ 03/16/23 06:43:47.284&#xA;&lt; Exit [BeforeEach] [Setting] Geoip2 - /go/src/k8s.io/ingress-nginx/test/e2e/settings/geoip2.go:42 @ 03/16/23 06:43:49.303 (2.02s)&#xA;&gt; Enter [It] should only allow requests from specific countries - /go/src/k8s.io/ingress-nginx/test/e2e/settings/geoip2.go:70 @ 03/16/23 06:43:49.303&#xA;[SKIPPED] GeoIP test are temporarily disabled&#xA;In [It] at: /go/src/k8s.io/ingress-nginx/test/e2e/settings/geoip2.go:71 @ 03/16/23 06:43:49.303&#xA;&lt; Exit [It] should only allow requests from specific countries - /go/src/k8s.io/ingress-nginx/test/e2e/settings/geoip2.go:70 @ 03/16/23 06:43:49.303 (0s)&#xA;&gt; Enter [AfterEach] [Setting] Geoip2 - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:43:49.303&#xA;&lt; Exit [AfterEach] [Setting] Geoip2 - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:43:49.434 (130ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] backend-protocol should set backend protocol to $scheme:// and use proxy_pass" classname="nginx-ingress-controller e2e suite" status="passed" time="21.145412802">
              <system-err>&gt; Enter [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:43:49.434&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:43:56.248 (6.814s)&#xA;&gt; Enter [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:30 @ 03/16/23 06:43:56.248&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:30 @ 03/16/23 06:44:00.28 (4.032s)&#xA;&gt; Enter [It] should set backend protocol to $scheme:// and use proxy_pass - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:49 @ 03/16/23 06:44:00.28&#xA;&lt; Exit [It] should set backend protocol to $scheme:// and use proxy_pass - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:49 @ 03/16/23 06:44:10.4 (10.12s)&#xA;&gt; Enter [AfterEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:44:10.4&#xA;&lt; Exit [AfterEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:44:10.579 (179ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should allow - missing origins (should allow all origins)" classname="nginx-ingress-controller e2e suite" status="passed" time="18.077566953">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:44:10.58&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:44:17.486 (6.906s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 03/16/23 06:44:17.486&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 03/16/23 06:44:21.503 (4.017s)&#xA;&gt; Enter [It] should allow - missing origins (should allow all origins) - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:571 @ 03/16/23 06:44:21.503&#xA;&lt; Exit [It] should allow - missing origins (should allow all origins) - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:571 @ 03/16/23 06:44:28.524 (7.021s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:44:28.524&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:44:28.658 (133ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] proxy-ssl-* should set valid proxy-ssl-secret, proxy-ssl-ciphers to HIGH:!AES" classname="nginx-ingress-controller e2e suite" status="passed" time="21.269250261">
              <system-err>&gt; Enter [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:44:28.658&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:44:35.489 (6.831s)&#xA;&gt; Enter [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:33 @ 03/16/23 06:44:35.489&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:33 @ 03/16/23 06:44:39.511 (4.022s)&#xA;&gt; Enter [It] should set valid proxy-ssl-secret, proxy-ssl-ciphers to HIGH:!AES - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:94 @ 03/16/23 06:44:39.511&#xA;&lt; Exit [It] should set valid proxy-ssl-secret, proxy-ssl-ciphers to HIGH:!AES - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:94 @ 03/16/23 06:44:49.779 (10.268s)&#xA;&gt; Enter [AfterEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:44:49.779&#xA;&lt; Exit [AfterEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:44:49.927 (148ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-tls-* should return 200 using auth-tls-match-cn where atleast one of the regex options matches CN from client" classname="nginx-ingress-controller e2e suite" status="passed" time="21.574356645">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:44:49.928&#xA;&lt; Exit [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:44:56.769 (6.841s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:32 @ 03/16/23 06:44:56.769&#xA;&lt; Exit [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:32 @ 03/16/23 06:45:00.792 (4.023s)&#xA;&gt; Enter [It] should return 200 using auth-tls-match-cn where atleast one of the regex options matches CN from client - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:324 @ 03/16/23 06:45:00.792&#xA;&lt; Exit [It] should return 200 using auth-tls-match-cn where atleast one of the regex options matches CN from client - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:324 @ 03/16/23 06:45:11.32 (10.528s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:45:11.32&#xA;&lt; Exit [AfterEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:45:11.502 (182ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] permanent-redirect permanent-redirect-code should respond with a custom redirect code" classname="nginx-ingress-controller e2e suite" status="passed" time="17.195231063">
              <system-err>&gt; Enter [BeforeEach] [Annotations] permanent-redirect permanent-redirect-code - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:45:11.502&#xA;&lt; Exit [BeforeEach] [Annotations] permanent-redirect permanent-redirect-code - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:45:18.434 (6.932s)&#xA;&gt; Enter [It] should respond with a custom redirect code - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/redirect.go:61 @ 03/16/23 06:45:18.434&#xA;STEP: setting permanent-redirect-code annotation - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/redirect.go:62 @ 03/16/23 06:45:18.434&#xA;STEP: sending request to redirected URL path - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/redirect.go:82 @ 03/16/23 06:45:28.545&#xA;&lt; Exit [It] should respond with a custom redirect code - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/redirect.go:61 @ 03/16/23 06:45:28.547 (10.113s)&#xA;&gt; Enter [AfterEach] [Annotations] permanent-redirect permanent-redirect-code - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:45:28.547&#xA;&lt; Exit [AfterEach] [Annotations] permanent-redirect permanent-redirect-code - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:45:28.698 (150ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] keep-alive keep-alive-requests Check the keep alive should set keepalive_requests" classname="nginx-ingress-controller e2e suite" status="passed" time="28.110302953">
              <system-err>&gt; Enter [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:45:28.698&#xA;&lt; Exit [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:45:35.544 (6.846s)&#xA;&gt; Enter [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:33 @ 03/16/23 06:45:35.544&#xA;&lt; Exit [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:33 @ 03/16/23 06:45:46.582 (11.038s)&#xA;&gt; Enter [It] should set keepalive_requests - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:48 @ 03/16/23 06:45:46.582&#xA;&lt; Exit [It] should set keepalive_requests - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:48 @ 03/16/23 06:45:56.673 (10.091s)&#xA;&gt; Enter [AfterEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:45:56.673&#xA;&lt; Exit [AfterEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:45:56.808 (135ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] affinity session-cookie-name should not set secure in cookie with provided false annotation on http" classname="nginx-ingress-controller e2e suite" status="passed" time="21.126139711">
              <system-err>&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:45:56.809&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:46:03.615 (6.806s)&#xA;&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 03/16/23 06:46:03.615&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 03/16/23 06:46:07.64 (4.026s)&#xA;&gt; Enter [It] should not set secure in cookie with provided false annotation on http - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:435 @ 03/16/23 06:46:07.64&#xA;&lt; Exit [It] should not set secure in cookie with provided false annotation on http - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:435 @ 03/16/23 06:46:17.741 (10.1s)&#xA;&gt; Enter [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:46:17.741&#xA;&lt; Exit [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:46:17.935 (194ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] client-body-buffer-size should set client_body_buffer_size to 1000" classname="nginx-ingress-controller e2e suite" status="passed" time="21.162263379">
              <system-err>&gt; Enter [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:46:17.936&#xA;&lt; Exit [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:46:24.764 (6.828s)&#xA;&gt; Enter [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:31 @ 03/16/23 06:46:24.764&#xA;&lt; Exit [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:31 @ 03/16/23 06:46:28.795 (4.031s)&#xA;&gt; Enter [It] should set client_body_buffer_size to 1000 - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:35 @ 03/16/23 06:46:28.795&#xA;&lt; Exit [It] should set client_body_buffer_size to 1000 - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:35 @ 03/16/23 06:46:38.94 (10.145s)&#xA;&gt; Enter [AfterEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:46:38.94&#xA;&lt; Exit [AfterEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:46:39.098 (158ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should allow - single origin with required port" classname="nginx-ingress-controller e2e suite" status="passed" time="17.981852377">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:46:39.098&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:46:45.908 (6.81s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 03/16/23 06:46:45.908&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 03/16/23 06:46:49.933 (4.025s)&#xA;&gt; Enter [It] should allow - single origin with required port - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:358 @ 03/16/23 06:46:49.933&#xA;&lt; Exit [It] should allow - single origin with required port - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:358 @ 03/16/23 06:46:56.945 (7.012s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:46:56.945&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:46:57.08 (135ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] enable-multi-accept should be disabled when set to false" classname="nginx-ingress-controller e2e suite" status="passed" time="17.120777113">
              <system-err>&gt; Enter [BeforeEach] [Setting] enable-multi-accept - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:46:57.081&#xA;&lt; Exit [BeforeEach] [Setting] enable-multi-accept - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:47:03.942 (6.862s)&#xA;&gt; Enter [It] should be disabled when set to false - /go/src/k8s.io/ingress-nginx/test/e2e/settings/multi_accept.go:49 @ 03/16/23 06:47:03.942&#xA;&lt; Exit [It] should be disabled when set to false - /go/src/k8s.io/ingress-nginx/test/e2e/settings/multi_accept.go:49 @ 03/16/23 06:47:14.045 (10.103s)&#xA;&gt; Enter [AfterEach] [Setting] enable-multi-accept - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:47:14.045&#xA;&lt; Exit [AfterEach] [Setting] enable-multi-accept - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:47:14.201 (156ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] use-proxy-protocol should enable PROXY Protocol for HTTPS" classname="nginx-ingress-controller e2e suite" status="passed" time="111.427124157">
              <system-err>&gt; Enter [BeforeEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:47:14.202&#xA;&lt; Exit [BeforeEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:47:22.075 (7.874s)&#xA;&gt; Enter [BeforeEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_protocol.go:41 @ 03/16/23 06:47:22.076&#xA;&lt; Exit [BeforeEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_protocol.go:41 @ 03/16/23 06:47:33.109 (11.034s)&#xA;&gt; Enter [It] should enable PROXY Protocol for HTTPS - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_protocol.go:112 @ 03/16/23 06:47:33.109&#xA;&lt; Exit [It] should enable PROXY Protocol for HTTPS - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_protocol.go:112 @ 03/16/23 06:49:05.497 (1m32.388s)&#xA;&gt; Enter [AfterEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:49:05.497&#xA;&lt; Exit [AfterEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:49:05.629 (132ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] satisfy should configure satisfy directive correctly" classname="nginx-ingress-controller e2e suite" status="passed" time="26.226533632">
              <system-err>&gt; Enter [BeforeEach] [Annotations] satisfy - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:49:05.629&#xA;&lt; Exit [BeforeEach] [Annotations] satisfy - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:49:12.457 (6.827s)&#xA;&gt; Enter [BeforeEach] [Annotations] satisfy - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/satisfy.go:38 @ 03/16/23 06:49:12.457&#xA;&lt; Exit [BeforeEach] [Annotations] satisfy - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/satisfy.go:38 @ 03/16/23 06:49:16.487 (4.03s)&#xA;&gt; Enter [It] should configure satisfy directive correctly - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/satisfy.go:42 @ 03/16/23 06:49:16.487&#xA;&lt; Exit [It] should configure satisfy directive correctly - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/satisfy.go:42 @ 03/16/23 06:49:31.695 (15.209s)&#xA;&gt; Enter [AfterEach] [Annotations] satisfy - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:49:31.695&#xA;&lt; Exit [AfterEach] [Annotations] satisfy - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:49:31.856 (161ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* should return status code 200 when no authentication is configured" classname="nginx-ingress-controller e2e suite" status="passed" time="21.087896863">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:49:31.856&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:49:38.687 (6.831s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 06:49:38.687&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 06:49:42.713 (4.025s)&#xA;&gt; Enter [It] should return status code 200 when no authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:46 @ 03/16/23 06:49:42.713&#xA;&lt; Exit [It] should return status code 200 when no authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:46 @ 03/16/23 06:49:52.799 (10.086s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:49:52.799&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:49:52.944 (145ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] backend-protocol should set backend protocol to grpcs:// and use grpc_pass" classname="nginx-ingress-controller e2e suite" status="passed" time="21.206123482">
              <system-err>&gt; Enter [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:49:52.944&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:49:59.804 (6.859s)&#xA;&gt; Enter [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:30 @ 03/16/23 06:49:59.804&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:30 @ 03/16/23 06:50:03.822 (4.018s)&#xA;&gt; Enter [It] should set backend protocol to grpcs:// and use grpc_pass - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:79 @ 03/16/23 06:50:03.822&#xA;&lt; Exit [It] should set backend protocol to grpcs:// and use grpc_pass - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:79 @ 03/16/23 06:50:13.92 (10.098s)&#xA;&gt; Enter [AfterEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:50:13.92&#xA;&lt; Exit [AfterEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:50:14.15 (230ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] ssl-ciphers Add ssl ciphers" classname="nginx-ingress-controller e2e suite" status="passed" time="18.163725302">
              <system-err>&gt; Enter [BeforeEach] [Setting] ssl-ciphers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:50:14.151&#xA;&lt; Exit [BeforeEach] [Setting] ssl-ciphers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:50:22.017 (7.866s)&#xA;&gt; Enter [It] Add ssl ciphers - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ssl_ciphers.go:31 @ 03/16/23 06:50:22.017&#xA;&lt; Exit [It] Add ssl ciphers - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ssl_ciphers.go:31 @ 03/16/23 06:50:32.133 (10.116s)&#xA;&gt; Enter [AfterEach] [Setting] ssl-ciphers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:50:32.133&#xA;&lt; Exit [AfterEach] [Setting] ssl-ciphers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:50:32.315 (182ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] modsecurity owasp should disable modsecurity" classname="nginx-ingress-controller e2e suite" status="passed" time="22.090905939">
              <system-err>&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:50:32.316&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:50:40.115 (7.8s)&#xA;&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 03/16/23 06:50:40.115&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 03/16/23 06:50:44.139 (4.024s)&#xA;&gt; Enter [It] should disable modsecurity - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:74 @ 03/16/23 06:50:44.139&#xA;&lt; Exit [It] should disable modsecurity - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:74 @ 03/16/23 06:50:54.273 (10.134s)&#xA;&gt; Enter [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:50:54.273&#xA;&lt; Exit [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:50:54.406 (133ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* cookie set by external authentication server user with annotated ingress retains cookie if upstream returns error status code" classname="nginx-ingress-controller e2e suite" status="passed" time="35.243505195">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:50:54.407&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:51:01.239 (6.832s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 06:51:01.239&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 06:51:03.26 (2.021s)&#xA;&gt; Enter [BeforeEach] cookie set by external authentication server - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:383 @ 03/16/23 06:51:03.26&#xA;&lt; Exit [BeforeEach] cookie set by external authentication server - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:383 @ 03/16/23 06:51:24.395 (21.135s)&#xA;&gt; Enter [It] user with annotated ingress retains cookie if upstream returns error status code - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:433 @ 03/16/23 06:51:24.395&#xA;&lt; Exit [It] user with annotated ingress retains cookie if upstream returns error status code - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:433 @ 03/16/23 06:51:29.503 (5.109s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:51:29.503&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:51:29.65 (147ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] ingress-class With default ingress class config should ignore Ingress with different controller class" classname="nginx-ingress-controller e2e suite" status="passed" time="28.124769444">
              <system-err>&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:51:29.651&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:51:36.527 (6.876s)&#xA;&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 03/16/23 06:51:36.527&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 03/16/23 06:51:40.546 (4.019s)&#xA;&gt; Enter [It] should ignore Ingress with different controller class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:104 @ 03/16/23 06:51:40.546&#xA;&lt; Exit [It] should ignore Ingress with different controller class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:104 @ 03/16/23 06:51:57.649 (17.103s)&#xA;&gt; Enter [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:51:57.649&#xA;&lt; Exit [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:51:57.776 (127ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] single ingress - multiple hosts should set the correct $service_name NGINX variable" classname="nginx-ingress-controller e2e suite" status="passed" time="28.267564007">
              <system-err>&gt; Enter [BeforeEach] single ingress - multiple hosts - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:51:57.776&#xA;&lt; Exit [BeforeEach] single ingress - multiple hosts - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:52:04.622 (6.846s)&#xA;&gt; Enter [BeforeEach] single ingress - multiple hosts - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/multiple_rules.go:33 @ 03/16/23 06:52:04.622&#xA;&lt; Exit [BeforeEach] single ingress - multiple hosts - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/multiple_rules.go:33 @ 03/16/23 06:52:12.667 (8.045s)&#xA;&gt; Enter [It] should set the correct $service_name NGINX variable - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/multiple_rules.go:38 @ 03/16/23 06:52:12.667&#xA;&lt; Exit [It] should set the correct $service_name NGINX variable - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/multiple_rules.go:38 @ 03/16/23 06:52:25.881 (13.214s)&#xA;&gt; Enter [AfterEach] single ingress - multiple hosts - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:52:25.881&#xA;&lt; Exit [AfterEach] single ingress - multiple hosts - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:52:26.044 (163ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Service] Type ExternalName should update the external name after a service update" classname="nginx-ingress-controller e2e suite" status="passed" time="23.596927514">
              <system-err>&gt; Enter [BeforeEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:52:26.044&#xA;&lt; Exit [BeforeEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:52:32.86 (6.816s)&#xA;&gt; Enter [It] should update the external name after a service update - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_externalname.go:248 @ 03/16/23 06:52:32.86&#xA;STEP: checking the service is updated to use eu.httpbin.org - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_externalname.go:304 @ 03/16/23 06:52:49.378&#xA;&lt; Exit [It] should update the external name after a service update - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_externalname.go:248 @ 03/16/23 06:52:49.458 (16.598s)&#xA;&gt; Enter [AfterEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:52:49.458&#xA;&lt; Exit [AfterEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:52:49.641 (183ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] use-proxy-protocol should respect port passed by the PROXY Protocol" classname="nginx-ingress-controller e2e suite" status="passed" time="108.145548183">
              <system-err>&gt; Enter [BeforeEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:52:49.642&#xA;&lt; Exit [BeforeEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:52:56.469 (6.826s)&#xA;&gt; Enter [BeforeEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_protocol.go:41 @ 03/16/23 06:52:56.469&#xA;&lt; Exit [BeforeEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_protocol.go:41 @ 03/16/23 06:53:05.497 (9.028s)&#xA;&gt; Enter [It] should respect port passed by the PROXY Protocol - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_protocol.go:46 @ 03/16/23 06:53:05.497&#xA;&lt; Exit [It] should respect port passed by the PROXY Protocol - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_protocol.go:46 @ 03/16/23 06:54:37.628 (1m32.131s)&#xA;&gt; Enter [AfterEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:54:37.628&#xA;&lt; Exit [AfterEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:54:37.788 (160ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* when canary is created should route requests to the correct upstream if the canary ingress is modified" classname="nginx-ingress-controller e2e suite" status="passed" time="39.295619717">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:54:37.788&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:54:44.595 (6.807s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 03/16/23 06:54:44.595&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 03/16/23 06:54:52.642 (8.046s)&#xA;&gt; Enter [It] should route requests to the correct upstream if the canary ingress is modified - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:307 @ 03/16/23 06:54:52.642&#xA;STEP: routing requests destined for the mainline ingress to the mainline upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:351 @ 03/16/23 06:55:16.937&#xA;STEP: routing requests destined for the canary ingress to the canary upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:360 @ 03/16/23 06:55:16.939&#xA;&lt; Exit [It] should route requests to the correct upstream if the canary ingress is modified - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:307 @ 03/16/23 06:55:16.941 (24.3s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:55:16.941&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:55:17.084 (143ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* canary affinity behavior always routes traffic to canary if first request was affinitized to canary (default behavior)" classname="nginx-ingress-controller e2e suite" status="passed" time="40.560359053">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:55:17.084&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:55:23.905 (6.821s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 03/16/23 06:55:23.905&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 03/16/23 06:55:31.941 (8.036s)&#xA;&gt; Enter [It] always routes traffic to canary if first request was affinitized to canary (default behavior) - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:916 @ 03/16/23 06:55:31.941&#xA;&lt; Exit [It] always routes traffic to canary if first request was affinitized to canary (default behavior) - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:916 @ 03/16/23 06:55:57.47 (25.529s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:55:57.47&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:55:57.644 (174ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Security] block-* should block User-Agents defined in the ConfigMap" classname="nginx-ingress-controller e2e suite" status="passed" time="27.174646446">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Security] block-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:55:57.645&#xA;&lt; Exit [BeforeEach] [Setting] [Security] block-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:56:05.49 (7.845s)&#xA;&gt; Enter [BeforeEach] [Setting] [Security] block-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_access_block.go:33 @ 03/16/23 06:56:05.49&#xA;&lt; Exit [BeforeEach] [Setting] [Security] block-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_access_block.go:33 @ 03/16/23 06:56:14.516 (9.026s)&#xA;&gt; Enter [It] should block User-Agents defined in the ConfigMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_access_block.go:55 @ 03/16/23 06:56:14.516&#xA;&lt; Exit [It] should block User-Agents defined in the ConfigMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_access_block.go:55 @ 03/16/23 06:56:24.636 (10.12s)&#xA;&gt; Enter [AfterEach] [Setting] [Security] block-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:56:24.636&#xA;&lt; Exit [AfterEach] [Setting] [Security] block-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:56:24.819 (183ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Security] global-auth-url when global external authentication is configured should set request-redirect when global-auth-request-redirect is configured" classname="nginx-ingress-controller e2e suite" status="passed" time="55.430779134">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:56:24.82&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:56:31.683 (6.863s)&#xA;&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 03/16/23 06:56:31.683&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 03/16/23 06:56:39.728 (8.044s)&#xA;&gt; Enter [BeforeEach] when global external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:58 @ 03/16/23 06:56:39.728&#xA;STEP: Adding an ingress rule for /foo - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:61 @ 03/16/23 06:56:39.728&#xA;STEP: Adding an ingress rule for /bar - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:69 @ 03/16/23 06:56:49.836&#xA;STEP: Adding a global-auth-url to configMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:77 @ 03/16/23 06:56:59.901&#xA;&lt; Exit [BeforeEach] when global external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:58 @ 03/16/23 06:57:09.996 (30.268s)&#xA;&gt; Enter [It] should set request-redirect when global-auth-request-redirect is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:237 @ 03/16/23 06:57:09.996&#xA;STEP: Adding a global-auth-request-redirect to configMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:242 @ 03/16/23 06:57:09.996&#xA;&lt; Exit [It] should set request-redirect when global-auth-request-redirect is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:237 @ 03/16/23 06:57:20.091 (10.095s)&#xA;&gt; Enter [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:57:20.091&#xA;&lt; Exit [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:57:20.251 (160ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] ingress-class With default ingress class config should ignore Ingress without IngressClass configuration" classname="nginx-ingress-controller e2e suite" status="passed" time="30.114866463">
              <system-err>&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:57:20.251&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:57:27.078 (6.827s)&#xA;&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 03/16/23 06:57:27.078&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 03/16/23 06:57:33.099 (6.021s)&#xA;&gt; Enter [It] should ignore Ingress without IngressClass configuration - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:164 @ 03/16/23 06:57:33.099&#xA;&lt; Exit [It] should ignore Ingress without IngressClass configuration - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:164 @ 03/16/23 06:57:50.238 (17.139s)&#xA;&gt; Enter [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:57:50.238&#xA;&lt; Exit [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:57:50.366 (128ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] hash size Check server names hash size should set server_names_hash_max_size" classname="nginx-ingress-controller e2e suite" status="passed" time="29.140915567">
              <system-err>&gt; Enter [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:57:50.366&#xA;&lt; Exit [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:57:58.19 (7.824s)&#xA;&gt; Enter [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:32 @ 03/16/23 06:57:58.19&#xA;&lt; Exit [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:32 @ 03/16/23 06:58:09.222 (11.032s)&#xA;&gt; Enter [It] should set server_names_hash_max_size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:48 @ 03/16/23 06:58:09.222&#xA;&lt; Exit [It] should set server_names_hash_max_size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:48 @ 03/16/23 06:58:19.328 (10.106s)&#xA;&gt; Enter [AfterEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:58:19.328&#xA;&lt; Exit [AfterEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:58:19.507 (179ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should allow - matching origin+port with wildcard origin" classname="nginx-ingress-controller e2e suite" status="passed" time="18.26559347">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:58:19.508&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:58:26.564 (7.056s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 03/16/23 06:58:26.564&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 03/16/23 06:58:30.59 (4.027s)&#xA;&gt; Enter [It] should allow - matching origin+port with wildcard origin - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:488 @ 03/16/23 06:58:30.59&#xA;&lt; Exit [It] should allow - matching origin+port with wildcard origin - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:488 @ 03/16/23 06:58:37.602 (7.012s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:58:37.602&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:58:37.773 (171ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] reuse-port reuse port should be enabled" classname="nginx-ingress-controller e2e suite" status="passed" time="28.187087235">
              <system-err>&gt; Enter [BeforeEach] [Setting] reuse-port - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:58:37.774&#xA;&lt; Exit [BeforeEach] [Setting] reuse-port - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:58:44.657 (6.883s)&#xA;&gt; Enter [BeforeEach] [Setting] reuse-port - /go/src/k8s.io/ingress-nginx/test/e2e/settings/reuse-port.go:32 @ 03/16/23 06:58:44.657&#xA;&lt; Exit [BeforeEach] [Setting] reuse-port - /go/src/k8s.io/ingress-nginx/test/e2e/settings/reuse-port.go:32 @ 03/16/23 06:58:55.694 (11.037s)&#xA;&gt; Enter [It] reuse port should be enabled - /go/src/k8s.io/ingress-nginx/test/e2e/settings/reuse-port.go:52 @ 03/16/23 06:58:55.694&#xA;&lt; Exit [It] reuse port should be enabled - /go/src/k8s.io/ingress-nginx/test/e2e/settings/reuse-port.go:52 @ 03/16/23 06:59:05.794 (10.101s)&#xA;&gt; Enter [AfterEach] [Setting] reuse-port - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:59:05.794&#xA;&lt; Exit [AfterEach] [Setting] reuse-port - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:59:05.961 (167ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Lua] dynamic certificates picks up the certificate when we add TLS spec to existing ingress" classname="nginx-ingress-controller e2e suite" status="passed" time="26.139020573">
              <system-err>&gt; Enter [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:59:05.962&#xA;&lt; Exit [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:59:12.776 (6.815s)&#xA;&gt; Enter [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:41 @ 03/16/23 06:59:12.776&#xA;&lt; Exit [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:41 @ 03/16/23 06:59:16.796 (4.019s)&#xA;&gt; Enter [It] picks up the certificate when we add TLS spec to existing ingress - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:45 @ 03/16/23 06:59:16.796&#xA;&lt; Exit [It] picks up the certificate when we add TLS spec to existing ingress - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:45 @ 03/16/23 06:59:31.971 (15.176s)&#xA;&gt; Enter [AfterEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:59:31.971&#xA;&lt; Exit [AfterEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:59:32.101 (129ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should not match" classname="nginx-ingress-controller e2e suite" status="passed" time="18.012647708">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:59:32.101&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:59:38.951 (6.85s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 03/16/23 06:59:38.951&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 03/16/23 06:59:42.979 (4.028s)&#xA;&gt; Enter [It] should not match - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:338 @ 03/16/23 06:59:42.979&#xA;&lt; Exit [It] should not match - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:338 @ 03/16/23 06:59:49.988 (7.01s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:59:49.988&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:59:50.114 (125ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] settings-global-rate-limit generates correct NGINX configuration" classname="nginx-ingress-controller e2e suite" status="passed" time="31.268792937">
              <system-err>&gt; Enter [BeforeEach] [Setting] settings-global-rate-limit - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:59:50.114&#xA;&lt; Exit [BeforeEach] [Setting] settings-global-rate-limit - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:59:57.038 (6.924s)&#xA;&gt; Enter [BeforeEach] [Setting] settings-global-rate-limit - /go/src/k8s.io/ingress-nginx/test/e2e/settings/globalratelimit.go:34 @ 03/16/23 06:59:57.038&#xA;&lt; Exit [BeforeEach] [Setting] settings-global-rate-limit - /go/src/k8s.io/ingress-nginx/test/e2e/settings/globalratelimit.go:34 @ 03/16/23 07:00:01.055 (4.017s)&#xA;&gt; Enter [It] generates correct NGINX configuration - /go/src/k8s.io/ingress-nginx/test/e2e/settings/globalratelimit.go:38 @ 03/16/23 07:00:01.055&#xA;STEP: generating correct defaults - /go/src/k8s.io/ingress-nginx/test/e2e/settings/globalratelimit.go:43 @ 03/16/23 07:00:08.062&#xA;STEP: applying customizations - /go/src/k8s.io/ingress-nginx/test/e2e/settings/globalratelimit.go:61 @ 03/16/23 07:00:11.147&#xA;&lt; Exit [It] generates correct NGINX configuration - /go/src/k8s.io/ingress-nginx/test/e2e/settings/globalratelimit.go:38 @ 03/16/23 07:00:21.252 (20.197s)&#xA;&gt; Enter [AfterEach] [Setting] settings-global-rate-limit - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:00:21.252&#xA;&lt; Exit [AfterEach] [Setting] settings-global-rate-limit - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:00:21.383 (131ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [SSL] TLS protocols, ciphers and headers) should configure HSTS policy header setting preload parameter" classname="nginx-ingress-controller e2e suite" status="passed" time="30.234602446">
              <system-err>&gt; Enter [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:00:21.383&#xA;&lt; Exit [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:00:28.186 (6.803s)&#xA;&gt; Enter [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:35 @ 03/16/23 07:00:28.186&#xA;&lt; Exit [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:35 @ 03/16/23 07:00:30.204 (2.018s)&#xA;&gt; Enter [BeforeEach] should configure HSTS policy header - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:100 @ 03/16/23 07:00:30.204&#xA;Mar 16 07:00:39.321: INFO: Unexpected TLS error: tls: failed to verify certificate: x509: certificate is valid for ingress.local, not settings-tls&#xA;&lt; Exit [BeforeEach] should configure HSTS policy header - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:100 @ 03/16/23 07:00:41.321 (11.117s)&#xA;&gt; Enter [It] setting preload parameter - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:146 @ 03/16/23 07:00:41.321&#xA;&lt; Exit [It] setting preload parameter - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:146 @ 03/16/23 07:00:51.443 (10.122s)&#xA;&gt; Enter [AfterEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:00:51.443&#xA;&lt; Exit [AfterEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:00:51.618 (175ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [SSL] TLS protocols, ciphers and headers) should configure TLS protocol setting cipher suite" classname="nginx-ingress-controller e2e suite" status="passed" time="32.218481431">
              <system-err>&gt; Enter [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:00:51.618&#xA;&lt; Exit [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:00:58.463 (6.845s)&#xA;&gt; Enter [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:35 @ 03/16/23 07:00:58.463&#xA;&lt; Exit [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:35 @ 03/16/23 07:01:02.482 (4.019s)&#xA;&gt; Enter [BeforeEach] should configure TLS protocol - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:47 @ 03/16/23 07:01:02.482&#xA;Mar 16 07:01:11.591: INFO: Unexpected TLS error: tls: failed to verify certificate: x509: certificate is valid for ingress.local, not settings-tls&#xA;&lt; Exit [BeforeEach] should configure TLS protocol - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:47 @ 03/16/23 07:01:13.591 (11.109s)&#xA;&gt; Enter [It] setting cipher suite - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:65 @ 03/16/23 07:01:13.591&#xA;&lt; Exit [It] setting cipher suite - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:65 @ 03/16/23 07:01:23.692 (10.101s)&#xA;&gt; Enter [AfterEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:01:23.692&#xA;&lt; Exit [AfterEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:01:23.837 (145ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Lua] dynamic configuration when only backends change handles endpoints only changes consistently (down scaling of replicas vs. empty service)" classname="nginx-ingress-controller e2e suite" status="passed" time="47.282554925">
              <system-err>&gt; Enter [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:01:23.837&#xA;&lt; Exit [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:01:30.668 (6.831s)&#xA;&gt; Enter [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:45 @ 03/16/23 07:01:30.668&#xA;&lt; Exit [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:45 @ 03/16/23 07:01:44.816 (14.148s)&#xA;&gt; Enter [It] handles endpoints only changes consistently (down scaling of replicas vs. empty service) - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:125 @ 03/16/23 07:01:44.816&#xA;&lt; Exit [It] handles endpoints only changes consistently (down scaling of replicas vs. empty service) - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:125 @ 03/16/23 07:02:10.94 (26.124s)&#xA;&gt; Enter [AfterEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:02:10.94&#xA;&lt; Exit [AfterEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:02:11.119 (180ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* when external authentication is configured should not create additional upstream block when auth-keepalive is set with HTTP/2" classname="nginx-ingress-controller e2e suite" status="passed" time="27.733812349">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:02:11.12&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:02:18.424 (7.304s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 07:02:18.424&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 07:02:22.441 (4.016s)&#xA;&gt; Enter [BeforeEach] when external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:458 @ 03/16/23 07:02:22.441&#xA;&lt; Exit [BeforeEach] when external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:458 @ 03/16/23 07:02:34.575 (12.134s)&#xA;&gt; Enter [It] should not create additional upstream block when auth-keepalive is set with HTTP/2 - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:609 @ 03/16/23 07:02:34.575&#xA;&lt; Exit [It] should not create additional upstream block when auth-keepalive is set with HTTP/2 - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:609 @ 03/16/23 07:02:38.686 (4.111s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:02:38.686&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:02:38.854 (168ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Default Backend] change default settings should apply the annotation to the default backend" classname="nginx-ingress-controller e2e suite" status="passed" time="23.312423823">
              <system-err>&gt; Enter [BeforeEach] [Default Backend] change default settings - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:02:38.854&#xA;&lt; Exit [BeforeEach] [Default Backend] change default settings - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:02:45.825 (6.97s)&#xA;&gt; Enter [BeforeEach] [Default Backend] change default settings - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/with_hosts.go:34 @ 03/16/23 07:02:45.825&#xA;&lt; Exit [BeforeEach] [Default Backend] change default settings - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/with_hosts.go:34 @ 03/16/23 07:02:51.841 (6.016s)&#xA;&gt; Enter [It] should apply the annotation to the default backend - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/with_hosts.go:38 @ 03/16/23 07:02:51.841&#xA;&lt; Exit [It] should apply the annotation to the default backend - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/with_hosts.go:38 @ 03/16/23 07:03:01.984 (10.143s)&#xA;&gt; Enter [AfterEach] [Default Backend] change default settings - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:03:01.984&#xA;&lt; Exit [AfterEach] [Default Backend] change default settings - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:03:02.167 (183ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* when canaried by header with value should route requests to the correct upstream" classname="nginx-ingress-controller e2e suite" status="passed" time="34.146531997">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:03:02.167&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:03:08.985 (6.818s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 03/16/23 07:03:08.985&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 03/16/23 07:03:19.017 (10.032s)&#xA;&gt; Enter [It] should route requests to the correct upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:426 @ 03/16/23 07:03:19.017&#xA;STEP: routing requests to the canary upstream when header is set to &#39;DoCanary&#39; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:451 @ 03/16/23 07:03:36.134&#xA;STEP: routing requests to the mainline upstream when header is set to &#39;always&#39; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:460 @ 03/16/23 07:03:36.137&#xA;STEP: routing requests to the mainline upstream when header is set to &#39;never&#39; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:469 @ 03/16/23 07:03:36.139&#xA;STEP: routing requests to the mainline upstream when header is set to anything else - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:478 @ 03/16/23 07:03:36.141&#xA;&lt; Exit [It] should route requests to the correct upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:426 @ 03/16/23 07:03:36.143 (17.126s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:03:36.143&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:03:36.314 (170ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] log-format-* Check log-format-escape-json and log-format-escape-none should not configure log-format escape by default" classname="nginx-ingress-controller e2e suite" status="passed" time="24.630509244">
              <system-err>&gt; Enter [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:03:36.314&#xA;&lt; Exit [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:03:44.631 (8.317s)&#xA;&gt; Enter [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:33 @ 03/16/23 07:03:44.631&#xA;&lt; Exit [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:33 @ 03/16/23 07:03:57.66 (13.029s)&#xA;&gt; Enter [It] should not configure log-format escape by default - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:40 @ 03/16/23 07:03:57.66&#xA;&lt; Exit [It] should not configure log-format escape by default - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:40 @ 03/16/23 07:04:00.748 (3.089s)&#xA;&gt; Enter [AfterEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:04:00.749&#xA;&lt; Exit [AfterEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:04:00.944 (196ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] proxy-next-upstream should build proxy next upstream using configmap values" classname="nginx-ingress-controller e2e suite" status="passed" time="28.111734623">
              <system-err>&gt; Enter [BeforeEach] [Setting] proxy-next-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:04:00.945&#xA;&lt; Exit [BeforeEach] [Setting] proxy-next-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:04:07.779 (6.834s)&#xA;&gt; Enter [BeforeEach] [Setting] proxy-next-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_next_upstream.go:32 @ 03/16/23 07:04:07.779&#xA;&lt; Exit [BeforeEach] [Setting] proxy-next-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_next_upstream.go:32 @ 03/16/23 07:04:11.801 (4.021s)&#xA;&gt; Enter [It] should build proxy next upstream using configmap values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_next_upstream.go:36 @ 03/16/23 07:04:11.801&#xA;&lt; Exit [It] should build proxy next upstream using configmap values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_next_upstream.go:36 @ 03/16/23 07:04:28.894 (17.093s)&#xA;&gt; Enter [AfterEach] [Setting] proxy-next-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:04:28.894&#xA;&lt; Exit [AfterEach] [Setting] proxy-next-upstream - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:04:29.057 (163ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should not break functionality with extra domain" classname="nginx-ingress-controller e2e suite" status="passed" time="18.116370289">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:04:29.057&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:04:35.958 (6.901s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 03/16/23 07:04:35.958&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 03/16/23 07:04:39.978 (4.02s)&#xA;&gt; Enter [It] should not break functionality with extra domain - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:314 @ 03/16/23 07:04:39.978&#xA;&lt; Exit [It] should not break functionality with extra domain - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:314 @ 03/16/23 07:04:46.989 (7.01s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:04:46.989&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:04:47.173 (185ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Lua] dynamic configuration configures balancer Lua middleware correctly" classname="nginx-ingress-controller e2e suite" status="passed" time="29.851715909">
              <system-err>&gt; Enter [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:04:47.174&#xA;&lt; Exit [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:04:56.542 (9.368s)&#xA;&gt; Enter [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:45 @ 03/16/23 07:04:56.542&#xA;&lt; Exit [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:45 @ 03/16/23 07:05:10.668 (14.126s)&#xA;&gt; Enter [It] configures balancer Lua middleware correctly - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:50 @ 03/16/23 07:05:10.668&#xA;&lt; Exit [It] configures balancer Lua middleware correctly - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:50 @ 03/16/23 07:05:16.866 (6.198s)&#xA;&gt; Enter [AfterEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:05:16.866&#xA;&lt; Exit [AfterEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:05:17.026 (160ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Endpointslices] long service name should return 200 when service name has max allowed number of characters 63" classname="nginx-ingress-controller e2e suite" status="passed" time="21.117465074">
              <system-err>&gt; Enter [BeforeEach] [Endpointslices] long service name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:05:17.026&#xA;&lt; Exit [BeforeEach] [Endpointslices] long service name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:05:23.843 (6.817s)&#xA;&gt; Enter [BeforeEach] [Endpointslices] long service name - /go/src/k8s.io/ingress-nginx/test/e2e/endpointslices/longname.go:34 @ 03/16/23 07:05:23.843&#xA;&lt; Exit [BeforeEach] [Endpointslices] long service name - /go/src/k8s.io/ingress-nginx/test/e2e/endpointslices/longname.go:34 @ 03/16/23 07:05:27.861 (4.018s)&#xA;&gt; Enter [It] should return 200 when service name has max allowed number of characters 63 - /go/src/k8s.io/ingress-nginx/test/e2e/endpointslices/longname.go:38 @ 03/16/23 07:05:27.861&#xA;STEP: checking if the service is reached - /go/src/k8s.io/ingress-nginx/test/e2e/endpointslices/longname.go:48 @ 03/16/23 07:05:37.965&#xA;&lt; Exit [It] should return 200 when service name has max allowed number of characters 63 - /go/src/k8s.io/ingress-nginx/test/e2e/endpointslices/longname.go:38 @ 03/16/23 07:05:37.968 (10.107s)&#xA;&gt; Enter [AfterEach] [Endpointslices] long service name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:05:37.968&#xA;&lt; Exit [AfterEach] [Endpointslices] long service name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:05:38.143 (175ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] ingress-class With default ingress class config should serve Ingress when class is added" classname="nginx-ingress-controller e2e suite" status="passed" time="36.201008759">
              <system-err>&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:05:38.144&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:05:44.958 (6.815s)&#xA;&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 03/16/23 07:05:44.958&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 03/16/23 07:05:48.974 (4.015s)&#xA;&gt; Enter [It] should serve Ingress when class is added - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:257 @ 03/16/23 07:05:48.974&#xA;&lt; Exit [It] should serve Ingress when class is added - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:257 @ 03/16/23 07:06:14.181 (25.207s)&#xA;&gt; Enter [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:06:14.181&#xA;&lt; Exit [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:06:14.345 (164ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] modsecurity owasp should enable modsecurity" classname="nginx-ingress-controller e2e suite" status="passed" time="21.109776701">
              <system-err>&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:06:14.345&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:06:21.181 (6.836s)&#xA;&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 03/16/23 07:06:21.181&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 03/16/23 07:06:25.203 (4.023s)&#xA;&gt; Enter [It] should enable modsecurity - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:35 @ 03/16/23 07:06:25.203&#xA;&lt; Exit [It] should enable modsecurity - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:35 @ 03/16/23 07:06:35.286 (10.082s)&#xA;&gt; Enter [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:06:35.286&#xA;&lt; Exit [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:06:35.455 (169ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] proxy-ssl-* should set valid proxy-ssl-secret, proxy-ssl-verify to on, proxy-ssl-verify-depth to 2, and proxy-ssl-server-name to on" classname="nginx-ingress-controller e2e suite" status="passed" time="21.343687347">
              <system-err>&gt; Enter [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:06:35.456&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:06:42.278 (6.823s)&#xA;&gt; Enter [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:33 @ 03/16/23 07:06:42.278&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:33 @ 03/16/23 07:06:46.302 (4.024s)&#xA;&gt; Enter [It] should set valid proxy-ssl-secret, proxy-ssl-verify to on, proxy-ssl-verify-depth to 2, and proxy-ssl-server-name to on - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:64 @ 03/16/23 07:06:46.302&#xA;&lt; Exit [It] should set valid proxy-ssl-secret, proxy-ssl-verify to on, proxy-ssl-verify-depth to 2, and proxy-ssl-server-name to on - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:64 @ 03/16/23 07:06:56.661 (10.359s)&#xA;&gt; Enter [AfterEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:06:56.661&#xA;&lt; Exit [AfterEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:06:56.799 (138ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] preserve-trailing-slash should allow preservation of trailing slashes" classname="nginx-ingress-controller e2e suite" status="passed" time="19.99568166">
              <system-err>&gt; Enter [BeforeEach] [Annotations] preserve-trailing-slash - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:06:56.8&#xA;&lt; Exit [BeforeEach] [Annotations] preserve-trailing-slash - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:07:03.638 (6.838s)&#xA;&gt; Enter [BeforeEach] [Annotations] preserve-trailing-slash - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/preservetrailingslash.go:30 @ 03/16/23 07:07:03.638&#xA;&lt; Exit [BeforeEach] [Annotations] preserve-trailing-slash - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/preservetrailingslash.go:30 @ 03/16/23 07:07:09.656 (6.019s)&#xA;&gt; Enter [It] should allow preservation of trailing slashes - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/preservetrailingslash.go:34 @ 03/16/23 07:07:09.656&#xA;&lt; Exit [It] should allow preservation of trailing slashes - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/preservetrailingslash.go:34 @ 03/16/23 07:07:16.667 (7.011s)&#xA;&gt; Enter [AfterEach] [Annotations] preserve-trailing-slash - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:07:16.667&#xA;&lt; Exit [AfterEach] [Annotations] preserve-trailing-slash - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:07:16.795 (128ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] log-format-* Check log-format-upstream with log-format-escape-json and log-format-escape-none log-format-escape-json enabled" classname="nginx-ingress-controller e2e suite" status="passed" time="31.135356588">
              <system-err>&gt; Enter [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:07:16.796&#xA;&lt; Exit [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:07:23.597 (6.802s)&#xA;&gt; Enter [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:33 @ 03/16/23 07:07:23.597&#xA;&lt; Exit [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:33 @ 03/16/23 07:07:34.622 (11.025s)&#xA;&gt; Enter [It] log-format-escape-json enabled - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:82 @ 03/16/23 07:07:34.622&#xA;&lt; Exit [It] log-format-escape-json enabled - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:82 @ 03/16/23 07:07:47.762 (13.139s)&#xA;&gt; Enter [AfterEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:07:47.762&#xA;&lt; Exit [AfterEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:07:47.931 (169ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Security] global-auth-url when global external authentication is configured should proxy_method method when global-auth-method is configured" classname="nginx-ingress-controller e2e suite" status="passed" time="55.560241474">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:07:47.931&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:07:54.79 (6.858s)&#xA;&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 03/16/23 07:07:54.79&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 03/16/23 07:08:02.832 (8.042s)&#xA;&gt; Enter [BeforeEach] when global external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:58 @ 03/16/23 07:08:02.832&#xA;STEP: Adding an ingress rule for /foo - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:61 @ 03/16/23 07:08:02.832&#xA;STEP: Adding an ingress rule for /bar - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:69 @ 03/16/23 07:08:12.934&#xA;STEP: Adding a global-auth-url to configMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:77 @ 03/16/23 07:08:23.023&#xA;&lt; Exit [BeforeEach] when global external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:58 @ 03/16/23 07:08:33.153 (30.321s)&#xA;&gt; Enter [It] should proxy_method method when global-auth-method is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:197 @ 03/16/23 07:08:33.153&#xA;STEP: Adding a global-auth-method to configMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:202 @ 03/16/23 07:08:33.153&#xA;&lt; Exit [It] should proxy_method method when global-auth-method is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:197 @ 03/16/23 07:08:43.293 (10.139s)&#xA;&gt; Enter [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:08:43.293&#xA;&lt; Exit [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:08:43.492 (199ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] Bad annotation values [BAD_ANNOTATIONS] should drop an ingress if there is a forbidden word in some annotation" classname="nginx-ingress-controller e2e suite" status="passed" time="43.203338614">
              <system-err>&gt; Enter [BeforeEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:08:43.492&#xA;&lt; Exit [BeforeEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:08:50.327 (6.835s)&#xA;&gt; Enter [BeforeEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/badannotationvalues.go:32 @ 03/16/23 07:08:50.327&#xA;&lt; Exit [BeforeEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/badannotationvalues.go:32 @ 03/16/23 07:08:54.353 (4.026s)&#xA;&gt; Enter [It] [BAD_ANNOTATIONS] should drop an ingress if there is a forbidden word in some annotation - /go/src/k8s.io/ingress-nginx/test/e2e/settings/badannotationvalues.go:67 @ 03/16/23 07:08:54.353&#xA;&lt; Exit [It] [BAD_ANNOTATIONS] should drop an ingress if there is a forbidden word in some annotation - /go/src/k8s.io/ingress-nginx/test/e2e/settings/badannotationvalues.go:67 @ 03/16/23 07:09:26.539 (32.186s)&#xA;&gt; Enter [AfterEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:09:26.539&#xA;&lt; Exit [AfterEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:09:26.695 (156ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] affinity session-cookie-name should change cookie name on ingress definition change" classname="nginx-ingress-controller e2e suite" status="passed" time="78.000532758">
              <system-err>&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:37:32.314&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:37:41.025 (8.71s)&#xA;&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 03/16/23 06:37:41.025&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 03/16/23 06:38:35.07 (54.046s)&#xA;&gt; Enter [It] should change cookie name on ingress definition change - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:64 @ 03/16/23 06:38:35.07&#xA;&lt; Exit [It] should change cookie name on ingress definition change - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:64 @ 03/16/23 06:38:50.184 (15.113s)&#xA;&gt; Enter [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:38:50.184&#xA;&lt; Exit [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:38:50.315 (131ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] from-to-www-redirect should redirect from www HTTP to HTTP" classname="nginx-ingress-controller e2e suite" status="passed" time="22.167845488">
              <system-err>&gt; Enter [BeforeEach] [Annotations] from-to-www-redirect - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:38:50.315&#xA;&lt; Exit [BeforeEach] [Annotations] from-to-www-redirect - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:38:58.177 (7.862s)&#xA;&gt; Enter [BeforeEach] [Annotations] from-to-www-redirect - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fromtowwwredirect.go:34 @ 03/16/23 06:38:58.177&#xA;&lt; Exit [BeforeEach] [Annotations] from-to-www-redirect - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fromtowwwredirect.go:34 @ 03/16/23 06:39:02.193 (4.016s)&#xA;&gt; Enter [It] should redirect from www HTTP to HTTP - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fromtowwwredirect.go:38 @ 03/16/23 06:39:02.193&#xA;STEP: setting up server for redirect from www - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fromtowwwredirect.go:39 @ 03/16/23 06:39:02.193&#xA;STEP: sending request to www.fromtowwwredirect.bar.com - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fromtowwwredirect.go:55 @ 03/16/23 06:39:12.312&#xA;&lt; Exit [It] should redirect from www HTTP to HTTP - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fromtowwwredirect.go:38 @ 03/16/23 06:39:12.314 (10.121s)&#xA;&gt; Enter [AfterEach] [Annotations] from-to-www-redirect - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:39:12.314&#xA;&lt; Exit [AfterEach] [Annotations] from-to-www-redirect - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:39:12.483 (169ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should not allow - portless origin with wildcard origin" classname="nginx-ingress-controller e2e suite" status="passed" time="17.980065763">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:39:12.484&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:39:19.304 (6.82s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 03/16/23 06:39:19.304&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 03/16/23 06:39:23.332 (4.028s)&#xA;&gt; Enter [It] should not allow - portless origin with wildcard origin - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:515 @ 03/16/23 06:39:23.332&#xA;&lt; Exit [It] should not allow - portless origin with wildcard origin - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:515 @ 03/16/23 06:39:30.34 (7.008s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:39:30.34&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:39:30.464 (124ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Security] request smuggling should not return body content from error_page" classname="nginx-ingress-controller e2e suite" status="passed" time="33.116228088">
              <system-err>&gt; Enter [BeforeEach] [Security] request smuggling - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:39:30.464&#xA;&lt; Exit [BeforeEach] [Security] request smuggling - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:39:37.275 (6.811s)&#xA;&gt; Enter [BeforeEach] [Security] request smuggling - /go/src/k8s.io/ingress-nginx/test/e2e/security/request_smuggling.go:35 @ 03/16/23 06:39:37.275&#xA;&lt; Exit [BeforeEach] [Security] request smuggling - /go/src/k8s.io/ingress-nginx/test/e2e/security/request_smuggling.go:35 @ 03/16/23 06:39:41.295 (4.02s)&#xA;&gt; Enter [It] should not return body content from error_page - /go/src/k8s.io/ingress-nginx/test/e2e/security/request_smuggling.go:39 @ 03/16/23 06:39:41.295&#xA;&lt; Exit [It] should not return body content from error_page - /go/src/k8s.io/ingress-nginx/test/e2e/security/request_smuggling.go:39 @ 03/16/23 06:40:03.397 (22.102s)&#xA;&gt; Enter [AfterEach] [Security] request smuggling - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:40:03.397&#xA;&lt; Exit [AfterEach] [Security] request smuggling - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:40:03.58 (183ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] client-body-buffer-size should set client_body_buffer_size to 1k" classname="nginx-ingress-controller e2e suite" status="passed" time="21.124101827">
              <system-err>&gt; Enter [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:40:03.581&#xA;&lt; Exit [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:40:10.412 (6.832s)&#xA;&gt; Enter [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:31 @ 03/16/23 06:40:10.412&#xA;&lt; Exit [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:31 @ 03/16/23 06:40:14.45 (4.037s)&#xA;&gt; Enter [It] should set client_body_buffer_size to 1k - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:79 @ 03/16/23 06:40:14.45&#xA;&lt; Exit [It] should set client_body_buffer_size to 1k - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:79 @ 03/16/23 06:40:24.549 (10.099s)&#xA;&gt; Enter [AfterEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:40:24.549&#xA;&lt; Exit [AfterEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:40:24.705 (156ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Security] modsecurity-snippet should add value of modsecurity-snippet setting to nginx config" classname="nginx-ingress-controller e2e suite" status="passed" time="17.14683762">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Security] modsecurity-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:40:24.706&#xA;&lt; Exit [BeforeEach] [Setting] [Security] modsecurity-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:40:31.548 (6.843s)&#xA;&gt; Enter [It] should add value of modsecurity-snippet setting to nginx config - /go/src/k8s.io/ingress-nginx/test/e2e/settings/modsecurity/modsecurity_snippet.go:30 @ 03/16/23 06:40:31.548&#xA;&lt; Exit [It] should add value of modsecurity-snippet setting to nginx config - /go/src/k8s.io/ingress-nginx/test/e2e/settings/modsecurity/modsecurity_snippet.go:30 @ 03/16/23 06:40:41.655 (10.106s)&#xA;&gt; Enter [AfterEach] [Setting] [Security] modsecurity-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:40:41.655&#xA;&lt; Exit [AfterEach] [Setting] [Security] modsecurity-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:40:41.852 (198ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Configure OpenTracing should enable opentracing using datadog" classname="nginx-ingress-controller e2e suite" status="passed" time="31.06821074">
              <system-err>&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:40:41.853&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:40:48.698 (6.845s)&#xA;&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 03/16/23 06:40:48.698&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 03/16/23 06:40:52.714 (4.017s)&#xA;&gt; Enter [It] should enable opentracing using datadog - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:241 @ 03/16/23 06:40:52.714&#xA;&lt; Exit [It] should enable opentracing using datadog - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:241 @ 03/16/23 06:41:12.733 (20.018s)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:41:12.733&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:41:12.921 (188ms)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 03/16/23 06:41:12.921&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 03/16/23 06:41:12.921 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* when external authentication with caching is configured should redirect to signin url when not signed in" classname="nginx-ingress-controller e2e suite" status="passed" time="67.89857141">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:41:12.922&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:41:24.201 (11.28s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 06:41:24.201&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 06:41:30.219 (6.018s)&#xA;&gt; Enter [BeforeEach] when external authentication with caching is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:730 @ 03/16/23 06:41:30.219&#xA;STEP: Adding an ingress rule for /foo - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:754 @ 03/16/23 06:41:35.241&#xA;STEP: Adding an ingress rule for /bar - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:761 @ 03/16/23 06:41:45.326&#xA;STEP: Adding an ingress rule for /foo - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:754 @ 03/16/23 06:41:55.405&#xA;STEP: Adding an ingress rule for /bar - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:761 @ 03/16/23 06:42:05.529&#xA;&lt; Exit [BeforeEach] when external authentication with caching is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:730 @ 03/16/23 06:42:20.634 (50.415s)&#xA;&gt; Enter [It] should redirect to signin url when not signed in - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:849 @ 03/16/23 06:42:20.634&#xA;&lt; Exit [It] should redirect to signin url when not signed in - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:849 @ 03/16/23 06:42:20.64 (6ms)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:42:20.64&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:42:20.82 (180ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should not allow - single origin without port and origin with required port" classname="nginx-ingress-controller e2e suite" status="passed" time="18.021820082">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:42:20.821&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:42:27.65 (6.829s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 03/16/23 06:42:27.65&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 03/16/23 06:42:31.677 (4.027s)&#xA;&gt; Enter [It] should not allow - single origin without port and origin with required port - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:405 @ 03/16/23 06:42:31.677&#xA;&lt; Exit [It] should not allow - single origin without port and origin with required port - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:405 @ 03/16/23 06:42:38.688 (7.012s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:42:38.688&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:42:38.843 (154ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* when external authentication is configured should redirect to signin url when not signed in" classname="nginx-ingress-controller e2e suite" status="passed" time="26.154555708">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:42:38.843&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:42:46.646 (7.802s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 06:42:46.646&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 06:42:50.67 (4.024s)&#xA;&gt; Enter [BeforeEach] when external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:458 @ 03/16/23 06:42:50.67&#xA;&lt; Exit [BeforeEach] when external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:458 @ 03/16/23 06:43:04.797 (14.128s)&#xA;&gt; Enter [It] should redirect to signin url when not signed in - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:494 @ 03/16/23 06:43:04.797&#xA;&lt; Exit [It] should redirect to signin url when not signed in - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:494 @ 03/16/23 06:43:04.801 (4ms)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:43:04.801&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:43:04.998 (196ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Security] Pod Security Policies with volumes should be running with a Pod Security Policy" classname="nginx-ingress-controller e2e suite" status="skipped" time="6.997229116">
              <skipped message="skipped - PSP not supported in this version"></skipped>
              <system-err>&gt; Enter [BeforeEach] [Security] Pod Security Policies with volumes - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:43:04.998&#xA;&lt; Exit [BeforeEach] [Security] Pod Security Policies with volumes - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:43:11.82 (6.821s)&#xA;&gt; Enter [It] should be running with a Pod Security Policy - /go/src/k8s.io/ingress-nginx/test/e2e/settings/pod_security_policy_volumes.go:40 @ 03/16/23 06:43:11.82&#xA;[SKIPPED] PSP not supported in this version&#xA;In [It] at: /go/src/k8s.io/ingress-nginx/test/e2e/settings/pod_security_policy_volumes.go:53 @ 03/16/23 06:43:11.82&#xA;&lt; Exit [It] should be running with a Pod Security Policy - /go/src/k8s.io/ingress-nginx/test/e2e/settings/pod_security_policy_volumes.go:40 @ 03/16/23 06:43:11.82 (1ms)&#xA;&gt; Enter [AfterEach] [Security] Pod Security Policies with volumes - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:43:11.82&#xA;&lt; Exit [AfterEach] [Security] Pod Security Policies with volumes - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:43:11.995 (175ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Shutdown] Grace period shutdown /healthz should return status code 500 during shutdown grace period" classname="nginx-ingress-controller e2e suite" status="passed" time="79.089935494">
              <system-err>&gt; Enter [BeforeEach] [Shutdown] Grace period shutdown - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:43:11.996&#xA;&lt; Exit [BeforeEach] [Shutdown] Grace period shutdown - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:43:18.845 (6.849s)&#xA;&gt; Enter [It] /healthz should return status code 500 during shutdown grace period - /go/src/k8s.io/ingress-nginx/test/e2e/gracefulshutdown/grace_period.go:35 @ 03/16/23 06:43:18.845&#xA;&lt; Exit [It] /healthz should return status code 500 during shutdown grace period - /go/src/k8s.io/ingress-nginx/test/e2e/gracefulshutdown/grace_period.go:35 @ 03/16/23 06:44:30.908 (1m12.063s)&#xA;&gt; Enter [AfterEach] [Shutdown] Grace period shutdown - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:44:30.908&#xA;&lt; Exit [AfterEach] [Shutdown] Grace period shutdown - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:44:31.086 (178ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [SSL] [Flag] default-ssl-certificate uses default ssl certificate for host based ingress when configured certificate does not match host" classname="nginx-ingress-controller e2e suite" status="passed" time="32.547744259">
              <system-err>&gt; Enter [BeforeEach] [SSL] [Flag] default-ssl-certificate - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:44:31.086&#xA;&lt; Exit [BeforeEach] [SSL] [Flag] default-ssl-certificate - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:44:37.905 (6.819s)&#xA;&gt; Enter [BeforeEach] [SSL] [Flag] default-ssl-certificate - /go/src/k8s.io/ingress-nginx/test/e2e/settings/default_ssl_certificate.go:40 @ 03/16/23 06:44:37.905&#xA;&lt; Exit [BeforeEach] [SSL] [Flag] default-ssl-certificate - /go/src/k8s.io/ingress-nginx/test/e2e/settings/default_ssl_certificate.go:40 @ 03/16/23 06:44:51.213 (13.308s)&#xA;&gt; Enter [It] uses default ssl certificate for host based ingress when configured certificate does not match host - /go/src/k8s.io/ingress-nginx/test/e2e/settings/default_ssl_certificate.go:80 @ 03/16/23 06:44:51.213&#xA;STEP: making sure new ingress is deployed - /go/src/k8s.io/ingress-nginx/test/e2e/settings/default_ssl_certificate.go:90 @ 03/16/23 06:44:58.305&#xA;STEP: making sure the configured default ssl certificate is being used - /go/src/k8s.io/ingress-nginx/test/e2e/settings/default_ssl_certificate.go:96 @ 03/16/23 06:45:01.402&#xA;&lt; Exit [It] uses default ssl certificate for host based ingress when configured certificate does not match host - /go/src/k8s.io/ingress-nginx/test/e2e/settings/default_ssl_certificate.go:80 @ 03/16/23 06:45:03.413 (12.2s)&#xA;&gt; Enter [AfterEach] [SSL] [Flag] default-ssl-certificate - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:45:03.413&#xA;&lt; Exit [AfterEach] [SSL] [Flag] default-ssl-certificate - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:45:03.634 (221ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Ingress] [PathType] exact should choose exact location for /exact" classname="nginx-ingress-controller e2e suite" status="passed" time="38.303723194">
              <system-err>&gt; Enter [BeforeEach] [Ingress] [PathType] exact - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:45:03.635&#xA;&lt; Exit [BeforeEach] [Ingress] [PathType] exact - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:45:10.526 (6.891s)&#xA;&gt; Enter [BeforeEach] [Ingress] [PathType] exact - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/pathtype_exact.go:33 @ 03/16/23 06:45:10.526&#xA;&lt; Exit [BeforeEach] [Ingress] [PathType] exact - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/pathtype_exact.go:33 @ 03/16/23 06:45:14.541 (4.016s)&#xA;&gt; Enter [It] should choose exact location for /exact - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/pathtype_exact.go:37 @ 03/16/23 06:45:14.541&#xA;&lt; Exit [It] should choose exact location for /exact - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/pathtype_exact.go:37 @ 03/16/23 06:45:41.767 (27.225s)&#xA;&gt; Enter [AfterEach] [Ingress] [PathType] exact - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:45:41.767&#xA;&lt; Exit [AfterEach] [Ingress] [PathType] exact - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:45:41.938 (172ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] gzip should set gzip_min_length to 100" classname="nginx-ingress-controller e2e suite" status="passed" time="24.117345671">
              <system-err>&gt; Enter [BeforeEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:45:41.939&#xA;&lt; Exit [BeforeEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:45:48.797 (6.858s)&#xA;&gt; Enter [It] should set gzip_min_length to 100 - /go/src/k8s.io/ingress-nginx/test/e2e/settings/gzip.go:78 @ 03/16/23 06:45:48.797&#xA;&lt; Exit [It] should set gzip_min_length to 100 - /go/src/k8s.io/ingress-nginx/test/e2e/settings/gzip.go:78 @ 03/16/23 06:46:05.909 (17.112s)&#xA;&gt; Enter [AfterEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:46:05.909&#xA;&lt; Exit [AfterEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:46:06.056 (147ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] affinitymode Check persistent affinity mode" classname="nginx-ingress-controller e2e suite" status="passed" time="127.315422292">
              <system-err>&gt; Enter [BeforeEach] [Annotations] affinitymode - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:46:06.057&#xA;&lt; Exit [BeforeEach] [Annotations] affinitymode - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:46:12.958 (6.901s)&#xA;&gt; Enter [It] Check persistent affinity mode - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinitymode.go:67 @ 03/16/23 06:46:12.958&#xA;&lt; Exit [It] Check persistent affinity mode - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinitymode.go:67 @ 03/16/23 06:48:13.23 (2m0.272s)&#xA;&gt; Enter [AfterEach] [Annotations] affinitymode - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:48:13.23&#xA;&lt; Exit [AfterEach] [Annotations] affinitymode - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:48:13.372 (143ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-tls-* should set sslClientCertificate, sslVerifyClient and sslVerifyDepth with auth-tls-secret" classname="nginx-ingress-controller e2e suite" status="passed" time="25.424767634">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:48:13.373&#xA;&lt; Exit [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:48:20.196 (6.823s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:32 @ 03/16/23 06:48:20.196&#xA;&lt; Exit [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:32 @ 03/16/23 06:48:24.216 (4.02s)&#xA;&gt; Enter [It] should set sslClientCertificate, sslVerifyClient and sslVerifyDepth with auth-tls-secret - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:36 @ 03/16/23 06:48:24.216&#xA;&lt; Exit [It] should set sslClientCertificate, sslVerifyClient and sslVerifyDepth with auth-tls-secret - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:36 @ 03/16/23 06:48:38.654 (14.438s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:48:38.654&#xA;&lt; Exit [AfterEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:48:38.797 (144ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Security] no-auth-locations should return status code 200 when accessing &#39;/&#39;  authentication" classname="nginx-ingress-controller e2e suite" status="passed" time="30.122716448">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Security] no-auth-locations - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:48:38.798&#xA;&lt; Exit [BeforeEach] [Setting] [Security] no-auth-locations - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:48:45.627 (6.829s)&#xA;&gt; Enter [BeforeEach] [Setting] [Security] no-auth-locations - /go/src/k8s.io/ingress-nginx/test/e2e/settings/no_auth_locations.go:43 @ 03/16/23 06:48:45.627&#xA;&lt; Exit [BeforeEach] [Setting] [Security] no-auth-locations - /go/src/k8s.io/ingress-nginx/test/e2e/settings/no_auth_locations.go:43 @ 03/16/23 06:49:04.699 (19.072s)&#xA;&gt; Enter [It] should return status code 200 when accessing &#39;/&#39;  authentication - /go/src/k8s.io/ingress-nginx/test/e2e/settings/no_auth_locations.go:68 @ 03/16/23 06:49:04.699&#xA;&lt; Exit [It] should return status code 200 when accessing &#39;/&#39;  authentication - /go/src/k8s.io/ingress-nginx/test/e2e/settings/no_auth_locations.go:68 @ 03/16/23 06:49:08.768 (4.069s)&#xA;&gt; Enter [AfterEach] [Setting] [Security] no-auth-locations - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:49:08.768&#xA;&lt; Exit [AfterEach] [Setting] [Security] no-auth-locations - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:49:08.921 (152ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] disable-catch-all should delete Ingress updated to catch-all" classname="nginx-ingress-controller e2e suite" status="passed" time="34.799790914">
              <system-err>&gt; Enter [BeforeEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:49:08.921&#xA;&lt; Exit [BeforeEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:49:17.322 (8.401s)&#xA;&gt; Enter [BeforeEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_catch_all.go:36 @ 03/16/23 06:49:17.322&#xA;&lt; Exit [BeforeEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_catch_all.go:36 @ 03/16/23 06:49:29.357 (12.034s)&#xA;&gt; Enter [It] should delete Ingress updated to catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_catch_all.go:81 @ 03/16/23 06:49:29.357&#xA;&lt; Exit [It] should delete Ingress updated to catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_catch_all.go:81 @ 03/16/23 06:49:43.547 (14.19s)&#xA;&gt; Enter [AfterEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:49:43.547&#xA;&lt; Exit [AfterEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:49:43.721 (174ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] backend-protocol - FastCGI should add fastcgi_param in the configuration file" classname="nginx-ingress-controller e2e suite" status="passed" time="23.09855574">
              <system-err>&gt; Enter [BeforeEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:49:43.721&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:49:50.557 (6.836s)&#xA;&gt; Enter [BeforeEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fastcgi.go:33 @ 03/16/23 06:49:50.557&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fastcgi.go:33 @ 03/16/23 06:49:56.571 (6.014s)&#xA;&gt; Enter [It] should add fastcgi_param in the configuration file - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fastcgi.go:71 @ 03/16/23 06:49:56.571&#xA;&lt; Exit [It] should add fastcgi_param in the configuration file - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fastcgi.go:71 @ 03/16/23 06:50:06.664 (10.093s)&#xA;&gt; Enter [AfterEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:50:06.664&#xA;&lt; Exit [AfterEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:50:06.82 (156ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Debug CLI should produce valid JSON for /dbg general" classname="nginx-ingress-controller e2e suite" status="passed" time="18.109206501">
              <system-err>&gt; Enter [BeforeEach] Debug CLI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:50:06.82&#xA;&lt; Exit [BeforeEach] Debug CLI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:50:13.631 (6.811s)&#xA;&gt; Enter [BeforeEach] Debug CLI - /go/src/k8s.io/ingress-nginx/test/e2e/dbg/main.go:33 @ 03/16/23 06:50:13.631&#xA;&lt; Exit [BeforeEach] Debug CLI - /go/src/k8s.io/ingress-nginx/test/e2e/dbg/main.go:33 @ 03/16/23 06:50:17.651 (4.019s)&#xA;&gt; Enter [It] should produce valid JSON for /dbg general - /go/src/k8s.io/ingress-nginx/test/e2e/dbg/main.go:85 @ 03/16/23 06:50:17.651&#xA;&lt; Exit [It] should produce valid JSON for /dbg general - /go/src/k8s.io/ingress-nginx/test/e2e/dbg/main.go:85 @ 03/16/23 06:50:24.763 (7.112s)&#xA;&gt; Enter [AfterEach] Debug CLI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:50:24.763&#xA;&lt; Exit [AfterEach] Debug CLI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:50:24.929 (167ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] Configmap - limit-rate Check limit-rate config" classname="nginx-ingress-controller e2e suite" status="passed" time="41.305791257">
              <system-err>&gt; Enter [BeforeEach] [Setting] Configmap - limit-rate - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:50:24.93&#xA;&lt; Exit [BeforeEach] [Setting] Configmap - limit-rate - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:50:31.766 (6.836s)&#xA;&gt; Enter [BeforeEach] [Setting] Configmap - limit-rate - /go/src/k8s.io/ingress-nginx/test/e2e/settings/limit_rate.go:32 @ 03/16/23 06:50:31.766&#xA;&lt; Exit [BeforeEach] [Setting] Configmap - limit-rate - /go/src/k8s.io/ingress-nginx/test/e2e/settings/limit_rate.go:32 @ 03/16/23 06:50:35.796 (4.03s)&#xA;&gt; Enter [It] Check limit-rate config - /go/src/k8s.io/ingress-nginx/test/e2e/settings/limit_rate.go:36 @ 03/16/23 06:50:35.796&#xA;&lt; Exit [It] Check limit-rate config - /go/src/k8s.io/ingress-nginx/test/e2e/settings/limit_rate.go:36 @ 03/16/23 06:51:06.09 (30.294s)&#xA;&gt; Enter [AfterEach] [Setting] Configmap - limit-rate - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:51:06.09&#xA;&lt; Exit [AfterEach] [Setting] Configmap - limit-rate - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:51:06.236 (145ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] proxy-connect-timeout should not set invalid proxy timeouts using configmap values" classname="nginx-ingress-controller e2e suite" status="passed" time="29.146475234">
              <system-err>&gt; Enter [BeforeEach] [Setting] proxy-connect-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:51:06.237&#xA;&lt; Exit [BeforeEach] [Setting] proxy-connect-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:51:14.055 (7.818s)&#xA;&gt; Enter [BeforeEach] [Setting] proxy-connect-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_connect_timeout.go:32 @ 03/16/23 06:51:14.055&#xA;&lt; Exit [BeforeEach] [Setting] proxy-connect-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_connect_timeout.go:32 @ 03/16/23 06:51:18.074 (4.019s)&#xA;&gt; Enter [It] should not set invalid proxy timeouts using configmap values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_connect_timeout.go:52 @ 03/16/23 06:51:18.074&#xA;&lt; Exit [It] should not set invalid proxy timeouts using configmap values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_connect_timeout.go:52 @ 03/16/23 06:51:35.207 (17.133s)&#xA;&gt; Enter [AfterEach] [Setting] proxy-connect-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:51:35.207&#xA;&lt; Exit [AfterEach] [Setting] proxy-connect-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:51:35.384 (177ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] gzip should set gzip_comp_level to 4" classname="nginx-ingress-controller e2e suite" status="passed" time="24.044722091">
              <system-err>&gt; Enter [BeforeEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:51:35.384&#xA;&lt; Exit [BeforeEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:51:42.185 (6.801s)&#xA;&gt; Enter [It] should set gzip_comp_level to 4 - /go/src/k8s.io/ingress-nginx/test/e2e/settings/gzip.go:56 @ 03/16/23 06:51:42.185&#xA;&lt; Exit [It] should set gzip_comp_level to 4 - /go/src/k8s.io/ingress-nginx/test/e2e/settings/gzip.go:56 @ 03/16/23 06:51:59.299 (17.114s)&#xA;&gt; Enter [AfterEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:51:59.299&#xA;&lt; Exit [AfterEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:51:59.429 (130ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] modsecurity owasp should enable modsecurity with transaction ID and OWASP rules" classname="nginx-ingress-controller e2e suite" status="passed" time="21.115443924">
              <system-err>&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:51:59.429&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:52:06.233 (6.804s)&#xA;&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 03/16/23 06:52:06.233&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 03/16/23 06:52:10.252 (4.02s)&#xA;&gt; Enter [It] should enable modsecurity with transaction ID and OWASP rules - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:53 @ 03/16/23 06:52:10.252&#xA;&lt; Exit [It] should enable modsecurity with transaction ID and OWASP rules - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:53 @ 03/16/23 06:52:20.371 (10.119s)&#xA;&gt; Enter [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:52:20.371&#xA;&lt; Exit [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:52:20.544 (173ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] backend-protocol should set backend protocol to grpc:// and use grpc_pass" classname="nginx-ingress-controller e2e suite" status="passed" time="21.133750539">
              <system-err>&gt; Enter [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:52:20.545&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:52:27.409 (6.865s)&#xA;&gt; Enter [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:30 @ 03/16/23 06:52:27.409&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:30 @ 03/16/23 06:52:31.431 (4.022s)&#xA;&gt; Enter [It] should set backend protocol to grpc:// and use grpc_pass - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:64 @ 03/16/23 06:52:31.431&#xA;&lt; Exit [It] should set backend protocol to grpc:// and use grpc_pass - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/backendprotocol.go:64 @ 03/16/23 06:52:41.538 (10.107s)&#xA;&gt; Enter [AfterEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:52:41.538&#xA;&lt; Exit [AfterEach] [Annotations] backend-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:52:41.679 (141ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-tls-* should set valid auth-tls-secret, sslVerify to off, and sslVerifyDepth to 2" classname="nginx-ingress-controller e2e suite" status="passed" time="21.71223331">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:52:41.679&#xA;&lt; Exit [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:52:48.518 (6.839s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:32 @ 03/16/23 06:52:48.518&#xA;&lt; Exit [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:32 @ 03/16/23 06:52:52.534 (4.016s)&#xA;&gt; Enter [It] should set valid auth-tls-secret, sslVerify to off, and sslVerifyDepth to 2 - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:84 @ 03/16/23 06:52:52.534&#xA;&lt; Exit [It] should set valid auth-tls-secret, sslVerify to off, and sslVerifyDepth to 2 - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:84 @ 03/16/23 06:53:03.236 (10.702s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:53:03.236&#xA;&lt; Exit [AfterEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:53:03.391 (155ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] affinity session-cookie-name should set secure in cookie with provided true annotation on http" classname="nginx-ingress-controller e2e suite" status="passed" time="21.129145567">
              <system-err>&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:53:03.392&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:53:10.223 (6.831s)&#xA;&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 03/16/23 06:53:10.223&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 03/16/23 06:53:14.253 (4.031s)&#xA;&gt; Enter [It] should set secure in cookie with provided true annotation on http - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:412 @ 03/16/23 06:53:14.253&#xA;&lt; Exit [It] should set secure in cookie with provided true annotation on http - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:412 @ 03/16/23 06:53:24.346 (10.092s)&#xA;&gt; Enter [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:53:24.346&#xA;&lt; Exit [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:53:24.521 (175ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] keep-alive keep-alive-requests Check the upstream keep alive should set keepalive time to upstream server" classname="nginx-ingress-controller e2e suite" status="passed" time="26.121691546">
              <system-err>&gt; Enter [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:53:24.521&#xA;&lt; Exit [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:53:31.357 (6.836s)&#xA;&gt; Enter [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:33 @ 03/16/23 06:53:31.357&#xA;&lt; Exit [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:33 @ 03/16/23 06:53:40.386 (9.029s)&#xA;&gt; Enter [It] should set keepalive time to upstream server - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:77 @ 03/16/23 06:53:40.386&#xA;&lt; Exit [It] should set keepalive time to upstream server - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:77 @ 03/16/23 06:53:50.485 (10.099s)&#xA;&gt; Enter [AfterEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:53:50.485&#xA;&lt; Exit [AfterEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:53:50.643 (158ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should not break functionality - without `*`" classname="nginx-ingress-controller e2e suite" status="passed" time="17.993667078">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:53:50.643&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:53:57.447 (6.804s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 03/16/23 06:53:57.447&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 03/16/23 06:54:01.47 (4.023s)&#xA;&gt; Enter [It] should not break functionality - without `*` - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:291 @ 03/16/23 06:54:01.47&#xA;&lt; Exit [It] should not break functionality - without `*` - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:291 @ 03/16/23 06:54:08.48 (7.01s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:54:08.48&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:54:08.637 (156ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should disable cors allow credentials" classname="nginx-ingress-controller e2e suite" status="passed" time="21.07494776">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:54:08.637&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:54:15.456 (6.819s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 03/16/23 06:54:15.456&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 03/16/23 06:54:19.473 (4.017s)&#xA;&gt; Enter [It] should disable cors allow credentials - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:94 @ 03/16/23 06:54:19.473&#xA;&lt; Exit [It] should disable cors allow credentials - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:94 @ 03/16/23 06:54:29.577 (10.104s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:54:29.577&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:54:29.712 (135ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] backend-protocol - GRPC should use grpc_pass in the configuration file" classname="nginx-ingress-controller e2e suite" status="passed" time="28.195956819">
              <system-err>&gt; Enter [BeforeEach] [Annotations] backend-protocol - GRPC - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:54:29.712&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - GRPC - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:54:36.556 (6.844s)&#xA;&gt; Enter [It] should use grpc_pass in the configuration file - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/grpc.go:43 @ 03/16/23 06:54:36.556&#xA;&lt; Exit [It] should use grpc_pass in the configuration file - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/grpc.go:43 @ 03/16/23 06:54:57.773 (21.217s)&#xA;&gt; Enter [AfterEach] [Annotations] backend-protocol - GRPC - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:54:57.773&#xA;&lt; Exit [AfterEach] [Annotations] backend-protocol - GRPC - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:54:57.908 (135ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] disable-catch-all should allow Ingress with rules" classname="nginx-ingress-controller e2e suite" status="passed" time="32.131820875">
              <system-err>&gt; Enter [BeforeEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:54:57.909&#xA;&lt; Exit [BeforeEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:55:05.751 (7.842s)&#xA;&gt; Enter [BeforeEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_catch_all.go:36 @ 03/16/23 06:55:05.751&#xA;&lt; Exit [BeforeEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_catch_all.go:36 @ 03/16/23 06:55:19.81 (14.059s)&#xA;&gt; Enter [It] should allow Ingress with rules - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_catch_all.go:123 @ 03/16/23 06:55:19.81&#xA;&lt; Exit [It] should allow Ingress with rules - /go/src/k8s.io/ingress-nginx/test/e2e/settings/disable_catch_all.go:123 @ 03/16/23 06:55:29.902 (10.092s)&#xA;&gt; Enter [AfterEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:55:29.902&#xA;&lt; Exit [AfterEach] [Flag] disable-catch-all - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:55:30.04 (138ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] add-headers Add a custom header" classname="nginx-ingress-controller e2e suite" status="passed" time="28.125334306">
              <system-err>&gt; Enter [BeforeEach] [Setting] add-headers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:55:30.041&#xA;&lt; Exit [BeforeEach] [Setting] add-headers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:55:36.859 (6.818s)&#xA;&gt; Enter [BeforeEach] [Setting] add-headers - /go/src/k8s.io/ingress-nginx/test/e2e/settings/custom_header.go:34 @ 03/16/23 06:55:36.859&#xA;&lt; Exit [BeforeEach] [Setting] add-headers - /go/src/k8s.io/ingress-nginx/test/e2e/settings/custom_header.go:34 @ 03/16/23 06:55:47.892 (11.033s)&#xA;&gt; Enter [It] Add a custom header - /go/src/k8s.io/ingress-nginx/test/e2e/settings/custom_header.go:40 @ 03/16/23 06:55:47.892&#xA;&lt; Exit [It] Add a custom header - /go/src/k8s.io/ingress-nginx/test/e2e/settings/custom_header.go:40 @ 03/16/23 06:55:58.008 (10.116s)&#xA;&gt; Enter [AfterEach] [Setting] add-headers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:55:58.008&#xA;&lt; Exit [AfterEach] [Setting] add-headers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:55:58.166 (159ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* when external authentication with caching is configured should return status code 200 when signed in after auth backend is deleted" classname="nginx-ingress-controller e2e suite" status="passed" time="69.447152858">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:55:58.167&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:56:05.99 (7.823s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 06:56:05.99&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 06:56:10.009 (4.019s)&#xA;&gt; Enter [BeforeEach] when external authentication with caching is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:730 @ 03/16/23 06:56:10.009&#xA;STEP: Adding an ingress rule for /foo - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:754 @ 03/16/23 06:56:15.035&#xA;STEP: Adding an ingress rule for /bar - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:761 @ 03/16/23 06:56:25.144&#xA;STEP: Adding an ingress rule for /foo - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:754 @ 03/16/23 06:56:35.258&#xA;STEP: Adding an ingress rule for /bar - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:761 @ 03/16/23 06:56:45.366&#xA;&lt; Exit [BeforeEach] when external authentication with caching is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:730 @ 03/16/23 06:57:00.467 (50.458s)&#xA;&gt; Enter [It] should return status code 200 when signed in after auth backend is deleted  - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:772 @ 03/16/23 06:57:00.467&#xA;&lt; Exit [It] should return status code 200 when signed in after auth backend is deleted  - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:772 @ 03/16/23 06:57:07.481 (7.014s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:57:07.481&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:57:07.614 (133ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] access-log stream-access-log-path use the specified configuration" classname="nginx-ingress-controller e2e suite" status="passed" time="17.056199756">
              <system-err>&gt; Enter [BeforeEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:57:07.614&#xA;&lt; Exit [BeforeEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:57:14.431 (6.816s)&#xA;&gt; Enter [It] use the specified configuration - /go/src/k8s.io/ingress-nginx/test/e2e/settings/access_log.go:67 @ 03/16/23 06:57:14.431&#xA;&lt; Exit [It] use the specified configuration - /go/src/k8s.io/ingress-nginx/test/e2e/settings/access_log.go:67 @ 03/16/23 06:57:24.524 (10.094s)&#xA;&gt; Enter [AfterEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:57:24.524&#xA;&lt; Exit [AfterEach] [Setting] access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:57:24.67 (146ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Security] no-auth-locations should return status code 401 when accessing &#39;/&#39; unauthentication" classname="nginx-ingress-controller e2e suite" status="passed" time="32.162942047">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Security] no-auth-locations - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:57:24.671&#xA;&lt; Exit [BeforeEach] [Setting] [Security] no-auth-locations - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:57:34.494 (9.824s)&#xA;&gt; Enter [BeforeEach] [Setting] [Security] no-auth-locations - /go/src/k8s.io/ingress-nginx/test/e2e/settings/no_auth_locations.go:43 @ 03/16/23 06:57:34.494&#xA;&lt; Exit [BeforeEach] [Setting] [Security] no-auth-locations - /go/src/k8s.io/ingress-nginx/test/e2e/settings/no_auth_locations.go:43 @ 03/16/23 06:57:53.566 (19.072s)&#xA;&gt; Enter [It] should return status code 401 when accessing &#39;/&#39; unauthentication - /go/src/k8s.io/ingress-nginx/test/e2e/settings/no_auth_locations.go:54 @ 03/16/23 06:57:53.566&#xA;&lt; Exit [It] should return status code 401 when accessing &#39;/&#39; unauthentication - /go/src/k8s.io/ingress-nginx/test/e2e/settings/no_auth_locations.go:54 @ 03/16/23 06:57:56.667 (3.1s)&#xA;&gt; Enter [AfterEach] [Setting] [Security] no-auth-locations - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:57:56.667&#xA;&lt; Exit [AfterEach] [Setting] [Security] no-auth-locations - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:57:56.834 (167ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* when external authentication is configured with a custom redirect param keeps processing new ingresses even if one of the existing ingresses is misconfigured" classname="nginx-ingress-controller e2e suite" status="passed" time="35.276052551">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:57:56.834&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:58:02.711 (5.877s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 06:58:02.711&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 06:58:06.727 (4.016s)&#xA;&gt; Enter [BeforeEach] when external authentication is configured with a custom redirect param - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:651 @ 03/16/23 06:58:06.727&#xA;&lt; Exit [BeforeEach] when external authentication is configured with a custom redirect param - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:651 @ 03/16/23 06:58:20.837 (14.111s)&#xA;&gt; Enter [It] keeps processing new ingresses even if one of the existing ingresses is misconfigured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:698 @ 03/16/23 06:58:20.837&#xA;&lt; Exit [It] keeps processing new ingresses even if one of the existing ingresses is misconfigured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:698 @ 03/16/23 06:58:31.962 (11.124s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:58:31.962&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:58:32.11 (148ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] hash size Check the map hash size should set vmap-hash-bucket-size" classname="nginx-ingress-controller e2e suite" status="passed" time="28.138526685">
              <system-err>&gt; Enter [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:58:32.111&#xA;&lt; Exit [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:58:38.947 (6.837s)&#xA;&gt; Enter [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:32 @ 03/16/23 06:58:38.947&#xA;&lt; Exit [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:32 @ 03/16/23 06:58:49.983 (11.036s)&#xA;&gt; Enter [It] should set vmap-hash-bucket-size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:100 @ 03/16/23 06:58:49.983&#xA;&lt; Exit [It] should set vmap-hash-bucket-size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:100 @ 03/16/23 06:59:00.1 (10.116s)&#xA;&gt; Enter [AfterEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:59:00.1&#xA;&lt; Exit [AfterEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:59:00.249 (149ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Debug CLI should get information for a specific backend server" classname="nginx-ingress-controller e2e suite" status="passed" time="22.344971614">
              <system-err>&gt; Enter [BeforeEach] Debug CLI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:59:00.249&#xA;&lt; Exit [BeforeEach] Debug CLI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:59:08.067 (7.818s)&#xA;&gt; Enter [BeforeEach] Debug CLI - /go/src/k8s.io/ingress-nginx/test/e2e/dbg/main.go:33 @ 03/16/23 06:59:08.067&#xA;&lt; Exit [BeforeEach] Debug CLI - /go/src/k8s.io/ingress-nginx/test/e2e/dbg/main.go:33 @ 03/16/23 06:59:12.09 (4.022s)&#xA;&gt; Enter [It] should get information for a specific backend server - /go/src/k8s.io/ingress-nginx/test/e2e/dbg/main.go:56 @ 03/16/23 06:59:12.09&#xA;&lt; Exit [It] should get information for a specific backend server - /go/src/k8s.io/ingress-nginx/test/e2e/dbg/main.go:56 @ 03/16/23 06:59:22.376 (10.286s)&#xA;&gt; Enter [AfterEach] Debug CLI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:59:22.376&#xA;&lt; Exit [AfterEach] Debug CLI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:59:22.594 (219ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] use-forwarded-headers should not trust X-Forwarded headers when setting is false" classname="nginx-ingress-controller e2e suite" status="passed" time="35.143562663">
              <system-err>&gt; Enter [BeforeEach] [Setting] use-forwarded-headers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:59:22.595&#xA;&lt; Exit [BeforeEach] [Setting] use-forwarded-headers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:59:29.412 (6.817s)&#xA;&gt; Enter [BeforeEach] [Setting] use-forwarded-headers - /go/src/k8s.io/ingress-nginx/test/e2e/settings/forwarded_headers.go:35 @ 03/16/23 06:59:29.412&#xA;&lt; Exit [BeforeEach] [Setting] use-forwarded-headers - /go/src/k8s.io/ingress-nginx/test/e2e/settings/forwarded_headers.go:35 @ 03/16/23 06:59:40.443 (11.031s)&#xA;&gt; Enter [It] should not trust X-Forwarded headers when setting is false - /go/src/k8s.io/ingress-nginx/test/e2e/settings/forwarded_headers.go:92 @ 03/16/23 06:59:40.443&#xA;&lt; Exit [It] should not trust X-Forwarded headers when setting is false - /go/src/k8s.io/ingress-nginx/test/e2e/settings/forwarded_headers.go:92 @ 03/16/23 06:59:57.568 (17.125s)&#xA;&gt; Enter [AfterEach] [Setting] use-forwarded-headers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:59:57.568&#xA;&lt; Exit [AfterEach] [Setting] use-forwarded-headers - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:59:57.738 (170ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] keep-alive keep-alive-requests Check the upstream keep alive should set keep alive connection timeout to upstream server" classname="nginx-ingress-controller e2e suite" status="passed" time="28.099586781">
              <system-err>&gt; Enter [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:59:57.739&#xA;&lt; Exit [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:00:04.547 (6.809s)&#xA;&gt; Enter [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:33 @ 03/16/23 07:00:04.547&#xA;&lt; Exit [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:33 @ 03/16/23 07:00:15.581 (11.033s)&#xA;&gt; Enter [It] should set keep alive connection timeout to upstream server - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:68 @ 03/16/23 07:00:15.581&#xA;&lt; Exit [It] should set keep alive connection timeout to upstream server - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:68 @ 03/16/23 07:00:25.696 (10.115s)&#xA;&gt; Enter [AfterEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:00:25.696&#xA;&lt; Exit [AfterEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:00:25.838 (142ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] proxy-* should turn off proxy-request-buffering" classname="nginx-ingress-controller e2e suite" status="passed" time="23.198223779">
              <system-err>&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:00:25.839&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:00:34.641 (8.803s)&#xA;&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 03/16/23 07:00:34.641&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 03/16/23 07:00:38.666 (4.024s)&#xA;&gt; Enter [It] should turn off proxy-request-buffering - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:179 @ 03/16/23 07:00:38.666&#xA;&lt; Exit [It] should turn off proxy-request-buffering - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:179 @ 03/16/23 07:00:48.861 (10.195s)&#xA;&gt; Enter [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:00:48.861&#xA;&lt; Exit [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:00:49.037 (176ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] proxy-* should not set proxy client-max-body-size to incorrect value" classname="nginx-ingress-controller e2e suite" status="passed" time="21.141777348">
              <system-err>&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:00:49.037&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:00:55.909 (6.871s)&#xA;&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 03/16/23 07:00:55.909&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 03/16/23 07:00:59.926 (4.017s)&#xA;&gt; Enter [It] should not set proxy client-max-body-size to incorrect value - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:100 @ 03/16/23 07:00:59.926&#xA;&lt; Exit [It] should not set proxy client-max-body-size to incorrect value - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:100 @ 03/16/23 07:01:10.039 (10.113s)&#xA;&gt; Enter [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:01:10.039&#xA;&lt; Exit [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:01:10.179 (140ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Configure OpenTracing should exists opentracing directive when is enabled" classname="nginx-ingress-controller e2e suite" status="passed" time="29.176767463">
              <system-err>&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:01:10.18&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:01:17.992 (7.812s)&#xA;&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 03/16/23 07:01:17.992&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 03/16/23 07:01:22.017 (4.025s)&#xA;&gt; Enter [It] should exists opentracing directive when is enabled - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:71 @ 03/16/23 07:01:22.017&#xA;&lt; Exit [It] should exists opentracing directive when is enabled - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:71 @ 03/16/23 07:01:39.141 (17.124s)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:01:39.141&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:01:39.356 (216ms)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 03/16/23 07:01:39.356&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 03/16/23 07:01:39.356 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] proxy-read-timeout should not set invalid proxy read timeouts using configmap values" classname="nginx-ingress-controller e2e suite" status="passed" time="28.197486774">
              <system-err>&gt; Enter [BeforeEach] [Setting] proxy-read-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:01:39.358&#xA;&lt; Exit [BeforeEach] [Setting] proxy-read-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:01:46.292 (6.935s)&#xA;&gt; Enter [BeforeEach] [Setting] proxy-read-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_read_timeout.go:32 @ 03/16/23 07:01:46.292&#xA;&lt; Exit [BeforeEach] [Setting] proxy-read-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_read_timeout.go:32 @ 03/16/23 07:01:50.308 (4.016s)&#xA;&gt; Enter [It] should not set invalid proxy read timeouts using configmap values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_read_timeout.go:52 @ 03/16/23 07:01:50.308&#xA;&lt; Exit [It] should not set invalid proxy read timeouts using configmap values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_read_timeout.go:52 @ 03/16/23 07:02:07.428 (17.12s)&#xA;&gt; Enter [AfterEach] [Setting] proxy-read-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:02:07.428&#xA;&lt; Exit [AfterEach] [Setting] proxy-read-timeout - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:02:07.555 (127ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] affinity session-cookie-name should not set cookie without domain annotation" classname="nginx-ingress-controller e2e suite" status="passed" time="21.136311232">
              <system-err>&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:02:07.556&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:02:14.429 (6.874s)&#xA;&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 03/16/23 07:02:14.429&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 03/16/23 07:02:18.446 (4.017s)&#xA;&gt; Enter [It] should not set cookie without domain annotation - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:248 @ 03/16/23 07:02:18.446&#xA;&lt; Exit [It] should not set cookie without domain annotation - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:248 @ 03/16/23 07:02:28.55 (10.104s)&#xA;&gt; Enter [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:02:28.55&#xA;&lt; Exit [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:02:28.692 (141ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Security] block-* should block Referers defined in the ConfigMap" classname="nginx-ingress-controller e2e suite" status="passed" time="28.093742776">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Security] block-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:02:28.692&#xA;&lt; Exit [BeforeEach] [Setting] [Security] block-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:02:35.517 (6.825s)&#xA;&gt; Enter [BeforeEach] [Setting] [Security] block-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_access_block.go:33 @ 03/16/23 07:02:35.517&#xA;&lt; Exit [BeforeEach] [Setting] [Security] block-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_access_block.go:33 @ 03/16/23 07:02:46.547 (11.03s)&#xA;&gt; Enter [It] should block Referers defined in the ConfigMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_access_block.go:88 @ 03/16/23 07:02:46.547&#xA;&lt; Exit [It] should block Referers defined in the ConfigMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_access_block.go:88 @ 03/16/23 07:02:56.657 (10.11s)&#xA;&gt; Enter [AfterEach] [Setting] [Security] block-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:02:56.657&#xA;&lt; Exit [AfterEach] [Setting] [Security] block-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:02:56.786 (129ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] connection-proxy-header set connection header to keep-alive" classname="nginx-ingress-controller e2e suite" status="passed" time="23.117179259">
              <system-err>&gt; Enter [BeforeEach] [Annotations] connection-proxy-header - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:02:56.786&#xA;&lt; Exit [BeforeEach] [Annotations] connection-proxy-header - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:03:03.607 (6.821s)&#xA;&gt; Enter [BeforeEach] [Annotations] connection-proxy-header - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/connection.go:32 @ 03/16/23 07:03:03.607&#xA;&lt; Exit [BeforeEach] [Annotations] connection-proxy-header - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/connection.go:32 @ 03/16/23 07:03:09.628 (6.021s)&#xA;&gt; Enter [It] set connection header to keep-alive - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/connection.go:36 @ 03/16/23 07:03:09.628&#xA;&lt; Exit [It] set connection header to keep-alive - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/connection.go:36 @ 03/16/23 07:03:19.756 (10.128s)&#xA;&gt; Enter [AfterEach] [Annotations] connection-proxy-header - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:03:19.756&#xA;&lt; Exit [AfterEach] [Annotations] connection-proxy-header - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:03:19.903 (148ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Lua] lua-shared-dicts configures lua shared dicts" classname="nginx-ingress-controller e2e suite" status="passed" time="19.130806878">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Lua] lua-shared-dicts - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:03:19.904&#xA;&lt; Exit [BeforeEach] [Setting] [Lua] lua-shared-dicts - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:03:26.805 (6.901s)&#xA;&gt; Enter [It] configures lua shared dicts - /go/src/k8s.io/ingress-nginx/test/e2e/settings/lua_shared_dicts.go:29 @ 03/16/23 07:03:26.805&#xA;&lt; Exit [It] configures lua shared dicts - /go/src/k8s.io/ingress-nginx/test/e2e/settings/lua_shared_dicts.go:29 @ 03/16/23 07:03:38.894 (12.089s)&#xA;&gt; Enter [AfterEach] [Setting] [Lua] lua-shared-dicts - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:03:38.894&#xA;&lt; Exit [AfterEach] [Setting] [Lua] lua-shared-dicts - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:03:39.035 (141ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] rewrite-target use-regex enable-rewrite-log should use correct longest path match" classname="nginx-ingress-controller e2e suite" status="passed" time="34.229593905">
              <system-err>&gt; Enter [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:03:39.035&#xA;&lt; Exit [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:03:48.855 (9.82s)&#xA;&gt; Enter [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:33 @ 03/16/23 07:03:48.855&#xA;&lt; Exit [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:33 @ 03/16/23 07:03:52.878 (4.024s)&#xA;&gt; Enter [It] should use correct longest path match - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:66 @ 03/16/23 07:03:52.878&#xA;STEP: creating a regular ingress definition - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:69 @ 03/16/23 07:03:52.878&#xA;STEP: making a request to the non-rewritten location - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:78 @ 03/16/23 07:04:02.98&#xA;STEP: creating an ingress definition with the rewrite-target annotation set on the &#34;/&#34; location - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:88 @ 03/16/23 07:04:02.983&#xA;STEP: making a second request to the non-rewritten location - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:102 @ 03/16/23 07:04:13.085&#xA;&lt; Exit [It] should use correct longest path match - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:66 @ 03/16/23 07:04:13.089 (20.211s)&#xA;&gt; Enter [AfterEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:04:13.089&#xA;&lt; Exit [AfterEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:04:13.265 (175ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] proxy-* should set proxy_redirect to default" classname="nginx-ingress-controller e2e suite" status="passed" time="22.13703253">
              <system-err>&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:04:13.265&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:04:21.139 (7.873s)&#xA;&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 03/16/23 07:04:21.139&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 03/16/23 07:04:25.162 (4.024s)&#xA;&gt; Enter [It] should set proxy_redirect to default - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:52 @ 03/16/23 07:04:25.162&#xA;&lt; Exit [It] should set proxy_redirect to default - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:52 @ 03/16/23 07:04:35.259 (10.097s)&#xA;&gt; Enter [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:04:35.259&#xA;&lt; Exit [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:04:35.402 (143ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] affinity session-cookie-name does not set the path to / on the generated cookie if there&#39;s more than one rule referring to the same backend" classname="nginx-ingress-controller e2e suite" status="passed" time="21.050485189">
              <system-err>&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:04:35.403&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:04:42.215 (6.812s)&#xA;&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 03/16/23 07:04:42.215&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 03/16/23 07:04:46.233 (4.018s)&#xA;&gt; Enter [It] does not set the path to / on the generated cookie if there&#39;s more than one rule referring to the same backend - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:121 @ 03/16/23 07:04:46.233&#xA;&lt; Exit [It] does not set the path to / on the generated cookie if there&#39;s more than one rule referring to the same backend - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:121 @ 03/16/23 07:04:56.303 (10.07s)&#xA;&gt; Enter [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:04:56.303&#xA;&lt; Exit [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:04:56.453 (150ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* when canary is created should route requests to the correct upstream if mainline ingress is created before the canary ingress" classname="nginx-ingress-controller e2e suite" status="passed" time="30.127910796">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:04:56.454&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:05:03.26 (6.807s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 03/16/23 07:05:03.26&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 03/16/23 07:05:09.304 (6.043s)&#xA;&gt; Enter [It] should route requests to the correct upstream if mainline ingress is created before the canary ingress - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:161 @ 03/16/23 07:05:09.304&#xA;STEP: routing requests destined for the mainline ingress to the maineline upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:185 @ 03/16/23 07:05:26.408&#xA;STEP: routing requests destined for the canary ingress to the canary upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:195 @ 03/16/23 07:05:26.41&#xA;&lt; Exit [It] should route requests to the correct upstream if mainline ingress is created before the canary ingress - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:161 @ 03/16/23 07:05:26.412 (17.109s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:05:26.412&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:05:26.581 (169ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] backend-protocol - FastCGI should return OK for service with backend protocol FastCGI" classname="nginx-ingress-controller e2e suite" status="passed" time="19.128538473">
              <system-err>&gt; Enter [BeforeEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:05:26.582&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:05:33.471 (6.89s)&#xA;&gt; Enter [BeforeEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fastcgi.go:33 @ 03/16/23 07:05:33.471&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fastcgi.go:33 @ 03/16/23 07:05:35.487 (2.015s)&#xA;&gt; Enter [It] should return OK for service with backend protocol FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fastcgi.go:102 @ 03/16/23 07:05:35.487&#xA;&lt; Exit [It] should return OK for service with backend protocol FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/fastcgi.go:102 @ 03/16/23 07:05:45.576 (10.089s)&#xA;&gt; Enter [AfterEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:05:45.576&#xA;&lt; Exit [AfterEach] [Annotations] backend-protocol - FastCGI - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:05:45.71 (135ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] Geoip2 should include geoip2 line in config when enabled and db file exists" classname="nginx-ingress-controller e2e suite" status="passed" time="32.272799673">
              <system-err>&gt; Enter [BeforeEach] [Setting] Geoip2 - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:05:45.711&#xA;&lt; Exit [BeforeEach] [Setting] Geoip2 - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:05:52.507 (6.797s)&#xA;&gt; Enter [BeforeEach] [Setting] Geoip2 - /go/src/k8s.io/ingress-nginx/test/e2e/settings/geoip2.go:42 @ 03/16/23 07:05:52.507&#xA;&lt; Exit [BeforeEach] [Setting] Geoip2 - /go/src/k8s.io/ingress-nginx/test/e2e/settings/geoip2.go:42 @ 03/16/23 07:05:56.528 (4.021s)&#xA;&gt; Enter [It] should include geoip2 line in config when enabled and db file exists - /go/src/k8s.io/ingress-nginx/test/e2e/settings/geoip2.go:46 @ 03/16/23 07:05:56.528&#xA;Mar 16 07:06:07.744: INFO: Connecting to github.com (20.207.73.82:443)&#xA;Connecting to github.com (20.207.73.82:443)&#xA;Connecting to raw.githubusercontent.com (185.199.108.133:443)&#xA;saving to &#39;/etc/nginx/geoip/GeoLite2-Country.mmdb&#39;&#xA;GeoLite2-Country.mmd 100%!|(MISSING)********************************| 17952  0:00:00 ETA&#xA;&#39;/etc/nginx/geoip/GeoLite2-Country.mmdb&#39; saved&#xA;&#xA;&lt; Exit [It] should include geoip2 line in config when enabled and db file exists - /go/src/k8s.io/ingress-nginx/test/e2e/settings/geoip2.go:46 @ 03/16/23 07:06:17.828 (21.3s)&#xA;&gt; Enter [AfterEach] [Setting] Geoip2 - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:06:17.828&#xA;&lt; Exit [AfterEach] [Setting] Geoip2 - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:06:17.984 (156ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] proxy-ssl-* proxy-ssl-location-only flag should change the nginx config server part" classname="nginx-ingress-controller e2e suite" status="passed" time="43.858704328">
              <system-err>&gt; Enter [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:06:17.984&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:06:24.845 (6.861s)&#xA;&gt; Enter [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:33 @ 03/16/23 07:06:24.845&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:33 @ 03/16/23 07:06:28.87 (4.025s)&#xA;&gt; Enter [It] proxy-ssl-location-only flag should change the nginx config server part - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:150 @ 03/16/23 07:06:28.87&#xA;&lt; Exit [It] proxy-ssl-location-only flag should change the nginx config server part - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxyssl.go:150 @ 03/16/23 07:07:01.658 (32.788s)&#xA;&gt; Enter [AfterEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:07:01.658&#xA;&lt; Exit [AfterEach] [Annotations] proxy-ssl-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:07:01.843 (185ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] client-body-buffer-size should not set client_body_buffer_size to invalid 1b" classname="nginx-ingress-controller e2e suite" status="passed" time="21.25059308">
              <system-err>&gt; Enter [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:07:01.843&#xA;&lt; Exit [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:07:08.712 (6.869s)&#xA;&gt; Enter [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:31 @ 03/16/23 07:07:08.712&#xA;&lt; Exit [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:31 @ 03/16/23 07:07:12.726 (4.014s)&#xA;&gt; Enter [It] should not set client_body_buffer_size to invalid 1b - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:145 @ 03/16/23 07:07:12.726&#xA;&lt; Exit [It] should not set client_body_buffer_size to invalid 1b - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:145 @ 03/16/23 07:07:22.875 (10.149s)&#xA;&gt; Enter [AfterEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:07:22.875&#xA;&lt; Exit [AfterEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:07:23.094 (219ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* when canaried by weight should route requests only to mainline if canary weight is 0" classname="nginx-ingress-controller e2e suite" status="passed" time="35.184297878">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:07:23.094&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:07:29.91 (6.816s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 03/16/23 07:07:29.91&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 03/16/23 07:07:37.96 (8.05s)&#xA;&gt; Enter [It] should route requests only to mainline if canary weight is 0 - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:705 @ 03/16/23 07:07:37.96&#xA;&lt; Exit [It] should route requests only to mainline if canary weight is 0 - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:705 @ 03/16/23 07:07:58.131 (20.171s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:07:58.131&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:07:58.278 (148ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] proxy-* should not set invalid proxy timeouts" classname="nginx-ingress-controller e2e suite" status="passed" time="22.109425828">
              <system-err>&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:07:58.279&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:08:06.126 (7.847s)&#xA;&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 03/16/23 07:08:06.126&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 03/16/23 07:08:10.152 (4.025s)&#xA;&gt; Enter [It] should not set invalid proxy timeouts - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:136 @ 03/16/23 07:08:10.152&#xA;&lt; Exit [It] should not set invalid proxy timeouts - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:136 @ 03/16/23 07:08:20.255 (10.103s)&#xA;&gt; Enter [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:08:20.255&#xA;&lt; Exit [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:08:20.388 (134ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] gzip should set gzip_disable to msie6" classname="nginx-ingress-controller e2e suite" status="passed" time="24.109656872">
              <system-err>&gt; Enter [BeforeEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:08:20.389&#xA;&lt; Exit [BeforeEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:08:27.192 (6.804s)&#xA;&gt; Enter [It] should set gzip_disable to msie6 - /go/src/k8s.io/ingress-nginx/test/e2e/settings/gzip.go:67 @ 03/16/23 07:08:27.192&#xA;&lt; Exit [It] should set gzip_disable to msie6 - /go/src/k8s.io/ingress-nginx/test/e2e/settings/gzip.go:67 @ 03/16/23 07:08:44.335 (17.143s)&#xA;&gt; Enter [AfterEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:08:44.335&#xA;&lt; Exit [AfterEach] [Setting] gzip - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:08:44.498 (163ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Lua] dynamic configuration when only backends change handles endpoints only changes (down scaling of replicas)" classname="nginx-ingress-controller e2e suite" status="passed" time="43.322958825">
              <system-err>&gt; Enter [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:08:44.5&#xA;&lt; Exit [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:08:51.319 (6.82s)&#xA;&gt; Enter [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:45 @ 03/16/23 07:08:51.319&#xA;&lt; Exit [BeforeEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:45 @ 03/16/23 07:09:05.464 (14.144s)&#xA;&gt; Enter [It] handles endpoints only changes (down scaling of replicas) - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:87 @ 03/16/23 07:09:05.464&#xA;&lt; Exit [It] handles endpoints only changes (down scaling of replicas) - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_configuration.go:87 @ 03/16/23 07:09:27.66 (22.196s)&#xA;&gt; Enter [AfterEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:09:27.66&#xA;&lt; Exit [AfterEach] [Lua] dynamic configuration - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:09:27.823 (162ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] upstream-hash-by-* should connect to the same subset of pods" classname="nginx-ingress-controller e2e suite" status="passed" time="94.452684108">
              <system-err>&gt; Enter [BeforeEach] [Annotations] upstream-hash-by-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:37:32.303&#xA;&lt; Exit [BeforeEach] [Annotations] upstream-hash-by-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:37:42.19 (9.887s)&#xA;&gt; Enter [BeforeEach] [Annotations] upstream-hash-by-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/upstreamhashby.go:79 @ 03/16/23 06:37:42.19&#xA;&lt; Exit [BeforeEach] [Annotations] upstream-hash-by-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/upstreamhashby.go:79 @ 03/16/23 06:38:36.239 (54.049s)&#xA;&gt; Enter [It] should connect to the same subset of pods - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/upstreamhashby.go:92 @ 03/16/23 06:38:36.239&#xA;&lt; Exit [It] should connect to the same subset of pods - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/upstreamhashby.go:92 @ 03/16/23 06:39:06.578 (30.339s)&#xA;&gt; Enter [AfterEach] [Annotations] upstream-hash-by-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:39:06.578&#xA;&lt; Exit [AfterEach] [Annotations] upstream-hash-by-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:39:06.755 (177ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Configure OpenTracing should enable opentracing using jaeger with sampler host" classname="nginx-ingress-controller e2e suite" status="passed" time="30.985304811">
              <system-err>&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:39:06.756&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:39:13.563 (6.807s)&#xA;&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 03/16/23 06:39:13.563&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 03/16/23 06:39:17.581 (4.018s)&#xA;&gt; Enter [It] should enable opentracing using jaeger with sampler host - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:184 @ 03/16/23 06:39:17.581&#xA;&lt; Exit [It] should enable opentracing using jaeger with sampler host - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:184 @ 03/16/23 06:39:37.6 (20.019s)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:39:37.6&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:39:37.741 (141ms)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 03/16/23 06:39:37.741&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 03/16/23 06:39:37.741 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [SSL] secret update should not appear references to secret updates not used in ingress rules" classname="nginx-ingress-controller e2e suite" status="passed" time="34.381488799">
              <system-err>&gt; Enter [BeforeEach] [SSL] secret update - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:39:37.742&#xA;&lt; Exit [BeforeEach] [SSL] secret update - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:39:44.713 (6.971s)&#xA;&gt; Enter [BeforeEach] [SSL] secret update - /go/src/k8s.io/ingress-nginx/test/e2e/ssl/secret_update.go:36 @ 03/16/23 06:39:44.713&#xA;&lt; Exit [BeforeEach] [SSL] secret update - /go/src/k8s.io/ingress-nginx/test/e2e/ssl/secret_update.go:36 @ 03/16/23 06:39:48.761 (4.049s)&#xA;&gt; Enter [It] should not appear references to secret updates not used in ingress rules - /go/src/k8s.io/ingress-nginx/test/e2e/ssl/secret_update.go:40 @ 03/16/23 06:39:48.761&#xA;&lt; Exit [It] should not appear references to secret updates not used in ingress rules - /go/src/k8s.io/ingress-nginx/test/e2e/ssl/secret_update.go:40 @ 03/16/23 06:40:11.966 (23.204s)&#xA;&gt; Enter [AfterEach] [SSL] secret update - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:40:11.966&#xA;&lt; Exit [AfterEach] [SSL] secret update - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:40:12.123 (157ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] plugins should exist a x-hello-world header" classname="nginx-ingress-controller e2e suite" status="passed" time="28.105378133">
              <system-err>&gt; Enter [BeforeEach] plugins - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:40:12.124&#xA;&lt; Exit [BeforeEach] plugins - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:40:18.966 (6.842s)&#xA;&gt; Enter [BeforeEach] plugins - /go/src/k8s.io/ingress-nginx/test/e2e/settings/plugins.go:31 @ 03/16/23 06:40:18.966&#xA;&lt; Exit [BeforeEach] plugins - /go/src/k8s.io/ingress-nginx/test/e2e/settings/plugins.go:31 @ 03/16/23 06:40:22.983 (4.017s)&#xA;&gt; Enter [It] should exist a x-hello-world header - /go/src/k8s.io/ingress-nginx/test/e2e/settings/plugins.go:35 @ 03/16/23 06:40:22.983&#xA;&lt; Exit [It] should exist a x-hello-world header - /go/src/k8s.io/ingress-nginx/test/e2e/settings/plugins.go:35 @ 03/16/23 06:40:40.09 (17.107s)&#xA;&gt; Enter [AfterEach] plugins - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:40:40.09&#xA;&lt; Exit [AfterEach] plugins - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:40:40.229 (139ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] backend-protocol - GRPC authorization metadata should be overwritten by external auth response headers" classname="nginx-ingress-controller e2e suite" status="passed" time="35.025667182">
              <system-err>&gt; Enter [BeforeEach] [Annotations] backend-protocol - GRPC - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:40:40.229&#xA;&lt; Exit [BeforeEach] [Annotations] backend-protocol - GRPC - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:40:47.133 (6.903s)&#xA;&gt; Enter [It] authorization metadata should be overwritten by external auth response headers - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/grpc.go:126 @ 03/16/23 06:40:47.133&#xA;&lt; Exit [It] authorization metadata should be overwritten by external auth response headers - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/grpc.go:126 @ 03/16/23 06:41:13.502 (26.369s)&#xA;&gt; Enter [AfterEach] [Annotations] backend-protocol - GRPC - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:41:13.502&#xA;&lt; Exit [AfterEach] [Annotations] backend-protocol - GRPC - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:41:15.255 (1.753s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should allow headers for cors" classname="nginx-ingress-controller e2e suite" status="passed" time="26.20440606">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:41:15.258&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:41:25.183 (9.925s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 03/16/23 06:41:25.183&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 03/16/23 06:41:31.207 (6.023s)&#xA;&gt; Enter [It] should allow headers for cors - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:137 @ 03/16/23 06:41:31.207&#xA;&lt; Exit [It] should allow headers for cors - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:137 @ 03/16/23 06:41:41.302 (10.095s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:41:41.302&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:41:41.462 (160ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Default Backend] SSL should return a self generated SSL certificate" classname="nginx-ingress-controller e2e suite" status="passed" time="15.116476506">
              <system-err>&gt; Enter [BeforeEach] [Default Backend] SSL - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:41:41.463&#xA;&lt; Exit [BeforeEach] [Default Backend] SSL - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:41:51.378 (9.915s)&#xA;&gt; Enter [It] should return a self generated SSL certificate - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/ssl.go:29 @ 03/16/23 06:41:51.378&#xA;STEP: checking SSL Certificate using the NGINX IP address - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/ssl.go:30 @ 03/16/23 06:41:51.378&#xA;STEP: checking SSL Certificate using the NGINX catch all server - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/ssl.go:45 @ 03/16/23 06:41:56.39&#xA;&lt; Exit [It] should return a self generated SSL certificate - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/ssl.go:29 @ 03/16/23 06:41:56.399 (5.021s)&#xA;&gt; Enter [AfterEach] [Default Backend] SSL - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:41:56.399&#xA;&lt; Exit [AfterEach] [Default Backend] SSL - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:41:56.579 (180ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Default Backend] disables access logging for default backend" classname="nginx-ingress-controller e2e suite" status="skipped" time="8.626515702">
              <skipped message="skipped - enable-access-log-for-default-backend"></skipped>
              <system-err>&gt; Enter [BeforeEach] [Default Backend] - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:41:56.58&#xA;&lt; Exit [BeforeEach] [Default Backend] - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:42:04.954 (8.375s)&#xA;&gt; Enter [It] disables access logging for default backend - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:105 @ 03/16/23 06:42:04.954&#xA;[SKIPPED] enable-access-log-for-default-backend&#xA;In [It] at: /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:107 @ 03/16/23 06:42:04.955&#xA;&lt; Exit [It] disables access logging for default backend - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/default_backend.go:105 @ 03/16/23 06:42:04.955 (1ms)&#xA;&gt; Enter [AfterEach] [Default Backend] - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:42:04.955&#xA;&lt; Exit [AfterEach] [Default Backend] - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:42:05.206 (251ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* when external authentication is configured should return status code 200 when signed in" classname="nginx-ingress-controller e2e suite" status="passed" time="26.436434443">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:42:05.206&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:42:13.35 (8.144s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 06:42:13.35&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 06:42:17.372 (4.021s)&#xA;&gt; Enter [BeforeEach] when external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:458 @ 03/16/23 06:42:17.372&#xA;&lt; Exit [BeforeEach] when external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:458 @ 03/16/23 06:42:31.498 (14.126s)&#xA;&gt; Enter [It] should return status code 200 when signed in - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:485 @ 03/16/23 06:42:31.498&#xA;&lt; Exit [It] should return status code 200 when signed in - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:485 @ 03/16/23 06:42:31.501 (3ms)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:42:31.501&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:42:31.643 (142ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Ingress] definition without host should set ingress details variables for ingresses without a host" classname="nginx-ingress-controller e2e suite" status="passed" time="21.269211075">
              <system-err>&gt; Enter [BeforeEach] [Ingress] definition without host - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:42:31.643&#xA;&lt; Exit [BeforeEach] [Ingress] definition without host - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:42:38.446 (6.803s)&#xA;&gt; Enter [It] should set ingress details variables for ingresses without a host - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/without_host.go:34 @ 03/16/23 06:42:38.446&#xA;&lt; Exit [It] should set ingress details variables for ingresses without a host - /go/src/k8s.io/ingress-nginx/test/e2e/ingress/without_host.go:34 @ 03/16/23 06:42:52.638 (14.192s)&#xA;&gt; Enter [AfterEach] [Ingress] definition without host - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:42:52.638&#xA;&lt; Exit [AfterEach] [Ingress] definition without host - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:42:52.912 (274ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] Configmap change should reload after an update in the configuration" classname="nginx-ingress-controller e2e suite" status="passed" time="41.408706338">
              <system-err>&gt; Enter [BeforeEach] [Setting] Configmap change - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:42:52.913&#xA;&lt; Exit [BeforeEach] [Setting] Configmap change - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:42:59.816 (6.903s)&#xA;&gt; Enter [BeforeEach] [Setting] Configmap change - /go/src/k8s.io/ingress-nginx/test/e2e/settings/configmap_change.go:32 @ 03/16/23 06:42:59.816&#xA;&lt; Exit [BeforeEach] [Setting] Configmap change - /go/src/k8s.io/ingress-nginx/test/e2e/settings/configmap_change.go:32 @ 03/16/23 06:43:03.836 (4.02s)&#xA;&gt; Enter [It] should reload after an update in the configuration - /go/src/k8s.io/ingress-nginx/test/e2e/settings/configmap_change.go:36 @ 03/16/23 06:43:03.836&#xA;STEP: adding a whitelist-source-range - /go/src/k8s.io/ingress-nginx/test/e2e/settings/configmap_change.go:42 @ 03/16/23 06:43:10.843&#xA;STEP: changing error-log-level - /go/src/k8s.io/ingress-nginx/test/e2e/settings/configmap_change.go:61 @ 03/16/23 06:43:20.953&#xA;&lt; Exit [It] should reload after an update in the configuration - /go/src/k8s.io/ingress-nginx/test/e2e/settings/configmap_change.go:36 @ 03/16/23 06:43:34.115 (30.28s)&#xA;&gt; Enter [AfterEach] [Setting] Configmap change - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:43:34.115&#xA;&lt; Exit [AfterEach] [Setting] Configmap change - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:43:34.321 (206ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] Bad annotation values [BAD_ANNOTATIONS] should drop an ingress if there is a custom blocklist config in place and allow others to pass" classname="nginx-ingress-controller e2e suite" status="passed" time="37.858646425">
              <system-err>&gt; Enter [BeforeEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:43:34.322&#xA;&lt; Exit [BeforeEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:43:42.751 (8.429s)&#xA;&gt; Enter [BeforeEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/badannotationvalues.go:32 @ 03/16/23 06:43:42.751&#xA;&lt; Exit [BeforeEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/badannotationvalues.go:32 @ 03/16/23 06:43:46.798 (4.048s)&#xA;&gt; Enter [It] [BAD_ANNOTATIONS] should drop an ingress if there is a custom blocklist config in place and allow others to pass - /go/src/k8s.io/ingress-nginx/test/e2e/settings/badannotationvalues.go:133 @ 03/16/23 06:43:46.798&#xA;&lt; Exit [It] [BAD_ANNOTATIONS] should drop an ingress if there is a custom blocklist config in place and allow others to pass - /go/src/k8s.io/ingress-nginx/test/e2e/settings/badannotationvalues.go:133 @ 03/16/23 06:44:12.007 (25.209s)&#xA;&gt; Enter [AfterEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:44:12.007&#xA;&lt; Exit [AfterEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:44:12.18 (174ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Configure OpenTracing should not exists opentracing_location_operation_name directive when is empty" classname="nginx-ingress-controller e2e suite" status="passed" time="29.149967451">
              <system-err>&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:44:12.181&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:44:20.005 (7.825s)&#xA;&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 03/16/23 06:44:20.005&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 03/16/23 06:44:24.022 (4.017s)&#xA;&gt; Enter [It] should not exists opentracing_location_operation_name directive when is empty - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:130 @ 03/16/23 06:44:24.022&#xA;&lt; Exit [It] should not exists opentracing_location_operation_name directive when is empty - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:130 @ 03/16/23 06:44:41.149 (17.127s)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:44:41.149&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:44:41.331 (182ms)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 03/16/23 06:44:41.331&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 03/16/23 06:44:41.331 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] hash size Check proxy header hash size should set proxy-headers-hash-max-size" classname="nginx-ingress-controller e2e suite" status="passed" time="28.237822305">
              <system-err>&gt; Enter [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:44:41.331&#xA;&lt; Exit [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:44:48.308 (6.977s)&#xA;&gt; Enter [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:32 @ 03/16/23 06:44:48.308&#xA;&lt; Exit [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:32 @ 03/16/23 06:44:59.338 (11.029s)&#xA;&gt; Enter [It] should set proxy-headers-hash-max-size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:68 @ 03/16/23 06:44:59.338&#xA;&lt; Exit [It] should set proxy-headers-hash-max-size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:68 @ 03/16/23 06:45:09.425 (10.087s)&#xA;&gt; Enter [AfterEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:45:09.425&#xA;&lt; Exit [AfterEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:45:09.569 (144ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] modsecurity owasp should enable modsecurity through the config map but ignore snippet as disabled by admin" classname="nginx-ingress-controller e2e suite" status="passed" time="40.162152456">
              <system-err>&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:45:09.569&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:45:16.423 (6.854s)&#xA;&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 03/16/23 06:45:16.423&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 03/16/23 06:45:20.439 (4.016s)&#xA;&gt; Enter [It] should enable modsecurity through the config map but ignore snippet as disabled by admin - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:305 @ 03/16/23 06:45:20.439&#xA;&lt; Exit [It] should enable modsecurity through the config map but ignore snippet as disabled by admin - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:305 @ 03/16/23 06:45:49.576 (29.137s)&#xA;&gt; Enter [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:45:49.576&#xA;&lt; Exit [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:45:49.731 (155ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] client-body-buffer-size should set client_body_buffer_size to 1m" classname="nginx-ingress-controller e2e suite" status="passed" time="23.107716013">
              <system-err>&gt; Enter [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:45:49.732&#xA;&lt; Exit [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:45:56.557 (6.825s)&#xA;&gt; Enter [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:31 @ 03/16/23 06:45:56.557&#xA;&lt; Exit [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:31 @ 03/16/23 06:46:02.587 (6.03s)&#xA;&gt; Enter [It] should set client_body_buffer_size to 1m - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:101 @ 03/16/23 06:46:02.587&#xA;&lt; Exit [It] should set client_body_buffer_size to 1m - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:101 @ 03/16/23 06:46:12.695 (10.107s)&#xA;&gt; Enter [AfterEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:46:12.695&#xA;&lt; Exit [AfterEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:46:12.84 (145ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] satisfy should allow multiple auth with satisfy any" classname="nginx-ingress-controller e2e suite" status="passed" time="27.158467537">
              <system-err>&gt; Enter [BeforeEach] [Annotations] satisfy - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:46:12.84&#xA;&lt; Exit [BeforeEach] [Annotations] satisfy - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:46:19.659 (6.819s)&#xA;&gt; Enter [BeforeEach] [Annotations] satisfy - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/satisfy.go:38 @ 03/16/23 06:46:19.659&#xA;&lt; Exit [BeforeEach] [Annotations] satisfy - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/satisfy.go:38 @ 03/16/23 06:46:23.676 (4.018s)&#xA;&gt; Enter [It] should allow multiple auth with satisfy any - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/satisfy.go:84 @ 03/16/23 06:46:23.676&#xA;&lt; Exit [It] should allow multiple auth with satisfy any - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/satisfy.go:84 @ 03/16/23 06:46:39.845 (16.169s)&#xA;&gt; Enter [AfterEach] [Annotations] satisfy - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:46:39.845&#xA;&lt; Exit [AfterEach] [Annotations] satisfy - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:46:39.999 (153ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] log-format-* Check log-format-escape-json and log-format-escape-none should disable the log-format-escape-none" classname="nginx-ingress-controller e2e suite" status="passed" time="28.123096454">
              <system-err>&gt; Enter [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:46:39.999&#xA;&lt; Exit [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:46:46.826 (6.827s)&#xA;&gt; Enter [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:33 @ 03/16/23 06:46:46.826&#xA;&lt; Exit [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:33 @ 03/16/23 06:46:57.859 (11.033s)&#xA;&gt; Enter [It] should disable the log-format-escape-none - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:71 @ 03/16/23 06:46:57.859&#xA;&lt; Exit [It] should disable the log-format-escape-none - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:71 @ 03/16/23 06:47:07.961 (10.102s)&#xA;&gt; Enter [AfterEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:47:07.961&#xA;&lt; Exit [AfterEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:47:08.122 (161ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] rewrite-target use-regex enable-rewrite-log should fail to use longest match for documented warning" classname="nginx-ingress-controller e2e suite" status="passed" time="28.191218841">
              <system-err>&gt; Enter [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:47:08.123&#xA;&lt; Exit [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:47:15.042 (6.919s)&#xA;&gt; Enter [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:33 @ 03/16/23 06:47:15.042&#xA;&lt; Exit [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:33 @ 03/16/23 06:47:19.067 (4.025s)&#xA;&gt; Enter [It] should fail to use longest match for documented warning - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:158 @ 03/16/23 06:47:19.067&#xA;STEP: creating a regular ingress definition - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:161 @ 03/16/23 06:47:19.067&#xA;STEP: creating an ingress definition with the use-regex annotation - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:165 @ 03/16/23 06:47:26.076&#xA;STEP: check that &#39;/foo/bar/bar&#39; does not match the longest exact path - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:179 @ 03/16/23 06:47:36.182&#xA;&lt; Exit [It] should fail to use longest match for documented warning - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:158 @ 03/16/23 06:47:36.185 (17.118s)&#xA;&gt; Enter [AfterEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:47:36.185&#xA;&lt; Exit [AfterEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:47:36.314 (129ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* when external authentication is configured with a custom redirect param should redirect to signin url when not signed in" classname="nginx-ingress-controller e2e suite" status="passed" time="26.121756918">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:47:36.314&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:47:44.129 (7.815s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 06:47:44.129&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 06:47:48.148 (4.019s)&#xA;&gt; Enter [BeforeEach] when external authentication is configured with a custom redirect param - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:651 @ 03/16/23 06:47:48.148&#xA;&lt; Exit [BeforeEach] when external authentication is configured with a custom redirect param - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:651 @ 03/16/23 06:48:02.273 (14.125s)&#xA;&gt; Enter [It] should redirect to signin url when not signed in - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:687 @ 03/16/23 06:48:02.273&#xA;&lt; Exit [It] should redirect to signin url when not signed in - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:687 @ 03/16/23 06:48:02.278 (4ms)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:48:02.278&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:48:02.436 (158ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] log-format-* Check log-format-escape-json and log-format-escape-none should enable the log-format-escape-none" classname="nginx-ingress-controller e2e suite" status="passed" time="28.171040478">
              <system-err>&gt; Enter [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:48:02.436&#xA;&lt; Exit [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:48:09.31 (6.874s)&#xA;&gt; Enter [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:33 @ 03/16/23 06:48:09.31&#xA;&lt; Exit [BeforeEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:33 @ 03/16/23 06:48:20.34 (11.03s)&#xA;&gt; Enter [It] should enable the log-format-escape-none - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:63 @ 03/16/23 06:48:20.34&#xA;&lt; Exit [It] should enable the log-format-escape-none - /go/src/k8s.io/ingress-nginx/test/e2e/settings/log-format.go:63 @ 03/16/23 06:48:30.441 (10.101s)&#xA;&gt; Enter [AfterEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:48:30.441&#xA;&lt; Exit [AfterEach] [Setting] log-format-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:48:30.607 (166ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] Bad annotation values [BAD_ANNOTATIONS] should drop an ingress if there is an invalid character in some annotation" classname="nginx-ingress-controller e2e suite" status="passed" time="38.133084977">
              <system-err>&gt; Enter [BeforeEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:48:30.608&#xA;&lt; Exit [BeforeEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:48:37.415 (6.807s)&#xA;&gt; Enter [BeforeEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/badannotationvalues.go:32 @ 03/16/23 06:48:37.415&#xA;&lt; Exit [BeforeEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/settings/badannotationvalues.go:32 @ 03/16/23 06:48:41.44 (4.025s)&#xA;&gt; Enter [It] [BAD_ANNOTATIONS] should drop an ingress if there is an invalid character in some annotation - /go/src/k8s.io/ingress-nginx/test/e2e/settings/badannotationvalues.go:36 @ 03/16/23 06:48:41.44&#xA;&lt; Exit [It] [BAD_ANNOTATIONS] should drop an ingress if there is an invalid character in some annotation - /go/src/k8s.io/ingress-nginx/test/e2e/settings/badannotationvalues.go:36 @ 03/16/23 06:49:08.6 (27.16s)&#xA;&gt; Enter [AfterEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:49:08.6&#xA;&lt; Exit [AfterEach] [Annotations] Bad annotation values - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:49:08.741 (140ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] enable-access-log enable-rewrite-log set rewrite_log on" classname="nginx-ingress-controller e2e suite" status="passed" time="21.176849819">
              <system-err>&gt; Enter [BeforeEach] [Annotations] enable-access-log enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:49:08.741&#xA;&lt; Exit [BeforeEach] [Annotations] enable-access-log enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:49:15.639 (6.898s)&#xA;&gt; Enter [BeforeEach] [Annotations] enable-access-log enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/log.go:30 @ 03/16/23 06:49:15.639&#xA;&lt; Exit [BeforeEach] [Annotations] enable-access-log enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/log.go:30 @ 03/16/23 06:49:19.66 (4.021s)&#xA;&gt; Enter [It] set rewrite_log on - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/log.go:49 @ 03/16/23 06:49:19.66&#xA;&lt; Exit [It] set rewrite_log on - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/log.go:49 @ 03/16/23 06:49:29.757 (10.097s)&#xA;&gt; Enter [AfterEach] [Annotations] enable-access-log enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:49:29.757&#xA;&lt; Exit [AfterEach] [Annotations] enable-access-log enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:49:29.918 (161ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Flag] ingress-class With default ingress class config should accept both Ingresses with default IngressClassName and IngressClass annotation" classname="nginx-ingress-controller e2e suite" status="passed" time="28.151664716">
              <system-err>&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:49:29.918&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:49:36.73 (6.812s)&#xA;&gt; Enter [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 03/16/23 06:49:36.73&#xA;&lt; Exit [BeforeEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:47 @ 03/16/23 06:49:40.752 (4.021s)&#xA;&gt; Enter [It] should accept both Ingresses with default IngressClassName and IngressClass annotation - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:132 @ 03/16/23 06:49:40.752&#xA;&lt; Exit [It] should accept both Ingresses with default IngressClassName and IngressClass annotation - /go/src/k8s.io/ingress-nginx/test/e2e/settings/ingress_class.go:132 @ 03/16/23 06:49:57.885 (17.134s)&#xA;&gt; Enter [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:49:57.885&#xA;&lt; Exit [AfterEach] [Flag] ingress-class - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:49:58.07 (185ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] client-body-buffer-size should set client_body_buffer_size to 1K" classname="nginx-ingress-controller e2e suite" status="passed" time="21.160424671">
              <system-err>&gt; Enter [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:49:58.071&#xA;&lt; Exit [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:50:04.914 (6.843s)&#xA;&gt; Enter [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:31 @ 03/16/23 06:50:04.914&#xA;&lt; Exit [BeforeEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:31 @ 03/16/23 06:50:08.94 (4.026s)&#xA;&gt; Enter [It] should set client_body_buffer_size to 1K - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:57 @ 03/16/23 06:50:08.94&#xA;&lt; Exit [It] should set client_body_buffer_size to 1K - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/clientbodybuffersize.go:57 @ 03/16/23 06:50:19.048 (10.108s)&#xA;&gt; Enter [AfterEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:50:19.048&#xA;&lt; Exit [AfterEach] [Annotations] client-body-buffer-size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:50:19.231 (183ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [SSL] TLS protocols, ciphers and headers) should configure HSTS policy header setting max-age parameter" classname="nginx-ingress-controller e2e suite" status="passed" time="33.224997255">
              <system-err>&gt; Enter [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:50:19.232&#xA;&lt; Exit [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:50:27.054 (7.823s)&#xA;&gt; Enter [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:35 @ 03/16/23 06:50:27.054&#xA;&lt; Exit [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:35 @ 03/16/23 06:50:31.084 (4.03s)&#xA;&gt; Enter [BeforeEach] should configure HSTS policy header - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:100 @ 03/16/23 06:50:31.084&#xA;Mar 16 06:50:40.190: INFO: Unexpected TLS error: tls: failed to verify certificate: x509: certificate is valid for ingress.local, not settings-tls&#xA;&lt; Exit [BeforeEach] should configure HSTS policy header - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:100 @ 03/16/23 06:50:42.189 (11.105s)&#xA;&gt; Enter [It] setting max-age parameter - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:111 @ 03/16/23 06:50:42.189&#xA;&lt; Exit [It] setting max-age parameter - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:111 @ 03/16/23 06:50:52.307 (10.118s)&#xA;&gt; Enter [AfterEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:50:52.307&#xA;&lt; Exit [AfterEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:50:52.457 (150ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Lua] dynamic certificates given an ingress with TLS correctly configured falls back to using default certificate when secret gets deleted without reloading" classname="nginx-ingress-controller e2e suite" status="passed" time="39.490617863">
              <system-err>&gt; Enter [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:50:52.457&#xA;&lt; Exit [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:50:59.29 (6.833s)&#xA;&gt; Enter [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:41 @ 03/16/23 06:50:59.29&#xA;&lt; Exit [BeforeEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:41 @ 03/16/23 06:51:01.314 (2.024s)&#xA;&gt; Enter [BeforeEach] given an ingress with TLS correctly configured - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:113 @ 03/16/23 06:51:01.314&#xA;STEP: configuring certificate_by_lua and skipping Nginx configuration of the new certificate - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:128 @ 03/16/23 06:51:18.578&#xA;STEP: serving the configured certificate on HTTPS endpoint - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:136 @ 03/16/23 06:51:26.696&#xA;&lt; Exit [BeforeEach] given an ingress with TLS correctly configured - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:113 @ 03/16/23 06:51:26.702 (25.388s)&#xA;&gt; Enter [It] falls back to using default certificate when secret gets deleted without reloading - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:185 @ 03/16/23 06:51:26.702&#xA;STEP: serving the default certificate on HTTPS endpoint - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:204 @ 03/16/23 06:51:31.721&#xA;STEP: skipping Nginx reload - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:214 @ 03/16/23 06:51:31.738&#xA;&lt; Exit [It] falls back to using default certificate when secret gets deleted without reloading - /go/src/k8s.io/ingress-nginx/test/e2e/lua/dynamic_certificates.go:185 @ 03/16/23 06:51:31.738 (5.036s)&#xA;&gt; Enter [AfterEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:51:31.738&#xA;&lt; Exit [AfterEach] [Lua] dynamic certificates - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:51:31.947 (209ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] server-alias should return status code 200 for host &#39;foo&#39; and &#39;bar&#39;" classname="nginx-ingress-controller e2e suite" status="passed" time="21.125709962">
              <system-err>&gt; Enter [BeforeEach] [Annotations] server-alias - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:51:31.948&#xA;&lt; Exit [BeforeEach] [Annotations] server-alias - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:51:38.759 (6.81s)&#xA;&gt; Enter [BeforeEach] [Annotations] server-alias - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/alias.go:32 @ 03/16/23 06:51:38.759&#xA;&lt; Exit [BeforeEach] [Annotations] server-alias - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/alias.go:32 @ 03/16/23 06:51:42.776 (4.017s)&#xA;&gt; Enter [It] should return status code 200 for host &#39;foo&#39; and &#39;bar&#39; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/alias.go:62 @ 03/16/23 06:51:42.776&#xA;&lt; Exit [It] should return status code 200 for host &#39;foo&#39; and &#39;bar&#39; - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/alias.go:62 @ 03/16/23 06:51:52.905 (10.129s)&#xA;&gt; Enter [AfterEach] [Annotations] server-alias - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:51:52.905&#xA;&lt; Exit [AfterEach] [Annotations] server-alias - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:51:53.074 (169ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-tls-* should 302 redirect to error page instead of 400 when auth-tls-error-page is set" classname="nginx-ingress-controller e2e suite" status="passed" time="24.491300087">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:51:53.074&#xA;&lt; Exit [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:51:59.903 (6.828s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:32 @ 03/16/23 06:51:59.903&#xA;&lt; Exit [BeforeEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:32 @ 03/16/23 06:52:03.935 (4.032s)&#xA;&gt; Enter [It] should 302 redirect to error page instead of 400 when auth-tls-error-page is set - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:114 @ 03/16/23 06:52:03.935&#xA;&lt; Exit [It] should 302 redirect to error page instead of 400 when auth-tls-error-page is set - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/authtls.go:114 @ 03/16/23 06:52:17.411 (13.476s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:52:17.411&#xA;&lt; Exit [AfterEach] [Annotations] auth-tls-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:52:17.566 (155ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] hash size Check the variable hash size should set variables-hash-max-size" classname="nginx-ingress-controller e2e suite" status="passed" time="26.074664167">
              <system-err>&gt; Enter [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:52:17.566&#xA;&lt; Exit [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:52:24.391 (6.824s)&#xA;&gt; Enter [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:32 @ 03/16/23 06:52:24.391&#xA;&lt; Exit [BeforeEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:32 @ 03/16/23 06:52:33.422 (9.031s)&#xA;&gt; Enter [It] should set variables-hash-max-size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:88 @ 03/16/23 06:52:33.422&#xA;&lt; Exit [It] should set variables-hash-max-size - /go/src/k8s.io/ingress-nginx/test/e2e/settings/hash-size.go:88 @ 03/16/23 06:52:43.51 (10.088s)&#xA;&gt; Enter [AfterEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:52:43.51&#xA;&lt; Exit [AfterEach] [Setting] hash size - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:52:43.641 (131ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [TCP] tcp-services should reload after an update in the configuration" classname="nginx-ingress-controller e2e suite" status="passed" time="26.197627954">
              <system-err>&gt; Enter [BeforeEach] [TCP] tcp-services - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:52:43.641&#xA;&lt; Exit [BeforeEach] [TCP] tcp-services - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:52:50.469 (6.828s)&#xA;&gt; Enter [BeforeEach] [TCP] tcp-services - /go/src/k8s.io/ingress-nginx/test/e2e/tcpudp/tcp.go:42 @ 03/16/23 06:52:50.469&#xA;&lt; Exit [BeforeEach] [TCP] tcp-services - /go/src/k8s.io/ingress-nginx/test/e2e/tcpudp/tcp.go:42 @ 03/16/23 06:52:50.471 (1ms)&#xA;&gt; Enter [It] should reload after an update in the configuration - /go/src/k8s.io/ingress-nginx/test/e2e/tcpudp/tcp.go:169 @ 03/16/23 06:52:50.471&#xA;STEP: setting up a first deployment - /go/src/k8s.io/ingress-nginx/test/e2e/tcpudp/tcp.go:171 @ 03/16/23 06:52:50.471&#xA;STEP: updating the tcp service to a second deployment - /go/src/k8s.io/ingress-nginx/test/e2e/tcpudp/tcp.go:196 @ 03/16/23 06:52:57.571&#xA;&lt; Exit [It] should reload after an update in the configuration - /go/src/k8s.io/ingress-nginx/test/e2e/tcpudp/tcp.go:169 @ 03/16/23 06:53:09.709 (19.238s)&#xA;&gt; Enter [AfterEach] [TCP] tcp-services - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:53:09.709&#xA;&lt; Exit [AfterEach] [TCP] tcp-services - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:53:09.839 (129ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* when external authentication is configured should create additional upstream block when auth-keepalive is set with HTTP/1.x" classname="nginx-ingress-controller e2e suite" status="passed" time="48.266000651">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:53:09.839&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:53:16.659 (6.819s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 06:53:16.659&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 06:53:20.676 (4.017s)&#xA;&gt; Enter [BeforeEach] when external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:458 @ 03/16/23 06:53:20.676&#xA;&lt; Exit [BeforeEach] when external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:458 @ 03/16/23 06:53:34.807 (14.131s)&#xA;&gt; Enter [It] should create additional upstream block when auth-keepalive is set with HTTP/1.x - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:623 @ 03/16/23 06:53:34.807&#xA;&lt; Exit [It] should create additional upstream block when auth-keepalive is set with HTTP/1.x - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:623 @ 03/16/23 06:53:57.937 (23.13s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:53:57.937&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:53:58.105 (168ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Service] Type ExternalName should return 200 for service type=ExternalName using a port name" classname="nginx-ingress-controller e2e suite" status="passed" time="17.803047537">
              <system-err>&gt; Enter [BeforeEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:53:58.106&#xA;&lt; Exit [BeforeEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:54:04.916 (6.81s)&#xA;&gt; Enter [It] should return 200 for service type=ExternalName using a port name - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_externalname.go:184 @ 03/16/23 06:54:04.916&#xA;&lt; Exit [It] should return 200 for service type=ExternalName using a port name - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_externalname.go:184 @ 03/16/23 06:54:15.76 (10.844s)&#xA;&gt; Enter [AfterEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:54:15.76&#xA;&lt; Exit [AfterEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:54:15.909 (149ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] configmap server-snippet should add global server-snippet and drop annotations per admin config" classname="nginx-ingress-controller e2e suite" status="passed" time="43.261630468">
              <system-err>&gt; Enter [BeforeEach] [Setting] configmap server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:54:15.909&#xA;&lt; Exit [BeforeEach] [Setting] configmap server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:54:22.736 (6.826s)&#xA;&gt; Enter [BeforeEach] [Setting] configmap server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/settings/server_snippet.go:31 @ 03/16/23 06:54:22.736&#xA;&lt; Exit [BeforeEach] [Setting] configmap server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/settings/server_snippet.go:31 @ 03/16/23 06:54:26.768 (4.032s)&#xA;&gt; Enter [It] should add global server-snippet and drop annotations per admin config - /go/src/k8s.io/ingress-nginx/test/e2e/settings/server_snippet.go:92 @ 03/16/23 06:54:26.768&#xA;&lt; Exit [It] should add global server-snippet and drop annotations per admin config - /go/src/k8s.io/ingress-nginx/test/e2e/settings/server_snippet.go:92 @ 03/16/23 06:54:58.954 (32.186s)&#xA;&gt; Enter [AfterEach] [Setting] configmap server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:54:58.954&#xA;&lt; Exit [AfterEach] [Setting] configmap server-snippet - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:54:59.171 (217ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] cors-* should not allow - single origin with port and origin without port" classname="nginx-ingress-controller e2e suite" status="passed" time="21.006013154">
              <system-err>&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:54:59.171&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:55:08.993 (9.822s)&#xA;&gt; Enter [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 03/16/23 06:55:08.993&#xA;&lt; Exit [BeforeEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:31 @ 03/16/23 06:55:13.018 (4.024s)&#xA;&gt; Enter [It] should not allow - single origin with port and origin without port - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:386 @ 03/16/23 06:55:13.018&#xA;&lt; Exit [It] should not allow - single origin with port and origin without port - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/cors.go:386 @ 03/16/23 06:55:20.029 (7.011s)&#xA;&gt; Enter [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:55:20.029&#xA;&lt; Exit [AfterEach] [Annotations] cors-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:55:20.177 (148ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Dynamic $proxy_host should exist a proxy_host using the upstream-vhost annotation value" classname="nginx-ingress-controller e2e suite" status="passed" time="22.136385037">
              <system-err>&gt; Enter [BeforeEach] Dynamic $proxy_host - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:55:20.178&#xA;&lt; Exit [BeforeEach] Dynamic $proxy_host - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:55:28.05 (7.872s)&#xA;&gt; Enter [BeforeEach] Dynamic $proxy_host - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_host.go:32 @ 03/16/23 06:55:28.05&#xA;&lt; Exit [BeforeEach] Dynamic $proxy_host - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_host.go:32 @ 03/16/23 06:55:32.068 (4.018s)&#xA;&gt; Enter [It] should exist a proxy_host using the upstream-vhost annotation value - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_host.go:57 @ 03/16/23 06:55:32.068&#xA;&lt; Exit [It] should exist a proxy_host using the upstream-vhost annotation value - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_host.go:57 @ 03/16/23 06:55:42.172 (10.104s)&#xA;&gt; Enter [AfterEach] Dynamic $proxy_host - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:55:42.172&#xA;&lt; Exit [AfterEach] Dynamic $proxy_host - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:55:42.314 (142ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] use-proxy-protocol should respect proto passed by the PROXY Protocol server port" classname="nginx-ingress-controller e2e suite" status="passed" time="111.134124736">
              <system-err>&gt; Enter [BeforeEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:55:42.314&#xA;&lt; Exit [BeforeEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:55:50.168 (7.853s)&#xA;&gt; Enter [BeforeEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_protocol.go:41 @ 03/16/23 06:55:50.168&#xA;&lt; Exit [BeforeEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_protocol.go:41 @ 03/16/23 06:56:01.193 (11.025s)&#xA;&gt; Enter [It] should respect proto passed by the PROXY Protocol server port - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_protocol.go:79 @ 03/16/23 06:56:01.193&#xA;&lt; Exit [It] should respect proto passed by the PROXY Protocol server port - /go/src/k8s.io/ingress-nginx/test/e2e/settings/proxy_protocol.go:79 @ 03/16/23 06:57:33.316 (1m32.122s)&#xA;&gt; Enter [AfterEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:57:33.316&#xA;&lt; Exit [AfterEach] [Setting] use-proxy-protocol - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:57:33.448 (133ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* cookie set by external authentication server user does not retain cookie if upstream returns error status code" classname="nginx-ingress-controller e2e suite" status="passed" time="30.135713764">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:57:33.449&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:57:40.287 (6.838s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 06:57:40.287&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 06:57:42.304 (2.017s)&#xA;&gt; Enter [BeforeEach] cookie set by external authentication server - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:383 @ 03/16/23 06:57:42.304&#xA;&lt; Exit [BeforeEach] cookie set by external authentication server - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:383 @ 03/16/23 06:58:03.429 (21.125s)&#xA;&gt; Enter [It] user does not retain cookie if upstream returns error status code - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:422 @ 03/16/23 06:58:03.429&#xA;&lt; Exit [It] user does not retain cookie if upstream returns error status code - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:422 @ 03/16/23 06:58:03.432 (3ms)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:58:03.432&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:58:03.584 (153ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* when canary is created should route requests to the correct upstream if the mainline ingress is modified" classname="nginx-ingress-controller e2e suite" status="passed" time="37.736594314">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:58:03.585&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:58:11.94 (8.355s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 03/16/23 06:58:11.94&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 03/16/23 06:58:19.976 (8.036s)&#xA;&gt; Enter [It] should route requests to the correct upstream if the mainline ingress is modified - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:250 @ 03/16/23 06:58:19.976&#xA;STEP: routing requests destined fro the mainline ingress to the mainline upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:288 @ 03/16/23 06:58:41.179&#xA;STEP: routing requests destined for the canary ingress to the canary upstream - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:297 @ 03/16/23 06:58:41.183&#xA;&lt; Exit [It] should route requests to the correct upstream if the mainline ingress is modified - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:250 @ 03/16/23 06:58:41.185 (21.209s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:58:41.185&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:58:41.321 (136ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] affinity session-cookie-name should not set affinity across all server locations when using separate ingresses" classname="nginx-ingress-controller e2e suite" status="passed" time="29.110565847">
              <system-err>&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:58:41.322&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:58:49.156 (7.835s)&#xA;&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 03/16/23 06:58:49.156&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 03/16/23 06:58:53.181 (4.025s)&#xA;&gt; Enter [It] should not set affinity across all server locations when using separate ingresses - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:320 @ 03/16/23 06:58:53.181&#xA;&lt; Exit [It] should not set affinity across all server locations when using separate ingresses - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:320 @ 03/16/23 06:59:10.289 (17.108s)&#xA;&gt; Enter [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:59:10.289&#xA;&lt; Exit [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:59:10.432 (143ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* when external authentication is configured keeps processing new ingresses even if one of the existing ingresses is misconfigured" classname="nginx-ingress-controller e2e suite" status="passed" time="36.290706767">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:59:10.433&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:59:17.279 (6.846s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 06:59:17.279&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 06:59:21.299 (4.021s)&#xA;&gt; Enter [BeforeEach] when external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:458 @ 03/16/23 06:59:21.299&#xA;&lt; Exit [BeforeEach] when external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:458 @ 03/16/23 06:59:35.448 (14.149s)&#xA;&gt; Enter [It] keeps processing new ingresses even if one of the existing ingresses is misconfigured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:505 @ 03/16/23 06:59:35.448&#xA;&lt; Exit [It] keeps processing new ingresses even if one of the existing ingresses is misconfigured - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:505 @ 03/16/23 06:59:46.563 (11.115s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:59:46.563&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 06:59:46.723 (160ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] rewrite-target use-regex enable-rewrite-log should write rewrite logs" classname="nginx-ingress-controller e2e suite" status="passed" time="24.132200534">
              <system-err>&gt; Enter [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:59:46.724&#xA;&lt; Exit [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 06:59:53.546 (6.822s)&#xA;&gt; Enter [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:33 @ 03/16/23 06:59:53.546&#xA;&lt; Exit [BeforeEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:33 @ 03/16/23 06:59:57.567 (4.021s)&#xA;&gt; Enter [It] should write rewrite logs - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:37 @ 03/16/23 06:59:57.567&#xA;STEP: setting enable-rewrite-log annotation - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:38 @ 03/16/23 06:59:57.567&#xA;&lt; Exit [It] should write rewrite logs - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/rewrite.go:37 @ 03/16/23 07:00:10.673 (13.106s)&#xA;&gt; Enter [AfterEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:00:10.673&#xA;&lt; Exit [AfterEach] [Annotations] rewrite-target use-regex enable-rewrite-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:00:10.856 (183ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] modsecurity owasp should enable modsecurity when enable-owasp-modsecurity-crs is set to true" classname="nginx-ingress-controller e2e suite" status="passed" time="40.116909499">
              <system-err>&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:00:10.857&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:00:17.705 (6.848s)&#xA;&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 03/16/23 07:00:17.705&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 03/16/23 07:00:21.726 (4.021s)&#xA;&gt; Enter [It] should enable modsecurity when enable-owasp-modsecurity-crs is set to true - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:225 @ 03/16/23 07:00:21.726&#xA;&lt; Exit [It] should enable modsecurity when enable-owasp-modsecurity-crs is set to true - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:225 @ 03/16/23 07:00:50.842 (29.116s)&#xA;&gt; Enter [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:00:50.842&#xA;&lt; Exit [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:00:50.974 (132ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Service] Type ExternalName should return 200 for service type=ExternalName without a port defined" classname="nginx-ingress-controller e2e suite" status="passed" time="17.898194083">
              <system-err>&gt; Enter [BeforeEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:00:50.974&#xA;&lt; Exit [BeforeEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:00:57.774 (6.8s)&#xA;&gt; Enter [It] should return 200 for service type=ExternalName without a port defined - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_externalname.go:95 @ 03/16/23 07:00:57.774&#xA;&lt; Exit [It] should return 200 for service type=ExternalName without a port defined - /go/src/k8s.io/ingress-nginx/test/e2e/servicebackend/service_externalname.go:95 @ 03/16/23 07:01:08.728 (10.955s)&#xA;&gt; Enter [AfterEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:01:08.728&#xA;&lt; Exit [AfterEach] [Service] Type ExternalName - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:01:08.872 (144ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log disable-access-log set access_log off" classname="nginx-ingress-controller e2e suite" status="passed" time="28.179490139">
              <system-err>&gt; Enter [BeforeEach] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:01:08.872&#xA;&lt; Exit [BeforeEach] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:01:15.766 (6.894s)&#xA;&gt; Enter [BeforeEach] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/disableaccesslog.go:31 @ 03/16/23 07:01:15.766&#xA;&lt; Exit [BeforeEach] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/disableaccesslog.go:31 @ 03/16/23 07:01:19.787 (4.021s)&#xA;&gt; Enter [It] disable-access-log set access_log off - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/disableaccesslog.go:35 @ 03/16/23 07:01:19.787&#xA;&lt; Exit [It] disable-access-log set access_log off - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/disableaccesslog.go:35 @ 03/16/23 07:01:36.908 (17.122s)&#xA;&gt; Enter [AfterEach] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:01:36.908&#xA;&lt; Exit [AfterEach] [Annotations] disable-access-log disable-http-access-log disable-stream-access-log - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:01:37.052 (143ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] x-forwarded-prefix should set the X-Forwarded-Prefix to the annotation value" classname="nginx-ingress-controller e2e suite" status="passed" time="21.171181475">
              <system-err>&gt; Enter [BeforeEach] [Annotations] x-forwarded-prefix - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:01:37.052&#xA;&lt; Exit [BeforeEach] [Annotations] x-forwarded-prefix - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:01:43.993 (6.941s)&#xA;&gt; Enter [BeforeEach] [Annotations] x-forwarded-prefix - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/xforwardedprefix.go:31 @ 03/16/23 07:01:43.993&#xA;&lt; Exit [BeforeEach] [Annotations] x-forwarded-prefix - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/xforwardedprefix.go:31 @ 03/16/23 07:01:48.009 (4.016s)&#xA;&gt; Enter [It] should set the X-Forwarded-Prefix to the annotation value - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/xforwardedprefix.go:35 @ 03/16/23 07:01:48.009&#xA;&lt; Exit [It] should set the X-Forwarded-Prefix to the annotation value - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/xforwardedprefix.go:35 @ 03/16/23 07:01:58.093 (10.084s)&#xA;&gt; Enter [AfterEach] [Annotations] x-forwarded-prefix - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:01:58.093&#xA;&lt; Exit [AfterEach] [Annotations] x-forwarded-prefix - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:01:58.223 (131ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [TCP] tcp-services should expose an ExternalName TCP service" classname="nginx-ingress-controller e2e suite" status="passed" time="11.884635925">
              <system-err>&gt; Enter [BeforeEach] [TCP] tcp-services - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:01:58.224&#xA;&lt; Exit [BeforeEach] [TCP] tcp-services - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:02:06.027 (7.803s)&#xA;&gt; Enter [BeforeEach] [TCP] tcp-services - /go/src/k8s.io/ingress-nginx/test/e2e/tcpudp/tcp.go:42 @ 03/16/23 07:02:06.027&#xA;&lt; Exit [BeforeEach] [TCP] tcp-services - /go/src/k8s.io/ingress-nginx/test/e2e/tcpudp/tcp.go:42 @ 03/16/23 07:02:06.028 (2ms)&#xA;&gt; Enter [It] should expose an ExternalName TCP service - /go/src/k8s.io/ingress-nginx/test/e2e/tcpudp/tcp.go:80 @ 03/16/23 07:02:06.028&#xA;&lt; Exit [It] should expose an ExternalName TCP service - /go/src/k8s.io/ingress-nginx/test/e2e/tcpudp/tcp.go:80 @ 03/16/23 07:02:09.967 (3.938s)&#xA;&gt; Enter [AfterEach] [TCP] tcp-services - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:02:09.967&#xA;&lt; Exit [AfterEach] [TCP] tcp-services - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:02:10.108 (142ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Configure OpenTracing should exists opentracing_operation_name directive when is configured" classname="nginx-ingress-controller e2e suite" status="passed" time="26.607211255">
              <system-err>&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:02:10.109&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:02:17.441 (7.332s)&#xA;&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 03/16/23 07:02:17.441&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 03/16/23 07:02:19.454 (2.013s)&#xA;&gt; Enter [It] should exists opentracing_operation_name directive when is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:115 @ 03/16/23 07:02:19.454&#xA;&lt; Exit [It] should exists opentracing_operation_name directive when is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:115 @ 03/16/23 07:02:36.583 (17.129s)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:02:36.583&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:02:36.716 (132ms)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 03/16/23 07:02:36.716&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 03/16/23 07:02:36.716 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] auth-* should return status code 401 when authentication is configured with invalid content and Authorization header is sent" classname="nginx-ingress-controller e2e suite" status="passed" time="24.141356953">
              <system-err>&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:02:36.716&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:02:46.589 (9.873s)&#xA;&gt; Enter [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 07:02:46.59&#xA;&lt; Exit [BeforeEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:42 @ 03/16/23 07:02:50.613 (4.024s)&#xA;&gt; Enter [It] should return status code 401 when authentication is configured with invalid content and Authorization header is sent - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:227 @ 03/16/23 07:02:50.613&#xA;&lt; Exit [It] should return status code 401 when authentication is configured with invalid content and Authorization header is sent - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/auth.go:227 @ 03/16/23 07:03:00.709 (10.096s)&#xA;&gt; Enter [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:03:00.709&#xA;&lt; Exit [AfterEach] [Annotations] auth-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:03:00.858 (149ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] keep-alive keep-alive-requests Check the upstream keep alive should set keepalive connection to upstream server" classname="nginx-ingress-controller e2e suite" status="passed" time="31.075711047">
              <system-err>&gt; Enter [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:03:00.858&#xA;&lt; Exit [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:03:08.662 (7.804s)&#xA;&gt; Enter [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:33 @ 03/16/23 07:03:08.662&#xA;&lt; Exit [BeforeEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:33 @ 03/16/23 07:03:21.688 (13.026s)&#xA;&gt; Enter [It] should set keepalive connection to upstream server - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:59 @ 03/16/23 07:03:21.688&#xA;&lt; Exit [It] should set keepalive connection to upstream server - /go/src/k8s.io/ingress-nginx/test/e2e/settings/keep-alive.go:59 @ 03/16/23 07:03:31.787 (10.099s)&#xA;&gt; Enter [AfterEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:03:31.787&#xA;&lt; Exit [AfterEach] [Setting] keep-alive keep-alive-requests - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:03:31.934 (147ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [SSL] TLS protocols, ciphers and headers) ports or X-Forwarded-Host check during HTTP tp HTTPS redirection should not use ports during the HTTP to HTTPS redirection" classname="nginx-ingress-controller e2e suite" status="passed" time="26.202150032">
              <system-err>&gt; Enter [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:03:31.934&#xA;&lt; Exit [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:03:40.897 (8.963s)&#xA;&gt; Enter [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:35 @ 03/16/23 07:03:40.897&#xA;&lt; Exit [BeforeEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:35 @ 03/16/23 07:03:48.914 (8.017s)&#xA;&gt; Enter [It] should not use ports during the HTTP to HTTPS redirection - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:187 @ 03/16/23 07:03:48.914&#xA;&lt; Exit [It] should not use ports during the HTTP to HTTPS redirection - /go/src/k8s.io/ingress-nginx/test/e2e/settings/tls.go:187 @ 03/16/23 07:03:57.988 (9.074s)&#xA;&gt; Enter [AfterEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:03:57.988&#xA;&lt; Exit [AfterEach] [Setting] [SSL] TLS protocols, ciphers and headers) - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:03:58.136 (148ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] affinity session-cookie-name should set sticky cookie without host" classname="nginx-ingress-controller e2e suite" status="passed" time="21.153662539">
              <system-err>&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:03:58.137&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:04:04.947 (6.81s)&#xA;&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 03/16/23 07:04:04.947&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 03/16/23 07:04:08.968 (4.021s)&#xA;&gt; Enter [It] should set sticky cookie without host - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:352 @ 03/16/23 07:04:08.968&#xA;&lt; Exit [It] should set sticky cookie without host - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:352 @ 03/16/23 07:04:19.115 (10.147s)&#xA;&gt; Enter [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:04:19.115&#xA;&lt; Exit [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:04:19.291 (176ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Default Backend] custom service uses custom default backend that returns 200 as status code" classname="nginx-ingress-controller e2e suite" status="passed" time="24.171270621">
              <system-err>&gt; Enter [BeforeEach] [Default Backend] custom service - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:04:19.292&#xA;&lt; Exit [BeforeEach] [Default Backend] custom service - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:04:28.153 (8.862s)&#xA;&gt; Enter [It] uses custom default backend that returns 200 as status code - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/custom_default_backend.go:36 @ 03/16/23 07:04:28.153&#xA;&lt; Exit [It] uses custom default backend that returns 200 as status code - /go/src/k8s.io/ingress-nginx/test/e2e/defaultbackend/custom_default_backend.go:36 @ 03/16/23 07:04:43.292 (15.139s)&#xA;&gt; Enter [AfterEach] [Default Backend] custom service - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:04:43.292&#xA;&lt; Exit [AfterEach] [Default Backend] custom service - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:04:43.463 (171ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] affinity session-cookie-name should work with use-regex annotation and session-cookie-path" classname="nginx-ingress-controller e2e suite" status="passed" time="22.582556134">
              <system-err>&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:04:43.463&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:04:51.783 (8.319s)&#xA;&gt; Enter [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 03/16/23 07:04:51.783&#xA;&lt; Exit [BeforeEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:38 @ 03/16/23 07:04:55.8 (4.018s)&#xA;&gt; Enter [It] should work with use-regex annotation and session-cookie-path - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:270 @ 03/16/23 07:04:55.8&#xA;&lt; Exit [It] should work with use-regex annotation and session-cookie-path - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/affinity.go:270 @ 03/16/23 07:05:05.915 (10.115s)&#xA;&gt; Enter [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:05:05.915&#xA;&lt; Exit [AfterEach] [Annotations] affinity session-cookie-name - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:05:06.046 (131ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] proxy-* should setup proxy cookies" classname="nginx-ingress-controller e2e suite" status="passed" time="21.111387284">
              <system-err>&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:05:06.046&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:05:12.87 (6.824s)&#xA;&gt; Enter [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 03/16/23 07:05:12.87&#xA;&lt; Exit [BeforeEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:32 @ 03/16/23 07:05:16.899 (4.029s)&#xA;&gt; Enter [It] should setup proxy cookies - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:215 @ 03/16/23 07:05:16.899&#xA;&lt; Exit [It] should setup proxy cookies - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/proxy.go:215 @ 03/16/23 07:05:26.972 (10.073s)&#xA;&gt; Enter [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:05:26.972&#xA;&lt; Exit [AfterEach] [Annotations] proxy-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:05:27.157 (185ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Shutdown] ingress controller should shutdown in less than 60 secons without pending connections" classname="nginx-ingress-controller e2e suite" status="passed" time="30.178174148">
              <system-err>&gt; Enter [BeforeEach] [Shutdown] ingress controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:05:27.158&#xA;&lt; Exit [BeforeEach] [Shutdown] ingress controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:05:35.023 (7.865s)&#xA;&gt; Enter [BeforeEach] [Shutdown] ingress controller - /go/src/k8s.io/ingress-nginx/test/e2e/gracefulshutdown/shutdown.go:35 @ 03/16/23 07:05:35.023&#xA;&lt; Exit [BeforeEach] [Shutdown] ingress controller - /go/src/k8s.io/ingress-nginx/test/e2e/gracefulshutdown/shutdown.go:35 @ 03/16/23 07:05:46.064 (11.041s)&#xA;&gt; Enter [It] should shutdown in less than 60 secons without pending connections - /go/src/k8s.io/ingress-nginx/test/e2e/gracefulshutdown/shutdown.go:40 @ 03/16/23 07:05:46.064&#xA;&lt; Exit [It] should shutdown in less than 60 secons without pending connections - /go/src/k8s.io/ingress-nginx/test/e2e/gracefulshutdown/shutdown.go:40 @ 03/16/23 07:05:57.165 (11.101s)&#xA;&gt; Enter [AfterEach] [Shutdown] ingress controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:05:57.165&#xA;&lt; Exit [AfterEach] [Shutdown] ingress controller - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:05:57.336 (171ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] canary-* when canaried by weight should route requests only to canary if canary weight is equal to canary weight total" classname="nginx-ingress-controller e2e suite" status="passed" time="33.083086307">
              <system-err>&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:05:57.337&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:06:05.132 (7.795s)&#xA;&gt; Enter [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 03/16/23 07:06:05.132&#xA;&lt; Exit [BeforeEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:39 @ 03/16/23 07:06:13.176 (8.044s)&#xA;&gt; Enter [It] should route requests only to canary if canary weight is equal to canary weight total - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:775 @ 03/16/23 07:06:13.176&#xA;&lt; Exit [It] should route requests only to canary if canary weight is equal to canary weight total - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/canary.go:775 @ 03/16/23 07:06:30.281 (17.104s)&#xA;&gt; Enter [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:06:30.281&#xA;&lt; Exit [AfterEach] [Annotations] canary-* - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:06:30.42 (139ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] http2-push-preload enable the http2-push-preload directive" classname="nginx-ingress-controller e2e suite" status="passed" time="21.117863523">
              <system-err>&gt; Enter [BeforeEach] [Annotations] http2-push-preload - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:06:30.42&#xA;&lt; Exit [BeforeEach] [Annotations] http2-push-preload - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:06:37.255 (6.835s)&#xA;&gt; Enter [BeforeEach] [Annotations] http2-push-preload - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/http2pushpreload.go:30 @ 03/16/23 07:06:37.255&#xA;&lt; Exit [BeforeEach] [Annotations] http2-push-preload - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/http2pushpreload.go:30 @ 03/16/23 07:06:41.281 (4.027s)&#xA;&gt; Enter [It] enable the http2-push-preload directive - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/http2pushpreload.go:34 @ 03/16/23 07:06:41.281&#xA;&lt; Exit [It] enable the http2-push-preload directive - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/http2pushpreload.go:34 @ 03/16/23 07:06:51.409 (10.127s)&#xA;&gt; Enter [AfterEach] [Annotations] http2-push-preload - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:06:51.409&#xA;&lt; Exit [AfterEach] [Annotations] http2-push-preload - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:06:51.538 (129ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Annotations] modsecurity owasp should enable modsecurity globally and with modsecurity-snippet block requests" classname="nginx-ingress-controller e2e suite" status="passed" time="40.110763626">
              <system-err>&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:06:51.538&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:06:58.356 (6.818s)&#xA;&gt; Enter [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 03/16/23 07:06:58.356&#xA;&lt; Exit [BeforeEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:31 @ 03/16/23 07:07:02.38 (4.024s)&#xA;&gt; Enter [It] should enable modsecurity globally and with modsecurity-snippet block requests - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:189 @ 03/16/23 07:07:02.38&#xA;&lt; Exit [It] should enable modsecurity globally and with modsecurity-snippet block requests - /go/src/k8s.io/ingress-nginx/test/e2e/annotations/modsecurity/modsecurity.go:189 @ 03/16/23 07:07:31.508 (29.128s)&#xA;&gt; Enter [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:07:31.508&#xA;&lt; Exit [AfterEach] [Annotations] modsecurity owasp - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:07:31.649 (141ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Configure OpenTracing should not exists opentracing directive" classname="nginx-ingress-controller e2e suite" status="passed" time="28.151534729">
              <system-err>&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:07:31.649&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:07:38.484 (6.835s)&#xA;&gt; Enter [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 03/16/23 07:07:38.484&#xA;&lt; Exit [BeforeEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:51 @ 03/16/23 07:07:42.501 (4.017s)&#xA;&gt; Enter [It] should not exists opentracing directive - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:58 @ 03/16/23 07:07:42.501&#xA;&lt; Exit [It] should not exists opentracing directive - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:58 @ 03/16/23 07:07:59.617 (17.116s)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:07:59.617&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:07:59.801 (184ms)&#xA;&gt; Enter [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 03/16/23 07:07:59.801&#xA;&lt; Exit [AfterEach] Configure OpenTracing - /go/src/k8s.io/ingress-nginx/test/e2e/settings/opentracing.go:55 @ 03/16/23 07:07:59.801 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Security] global-auth-url when global external authentication is configured should add custom error page when global-auth-signin url is configured" classname="nginx-ingress-controller e2e suite" status="passed" time="55.428426097">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:07:59.801&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:08:06.607 (6.806s)&#xA;&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 03/16/23 07:08:06.607&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 03/16/23 07:08:14.645 (8.038s)&#xA;&gt; Enter [BeforeEach] when global external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:58 @ 03/16/23 07:08:14.645&#xA;STEP: Adding an ingress rule for /foo - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:61 @ 03/16/23 07:08:14.645&#xA;STEP: Adding an ingress rule for /bar - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:69 @ 03/16/23 07:08:24.746&#xA;STEP: Adding a global-auth-url to configMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:77 @ 03/16/23 07:08:34.876&#xA;&lt; Exit [BeforeEach] when global external authentication is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:58 @ 03/16/23 07:08:44.96 (30.315s)&#xA;&gt; Enter [It] should add custom error page when global-auth-signin url is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:210 @ 03/16/23 07:08:44.96&#xA;STEP: Adding a global-auth-signin to configMap - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:215 @ 03/16/23 07:08:44.96&#xA;&lt; Exit [It] should add custom error page when global-auth-signin url is configured - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:210 @ 03/16/23 07:08:55.072 (10.113s)&#xA;&gt; Enter [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:08:55.072&#xA;&lt; Exit [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:08:55.23 (157ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] [Setting] [Security] global-auth-url cookie set by external authentication server user does not retain cookie if upstream returns error status code" classname="nginx-ingress-controller e2e suite" status="passed" time="43.163891754">
              <system-err>&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:08:55.23&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:83 @ 03/16/23 07:09:02.049 (6.819s)&#xA;&gt; Enter [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 03/16/23 07:09:02.049&#xA;&lt; Exit [BeforeEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:51 @ 03/16/23 07:09:10.092 (8.042s)&#xA;&gt; Enter [BeforeEach] cookie set by external authentication server - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:301 @ 03/16/23 07:09:10.092&#xA;&lt; Exit [BeforeEach] cookie set by external authentication server - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:301 @ 03/16/23 07:09:38.237 (28.145s)&#xA;&gt; Enter [It] user does not retain cookie if upstream returns error status code - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:337 @ 03/16/23 07:09:38.237&#xA;&lt; Exit [It] user does not retain cookie if upstream returns error status code - /go/src/k8s.io/ingress-nginx/test/e2e/settings/global_external_auth.go:337 @ 03/16/23 07:09:38.24 (3ms)&#xA;&gt; Enter [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:09:38.24&#xA;&lt; Exit [AfterEach] [Setting] [Security] global-auth-url - /go/src/k8s.io/ingress-nginx/test/e2e/framework/framework.go:84 @ 03/16/23 07:09:38.394 (154ms)&#xA;</system-err>
          </testcase>
      </testsuite>
  </testsuites>